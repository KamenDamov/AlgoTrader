{"ast":null,"code":"'use strict';\n\nconst log = require('npmlog');\n\nconst execFile = require('child_process').execFile;\n\nconst path = require('path');\n\nfunction logWithPrefix(log, prefix) {\n  function setPrefix(logFunction) {\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return logFunction.apply(null, [prefix, ...args]);\n    }; // eslint-disable-line\n  }\n\n  return {\n    silly: setPrefix(log.silly),\n    verbose: setPrefix(log.verbose),\n    info: setPrefix(log.info),\n    warn: setPrefix(log.warn),\n    error: setPrefix(log.error)\n  };\n}\n\nfunction regGetValue(key, value, addOpts, cb) {\n  const outReValue = value.replace(/\\W/g, '.');\n  const outRe = new RegExp(`^\\\\s+${outReValue}\\\\s+REG_\\\\w+\\\\s+(\\\\S.*)$`, 'im');\n  const reg = path.join(process.env.SystemRoot, 'System32', 'reg.exe');\n  const regArgs = ['query', key, '/v', value].concat(addOpts);\n  log.silly('reg', 'running', reg, regArgs);\n  const child = execFile(reg, regArgs, {\n    encoding: 'utf8'\n  }, function (err, stdout, stderr) {\n    log.silly('reg', 'reg.exe stdout = %j', stdout);\n\n    if (err || stderr.trim() !== '') {\n      log.silly('reg', 'reg.exe err = %j', err && (err.stack || err));\n      log.silly('reg', 'reg.exe stderr = %j', stderr);\n      return cb(err, stderr);\n    }\n\n    const result = outRe.exec(stdout);\n\n    if (!result) {\n      log.silly('reg', 'error parsing stdout');\n      return cb(new Error('Could not parse output of reg.exe'));\n    }\n\n    log.silly('reg', 'found: %j', result[1]);\n    cb(null, result[1]);\n  });\n  child.stdin.end();\n}\n\nfunction regSearchKeys(keys, value, addOpts, cb) {\n  var i = 0;\n\n  const search = () => {\n    log.silly('reg-search', 'looking for %j in %j', value, keys[i]);\n    regGetValue(keys[i], value, addOpts, (err, res) => {\n      ++i;\n\n      if (err && i < keys.length) {\n        return search();\n      }\n\n      cb(err, res);\n    });\n  };\n\n  search();\n}\n\nmodule.exports = {\n  logWithPrefix: logWithPrefix,\n  regGetValue: regGetValue,\n  regSearchKeys: regSearchKeys\n};","map":{"version":3,"names":["log","require","execFile","path","logWithPrefix","prefix","setPrefix","logFunction","args","apply","silly","verbose","info","warn","error","regGetValue","key","value","addOpts","cb","outReValue","replace","outRe","RegExp","reg","join","process","env","SystemRoot","regArgs","concat","child","encoding","err","stdout","stderr","trim","stack","result","exec","Error","stdin","end","regSearchKeys","keys","i","search","res","length","module","exports"],"sources":["C:/Users/Kamen/ML/AlgoTrader/node_modules/node-gyp/lib/util.js"],"sourcesContent":["'use strict'\n\nconst log = require('npmlog')\nconst execFile = require('child_process').execFile\nconst path = require('path')\n\nfunction logWithPrefix (log, prefix) {\n  function setPrefix (logFunction) {\n    return (...args) => logFunction.apply(null, [ prefix, ...args ]) // eslint-disable-line\n  }\n  return {\n    silly: setPrefix(log.silly),\n    verbose: setPrefix(log.verbose),\n    info: setPrefix(log.info),\n    warn: setPrefix(log.warn),\n    error: setPrefix(log.error)\n  }\n}\n\nfunction regGetValue (key, value, addOpts, cb) {\n  const outReValue = value.replace(/\\W/g, '.')\n  const outRe = new RegExp(`^\\\\s+${outReValue}\\\\s+REG_\\\\w+\\\\s+(\\\\S.*)$`, 'im')\n  const reg = path.join(process.env.SystemRoot, 'System32', 'reg.exe')\n  const regArgs = ['query', key, '/v', value].concat(addOpts)\n\n  log.silly('reg', 'running', reg, regArgs)\n  const child = execFile(reg, regArgs, { encoding: 'utf8' },\n    function (err, stdout, stderr) {\n      log.silly('reg', 'reg.exe stdout = %j', stdout)\n      if (err || stderr.trim() !== '') {\n        log.silly('reg', 'reg.exe err = %j', err && (err.stack || err))\n        log.silly('reg', 'reg.exe stderr = %j', stderr)\n        return cb(err, stderr)\n      }\n\n      const result = outRe.exec(stdout)\n      if (!result) {\n        log.silly('reg', 'error parsing stdout')\n        return cb(new Error('Could not parse output of reg.exe'))\n      }\n      log.silly('reg', 'found: %j', result[1])\n      cb(null, result[1])\n    })\n  child.stdin.end()\n}\n\nfunction regSearchKeys (keys, value, addOpts, cb) {\n  var i = 0\n  const search = () => {\n    log.silly('reg-search', 'looking for %j in %j', value, keys[i])\n    regGetValue(keys[i], value, addOpts, (err, res) => {\n      ++i\n      if (err && i < keys.length) { return search() }\n      cb(err, res)\n    })\n  }\n  search()\n}\n\nmodule.exports = {\n  logWithPrefix: logWithPrefix,\n  regGetValue: regGetValue,\n  regSearchKeys: regSearchKeys\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}