{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kamen\\\\ML\\\\AlgoTrader\\\\my-app\\\\src\\\\components\\\\LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst crypto = require('crypto-browserify');\n\nconst jwt = require('jsonwebtoken');\n\nconst {\n  secret\n} = require('./config.js');\n\nfunction LoginForm() {\n  _s();\n\n  const navigate = useNavigate();\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await axios.post('http://localhost:3001/login', {\n        name,\n        password\n      });\n      const token = jwt.sign(response, secret, {\n        expiresIn: '1h'\n      });\n      localStorage.setItem('token', token);\n      navigate('/UserDashboard');\n    } catch (error) {\n      console.error(error);\n      alert('Invalid username or password');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"OnrWeXlZCx/nWsUKnK4eDaaR0T4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["useState","axios","useNavigate","crypto","require","jwt","secret","LoginForm","navigate","name","setName","password","setPassword","handleSubmit","e","preventDefault","response","post","token","sign","expiresIn","localStorage","setItem","error","console","alert","target","value"],"sources":["C:/Users/Kamen/ML/AlgoTrader/my-app/src/components/LoginForm.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nconst crypto = require('crypto-browserify');\r\n\r\nconst jwt = require('jsonwebtoken');\r\nconst { secret } = require('./config.js');\r\n\r\nfunction LoginForm() {\r\n  const navigate = useNavigate();\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:3001/login', { name, password });\r\n      const token = jwt.sign(response, secret, { expiresIn: '1h' });\r\n      localStorage.setItem('token', token);      \r\n      navigate('/UserDashboard');\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert('Invalid username or password');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Name:\r\n        <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\r\n      </label>\r\n      <label>\r\n        Password:\r\n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n      </label>\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,mBAAD,CAAtB;;AAEA,MAAMC,GAAG,GAAGD,OAAO,CAAC,cAAD,CAAnB;;AACA,MAAM;EAAEE;AAAF,IAAaF,OAAO,CAAC,aAAD,CAA1B;;AAEA,SAASG,SAAT,GAAqB;EAAA;;EACnB,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;EACA,MAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;;EAEA,MAAMa,YAAY,GAAG,MAAOC,CAAP,IAAa;IAChCA,CAAC,CAACC,cAAF;;IACA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAN,CAAW,6BAAX,EAA0C;QAAER,IAAF;QAAQE;MAAR,CAA1C,CAAvB;MACA,MAAMO,KAAK,GAAGb,GAAG,CAACc,IAAJ,CAASH,QAAT,EAAmBV,MAAnB,EAA2B;QAAEc,SAAS,EAAE;MAAb,CAA3B,CAAd;MACAC,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,KAA9B;MACAV,QAAQ,CAAC,gBAAD,CAAR;IACD,CALD,CAKE,OAAOe,KAAP,EAAc;MACdC,OAAO,CAACD,KAAR,CAAcA,KAAd;MACAE,KAAK,CAAC,8BAAD,CAAL;IACD;EACF,CAXD;;EAaA,oBACE;IAAM,QAAQ,EAAEZ,YAAhB;IAAA,wBACE;MAAA,iCAEE;QAAO,IAAI,EAAC,MAAZ;QAAmB,KAAK,EAAEJ,IAA1B;QAAgC,QAAQ,EAAGK,CAAD,IAAOJ,OAAO,CAACI,CAAC,CAACY,MAAF,CAASC,KAAV;MAAxD;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAKE;MAAA,qCAEE;QAAO,IAAI,EAAC,UAAZ;QAAuB,KAAK,EAAEhB,QAA9B;QAAwC,QAAQ,EAAGG,CAAD,IAAOF,WAAW,CAACE,CAAC,CAACY,MAAF,CAASC,KAAV;MAApE;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QALF,eASE;MAAQ,IAAI,EAAC,QAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QATF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD;;GA/BQpB,S;UACUL,W;;;KADVK,S;AAiCT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}