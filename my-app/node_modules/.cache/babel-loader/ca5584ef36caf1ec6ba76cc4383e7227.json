{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kamen\\\\ML\\\\AlgoTrader\\\\my-app\\\\src\\\\components\\\\Landing.jsx\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport './style/landing.css';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Landing = () => {\n  _s();\n\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    // Create a WebSocket instance\n    const ws = new WebSocket('ws://localhost:3000'); // Handle the events related to the WebSocket connection\n\n    ws.onopen = () => {\n      console.log('WebSocket connection is open');\n    };\n\n    ws.onmessage = event => {\n      console.log('Received message:', event.data);\n    };\n\n    ws.onclose = () => {\n      console.log('WebSocket connection is closed');\n    }; // Set the WebSocket instance in the state\n\n\n    setSocket(ws); // Clean up the WebSocket instance on unmount\n\n    return () => {\n      ws.close();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"landing-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Test your \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"AI and algorithmic trading strategy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), \" today\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/Login\",\n      className: \"button\",\n      children: \"Log in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/SignUp\",\n      className: \"button\",\n      children: \"Sign up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => socket.send('Hello from client'),\n      children: \"Send message to server\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Landing, \"NvwYO9vJOwIMt5STdlMKfWhuxZw=\");\n\n_c = Landing;\nexport default Landing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Landing\");","map":{"version":3,"names":["Link","React","useState","useEffect","Landing","socket","setSocket","ws","WebSocket","onopen","console","log","onmessage","event","data","onclose","close","send"],"sources":["C:/Users/Kamen/ML/AlgoTrader/my-app/src/components/Landing.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\r\nimport './style/landing.css';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n\r\nconst Landing = () => {\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Create a WebSocket instance\r\n    const ws = new WebSocket('ws://localhost:3000');\r\n\r\n    // Handle the events related to the WebSocket connection\r\n    ws.onopen = () => {\r\n      console.log('WebSocket connection is open');\r\n    };\r\n\r\n    ws.onmessage = (event) => {\r\n      console.log('Received message:', event.data);\r\n    };\r\n\r\n    ws.onclose = () => {\r\n      console.log('WebSocket connection is closed');\r\n    };\r\n\r\n    // Set the WebSocket instance in the state\r\n    setSocket(ws);\r\n\r\n    // Clean up the WebSocket instance on unmount\r\n    return () => {\r\n      ws.close();\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className=\"landing-container\">\r\n      <h2>\r\n          Test your <span>AI and algorithmic trading strategy</span> today\r\n      </h2>\r\n      <Link to = '/Login' className='button'>Log in</Link>\r\n      <Link to = '/SignUp' className='button'>Sign up</Link>\r\n      <button onClick={() => socket.send('Hello from client')}>Send message to server</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,OAAO,qBAAP;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAGA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EACpB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,IAAD,CAApC;EAEAC,SAAS,CAAC,MAAM;IACd;IACA,MAAMI,EAAE,GAAG,IAAIC,SAAJ,CAAc,qBAAd,CAAX,CAFc,CAId;;IACAD,EAAE,CAACE,MAAH,GAAY,MAAM;MAChBC,OAAO,CAACC,GAAR,CAAY,8BAAZ;IACD,CAFD;;IAIAJ,EAAE,CAACK,SAAH,GAAgBC,KAAD,IAAW;MACxBH,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCE,KAAK,CAACC,IAAvC;IACD,CAFD;;IAIAP,EAAE,CAACQ,OAAH,GAAa,MAAM;MACjBL,OAAO,CAACC,GAAR,CAAY,gCAAZ;IACD,CAFD,CAbc,CAiBd;;;IACAL,SAAS,CAACC,EAAD,CAAT,CAlBc,CAoBd;;IACA,OAAO,MAAM;MACXA,EAAE,CAACS,KAAH;IACD,CAFD;EAGD,CAxBQ,EAwBN,EAxBM,CAAT;EAyBA,oBACE;IAAK,SAAS,EAAC,mBAAf;IAAA,wBACE;MAAA,sCACc;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADd;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAIE,QAAC,IAAD;MAAM,EAAE,EAAG,QAAX;MAAoB,SAAS,EAAC,QAA9B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE,QAAC,IAAD;MAAM,EAAE,EAAG,SAAX;MAAqB,SAAS,EAAC,QAA/B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALF,eAME;MAAQ,OAAO,EAAE,MAAMX,MAAM,CAACY,IAAP,CAAY,mBAAZ,CAAvB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD,CAtCD;;GAAMb,O;;KAAAA,O;AAwCN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}