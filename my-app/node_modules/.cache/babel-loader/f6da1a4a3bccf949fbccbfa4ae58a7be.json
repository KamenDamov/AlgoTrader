{"ast":null,"code":"/*!\r\n * cookie\r\n * Copyright(c) 2012-2014 Roman Shtylman\r\n * Copyright(c) 2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module exports.\r\n * @public\r\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n/**\r\n * Module variables.\r\n * @private\r\n */\n\nvar __toString = Object.prototype.toString;\n/**\r\n * RegExp to match field-content in RFC 7230 sec 3.2\r\n *\r\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\r\n * field-vchar   = VCHAR / obs-text\r\n * obs-text      = %x80-FF\r\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n/**\r\n * Parse a cookie header.\r\n *\r\n * Parse the given cookie header string into an object\r\n * The object has the various cookies as keys(names) => values\r\n *\r\n * @param {string} str\r\n * @param {object} [options]\r\n * @return {object}\r\n * @public\r\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {};\n  var opt = options || {};\n  var dec = opt.decode || decode;\n  var index = 0;\n\n  while (index < str.length) {\n    var eqIdx = str.indexOf('=', index); // no more cookie pairs\n\n    if (eqIdx === -1) {\n      break;\n    }\n\n    var endIdx = str.indexOf(';', index);\n\n    if (endIdx === -1) {\n      endIdx = str.length;\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1;\n      continue;\n    }\n\n    var key = str.slice(index, eqIdx).trim(); // only assign once\n\n    if (undefined === obj[key]) {\n      var val = str.slice(eqIdx + 1, endIdx).trim(); // quoted values\n\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1);\n      }\n\n      obj[key] = tryDecode(val, dec);\n    }\n\n    index = endIdx + 1;\n  }\n\n  return obj;\n}\n/**\r\n * Serialize data into a cookie header.\r\n *\r\n * Serialize the a name value pair into a cookie string suitable for\r\n * http headers. An optional options object specified cookie parameters.\r\n *\r\n * serialize('foo', 'bar', { httpOnly: true })\r\n *   => \"foo=bar; httpOnly\"\r\n *\r\n * @param {string} name\r\n * @param {string} val\r\n * @param {object} [options]\r\n * @return {string}\r\n * @public\r\n */\n\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid');\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    var expires = opt.expires;\n\n    if (!isDate(expires) || isNaN(expires.valueOf())) {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.priority) {\n    var priority = typeof opt.priority === 'string' ? opt.priority.toLowerCase() : opt.priority;\n\n    switch (priority) {\n      case 'low':\n        str += '; Priority=Low';\n        break;\n\n      case 'medium':\n        str += '; Priority=Medium';\n        break;\n\n      case 'high':\n        str += '; Priority=High';\n        break;\n\n      default:\n        throw new TypeError('option priority is invalid');\n    }\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string' ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n\n      case 'none':\n        str += '; SameSite=None';\n        break;\n\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n/**\r\n * URL-decode string value. Optimized to skip native call when no %.\r\n *\r\n * @param {string} str\r\n * @returns {string}\r\n */\n\n\nfunction decode(str) {\n  return str.indexOf('%') !== -1 ? decodeURIComponent(str) : str;\n}\n/**\r\n * URL-encode value.\r\n *\r\n * @param {string} str\r\n * @returns {string}\r\n */\n\n\nfunction encode(val) {\n  return encodeURIComponent(val);\n}\n/**\r\n * Determine if value is a Date.\r\n *\r\n * @param {*} val\r\n * @private\r\n */\n\n\nfunction isDate(val) {\n  return __toString.call(val) === '[object Date]' || val instanceof Date;\n}\n/**\r\n * Try decoding a string using a decoding function.\r\n *\r\n * @param {string} str\r\n * @param {function} decode\r\n * @private\r\n */\n\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}","map":{"version":3,"names":["exports","parse","serialize","__toString","Object","prototype","toString","fieldContentRegExp","str","options","TypeError","obj","opt","dec","decode","index","length","eqIdx","indexOf","endIdx","lastIndexOf","key","slice","trim","undefined","val","charCodeAt","tryDecode","name","enc","encode","test","value","maxAge","isNaN","isFinite","Math","floor","domain","path","expires","isDate","valueOf","toUTCString","httpOnly","secure","priority","toLowerCase","sameSite","decodeURIComponent","encodeURIComponent","call","Date","e"],"sources":["C:/Users/Kamen/ML/AlgoTrader/my-app/node_modules/cookie/index.js"],"sourcesContent":["/*!\r\n * cookie\r\n * Copyright(c) 2012-2014 Roman Shtylman\r\n * Copyright(c) 2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nexports.parse = parse;\r\nexports.serialize = serialize;\r\n\r\n/**\r\n * Module variables.\r\n * @private\r\n */\r\n\r\nvar __toString = Object.prototype.toString\r\n\r\n/**\r\n * RegExp to match field-content in RFC 7230 sec 3.2\r\n *\r\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\r\n * field-vchar   = VCHAR / obs-text\r\n * obs-text      = %x80-FF\r\n */\r\n\r\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\r\n\r\n/**\r\n * Parse a cookie header.\r\n *\r\n * Parse the given cookie header string into an object\r\n * The object has the various cookies as keys(names) => values\r\n *\r\n * @param {string} str\r\n * @param {object} [options]\r\n * @return {object}\r\n * @public\r\n */\r\n\r\nfunction parse(str, options) {\r\n  if (typeof str !== 'string') {\r\n    throw new TypeError('argument str must be a string');\r\n  }\r\n\r\n  var obj = {}\r\n  var opt = options || {};\r\n  var dec = opt.decode || decode;\r\n\r\n  var index = 0\r\n  while (index < str.length) {\r\n    var eqIdx = str.indexOf('=', index)\r\n\r\n    // no more cookie pairs\r\n    if (eqIdx === -1) {\r\n      break\r\n    }\r\n\r\n    var endIdx = str.indexOf(';', index)\r\n\r\n    if (endIdx === -1) {\r\n      endIdx = str.length\r\n    } else if (endIdx < eqIdx) {\r\n      // backtrack on prior semicolon\r\n      index = str.lastIndexOf(';', eqIdx - 1) + 1\r\n      continue\r\n    }\r\n\r\n    var key = str.slice(index, eqIdx).trim()\r\n\r\n    // only assign once\r\n    if (undefined === obj[key]) {\r\n      var val = str.slice(eqIdx + 1, endIdx).trim()\r\n\r\n      // quoted values\r\n      if (val.charCodeAt(0) === 0x22) {\r\n        val = val.slice(1, -1)\r\n      }\r\n\r\n      obj[key] = tryDecode(val, dec);\r\n    }\r\n\r\n    index = endIdx + 1\r\n  }\r\n\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Serialize data into a cookie header.\r\n *\r\n * Serialize the a name value pair into a cookie string suitable for\r\n * http headers. An optional options object specified cookie parameters.\r\n *\r\n * serialize('foo', 'bar', { httpOnly: true })\r\n *   => \"foo=bar; httpOnly\"\r\n *\r\n * @param {string} name\r\n * @param {string} val\r\n * @param {object} [options]\r\n * @return {string}\r\n * @public\r\n */\r\n\r\nfunction serialize(name, val, options) {\r\n  var opt = options || {};\r\n  var enc = opt.encode || encode;\r\n\r\n  if (typeof enc !== 'function') {\r\n    throw new TypeError('option encode is invalid');\r\n  }\r\n\r\n  if (!fieldContentRegExp.test(name)) {\r\n    throw new TypeError('argument name is invalid');\r\n  }\r\n\r\n  var value = enc(val);\r\n\r\n  if (value && !fieldContentRegExp.test(value)) {\r\n    throw new TypeError('argument val is invalid');\r\n  }\r\n\r\n  var str = name + '=' + value;\r\n\r\n  if (null != opt.maxAge) {\r\n    var maxAge = opt.maxAge - 0;\r\n\r\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\r\n      throw new TypeError('option maxAge is invalid')\r\n    }\r\n\r\n    str += '; Max-Age=' + Math.floor(maxAge);\r\n  }\r\n\r\n  if (opt.domain) {\r\n    if (!fieldContentRegExp.test(opt.domain)) {\r\n      throw new TypeError('option domain is invalid');\r\n    }\r\n\r\n    str += '; Domain=' + opt.domain;\r\n  }\r\n\r\n  if (opt.path) {\r\n    if (!fieldContentRegExp.test(opt.path)) {\r\n      throw new TypeError('option path is invalid');\r\n    }\r\n\r\n    str += '; Path=' + opt.path;\r\n  }\r\n\r\n  if (opt.expires) {\r\n    var expires = opt.expires\r\n\r\n    if (!isDate(expires) || isNaN(expires.valueOf())) {\r\n      throw new TypeError('option expires is invalid');\r\n    }\r\n\r\n    str += '; Expires=' + expires.toUTCString()\r\n  }\r\n\r\n  if (opt.httpOnly) {\r\n    str += '; HttpOnly';\r\n  }\r\n\r\n  if (opt.secure) {\r\n    str += '; Secure';\r\n  }\r\n\r\n  if (opt.priority) {\r\n    var priority = typeof opt.priority === 'string'\r\n      ? opt.priority.toLowerCase()\r\n      : opt.priority\r\n\r\n    switch (priority) {\r\n      case 'low':\r\n        str += '; Priority=Low'\r\n        break\r\n      case 'medium':\r\n        str += '; Priority=Medium'\r\n        break\r\n      case 'high':\r\n        str += '; Priority=High'\r\n        break\r\n      default:\r\n        throw new TypeError('option priority is invalid')\r\n    }\r\n  }\r\n\r\n  if (opt.sameSite) {\r\n    var sameSite = typeof opt.sameSite === 'string'\r\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\r\n\r\n    switch (sameSite) {\r\n      case true:\r\n        str += '; SameSite=Strict';\r\n        break;\r\n      case 'lax':\r\n        str += '; SameSite=Lax';\r\n        break;\r\n      case 'strict':\r\n        str += '; SameSite=Strict';\r\n        break;\r\n      case 'none':\r\n        str += '; SameSite=None';\r\n        break;\r\n      default:\r\n        throw new TypeError('option sameSite is invalid');\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n/**\r\n * URL-decode string value. Optimized to skip native call when no %.\r\n *\r\n * @param {string} str\r\n * @returns {string}\r\n */\r\n\r\nfunction decode (str) {\r\n  return str.indexOf('%') !== -1\r\n    ? decodeURIComponent(str)\r\n    : str\r\n}\r\n\r\n/**\r\n * URL-encode value.\r\n *\r\n * @param {string} str\r\n * @returns {string}\r\n */\r\n\r\nfunction encode (val) {\r\n  return encodeURIComponent(val)\r\n}\r\n\r\n/**\r\n * Determine if value is a Date.\r\n *\r\n * @param {*} val\r\n * @private\r\n */\r\n\r\nfunction isDate (val) {\r\n  return __toString.call(val) === '[object Date]' ||\r\n    val instanceof Date\r\n}\r\n\r\n/**\r\n * Try decoding a string using a decoding function.\r\n *\r\n * @param {string} str\r\n * @param {function} decode\r\n * @private\r\n */\r\n\r\nfunction tryDecode(str, decode) {\r\n  try {\r\n    return decode(str);\r\n  } catch (e) {\r\n    return str;\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}