{"ast":null,"code":"// Copyright 2011 Timothy J Fontaine <tjfontaine@gmail.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE\n'use strict';\n\nvar ipaddr = require('ipaddr.js'),\n    net = require('net'),\n    util = require('util'),\n    EventEmitter = require('events').EventEmitter,\n    PendingRequests = require('./pending'),\n    Packet = require('./packet'),\n    consts = require('native-dns-packet').consts,\n    utils = require('./utils'),\n    platform = require('./platform');\n\nvar A = consts.NAME_TO_QTYPE.A,\n    AAAA = consts.NAME_TO_QTYPE.AAAA,\n    MX = consts.NAME_TO_QTYPE.MX,\n    TXT = consts.NAME_TO_QTYPE.TXT,\n    NS = consts.NAME_TO_QTYPE.NS,\n    CNAME = consts.NAME_TO_QTYPE.CNAME,\n    SRV = consts.NAME_TO_QTYPE.SRV,\n    PTR = consts.NAME_TO_QTYPE.PTR;\n\nvar debug = function () {};\n\nif (process.env.NODE_DEBUG && process.env.NODE_DEBUG.match(/dns/)) {\n  debug = function debug() {\n    var args = Array.prototype.slice.call(arguments);\n    console.error.apply(this, ['client', Date.now().toString()].concat(args));\n  };\n}\n\nvar Request = exports.Request = function (opts) {\n  if (!(this instanceof Request)) return new Request(opts);\n  this.question = opts.question;\n  this.server = opts.server;\n  if (typeof this.server === 'string' || this.server instanceof String) this.server = {\n    address: this.server,\n    port: 53,\n    type: 'udp'\n  };\n  if (!this.server || !this.server.address || !net.isIP(this.server.address)) throw new Error('Server object must be supplied with at least address');\n  if (!this.server.type || ['udp', 'tcp'].indexOf(this.server.type) === -1) this.server.type = 'udp';\n  if (!this.server.port) this.server.port = 53;\n  this.timeout = opts.timeout || 4 * 1000;\n  this.try_edns = opts.try_edns || false;\n  this.fired = false;\n  this.id = undefined;\n\n  if (opts.cache || opts.cache === false) {\n    this.cache = opts.cache;\n  } else {\n    this.cache = platform.cache;\n  }\n\n  debug('request created', this.question);\n};\n\nutil.inherits(Request, EventEmitter);\n\nRequest.prototype.handle = function (err, answer, cached) {\n  if (!this.fired) {\n    debug('request handled', this.id, this.question);\n\n    if (!cached && this.cache && this.cache.store && answer) {\n      this.cache.store(answer);\n    }\n\n    this.emit('message', err, answer);\n    this.done();\n  }\n};\n\nRequest.prototype.done = function () {\n  debug('request finished', this.id, this.question);\n  this.fired = true;\n  clearTimeout(this.timer_);\n  PendingRequests.remove(this);\n  this.emit('end');\n  this.id = undefined;\n};\n\nRequest.prototype.handleTimeout = function () {\n  if (!this.fired) {\n    debug('request timedout', this.id, this.question);\n    this.emit('timeout');\n    this.done();\n  }\n};\n\nRequest.prototype.error = function (err) {\n  if (!this.fired) {\n    debug('request error', err, this.id, this.question);\n    this.emit('error', err);\n    this.done();\n  }\n};\n\nRequest.prototype.send = function () {\n  debug('request starting', this.question);\n  var self = this;\n\n  if (this.cache && this.cache.lookup) {\n    this.cache.lookup(this.question, function (results) {\n      var packet;\n\n      if (!results) {\n        self._send();\n      } else {\n        packet = new Packet();\n        packet.answer = results.slice();\n        self.handle(null, packet, true);\n      }\n    });\n  } else {\n    this._send();\n  }\n};\n\nRequest.prototype._send = function () {\n  debug('request not in cache', this.question);\n  var self = this;\n  this.timer_ = setTimeout(function () {\n    self.handleTimeout();\n  }, this.timeout);\n  PendingRequests.send(self);\n};\n\nRequest.prototype.cancel = function () {\n  debug('request cancelled', this.id, this.question);\n  this.emit('cancelled');\n  this.done();\n};\n\nvar _queue = [];\n\nvar sendQueued = function () {\n  debug('platform ready sending queued requests');\n\n  _queue.forEach(function (request) {\n    request.start();\n  });\n\n  _queue = [];\n};\n\nplatform.on('ready', function () {\n  sendQueued();\n});\n\nif (platform.ready) {\n  sendQueued();\n}\n\nvar Resolve = function Resolve(opts, cb) {\n  if (!(this instanceof Resolve)) return new Resolve(opts, cb);\n  this.opts = util._extend({\n    retryOnTruncate: true\n  }, opts);\n  this._domain = opts.domain;\n  this._rrtype = opts.rrtype;\n\n  this._buildQuestion(this._domain);\n\n  this._started = false;\n  this._current_server = undefined;\n  this._server_list = [];\n\n  if (opts.remote) {\n    this._server_list.push({\n      address: opts.remote,\n      port: 53,\n      type: 'tcp'\n    });\n\n    this._server_list.push({\n      address: opts.remote,\n      port: 53,\n      type: 'udp'\n    });\n  }\n\n  this._request = undefined;\n  this._type = 'getHostByName';\n  this._cb = cb;\n\n  if (!platform.ready) {\n    _queue.push(this);\n  } else {\n    this.start();\n  }\n};\n\nutil.inherits(Resolve, EventEmitter);\n\nResolve.prototype.cancel = function () {\n  if (this._request) {\n    this._request.cancel();\n  }\n};\n\nResolve.prototype._buildQuestion = function (name) {\n  debug('building question', name);\n  this.question = {\n    type: this._rrtype,\n    class: consts.NAME_TO_QCLASS.IN,\n    name: name\n  };\n};\n\nexports.Resolve = Resolve;\n\nResolve.prototype._emit = function (err, answer) {\n  debug('resolve end', this._domain);\n  var self = this;\n  process.nextTick(function () {\n    if (err) {\n      err.syscall = self._type;\n    }\n\n    self._cb(err, answer);\n  });\n};\n\nResolve.prototype._fillServers = function () {\n  debug('resolve filling servers', this._domain);\n  var tries = 0,\n      s,\n      t,\n      u,\n      slist;\n  slist = platform.name_servers;\n\n  while (this._server_list.length < platform.attempts) {\n    s = slist[tries % slist.length];\n    u = {\n      address: s.address,\n      port: s.port,\n      type: 'udp'\n    };\n    t = {\n      address: s.address,\n      port: s.port,\n      type: 'tcp'\n    };\n\n    this._server_list.push(u);\n\n    this._server_list.push(t);\n\n    tries += 1;\n  }\n\n  this._server_list.reverse();\n};\n\nResolve.prototype._popServer = function () {\n  debug('resolve pop server', this._current_server, this._domain);\n\n  this._server_list.splice(0, 1, this._current_server);\n};\n\nResolve.prototype._preStart = function () {\n  if (!this._started) {\n    this._started = new Date().getTime();\n    this.try_edns = platform.edns;\n    if (!this._server_list.length) this._fillServers();\n  }\n};\n\nResolve.prototype._shouldContinue = function () {\n  debug('resolve should continue', this._server_list.length, this._domain);\n  return this._server_list.length;\n};\n\nResolve.prototype._nextQuestion = function () {\n  debug('resolve next question', this._domain);\n};\n\nResolve.prototype.start = function () {\n  if (!this._started) {\n    this._preStart();\n  }\n\n  if (this._server_list.length === 0) {\n    debug('resolve no more servers', this._domain);\n    this.handleTimeout();\n  } else {\n    this._current_server = this._server_list.pop();\n    debug('resolve start', this._current_server, this._domain);\n    this._request = Request({\n      question: this.question,\n      server: this._current_server,\n      timeout: platform.timeout,\n      try_edns: this.try_edns\n    });\n\n    this._request.on('timeout', this._handleTimeout.bind(this));\n\n    this._request.on('message', this._handle.bind(this));\n\n    this._request.on('error', this._handle.bind(this));\n\n    this._request.send();\n  }\n};\n\nvar NOERROR = consts.NAME_TO_RCODE.NOERROR,\n    SERVFAIL = consts.NAME_TO_RCODE.SERVFAIL,\n    NOTFOUND = consts.NAME_TO_RCODE.NOTFOUND,\n    FORMERR = consts.NAME_TO_RCODE.FORMERR;\n\nResolve.prototype._handle = function (err, answer) {\n  var rcode, errno;\n\n  if (answer) {\n    rcode = answer.header.rcode;\n  }\n\n  debug('resolve handle', rcode, this._domain);\n\n  switch (rcode) {\n    case NOERROR:\n      // answer trucated retry with tcp\n      //console.log(answer);\n      if (answer.header.tc && this.opts.retryOnTruncate && this._shouldContinue()) {\n        debug('truncated', this._domain, answer);\n        this.emit('truncated', err, answer); // remove udp servers\n\n        this._server_list = this._server_list.filter(function (server) {\n          return server.type === 'tcp';\n        });\n        answer = undefined;\n      }\n\n      break;\n\n    case SERVFAIL:\n      if (this._shouldContinue()) {\n        this._nextQuestion(); //this._popServer();\n\n      } else {\n        errno = consts.SERVFAIL;\n      }\n\n      answer = undefined;\n      break;\n\n    case NOTFOUND:\n      if (this._shouldContinue()) {\n        this._nextQuestion();\n      } else {\n        errno = consts.NOTFOUND;\n      }\n\n      answer = undefined;\n      break;\n\n    case FORMERR:\n      if (this.try_edns) {\n        this.try_edns = false; //this._popServer();\n      } else {\n        errno = consts.FORMERR;\n      }\n\n      answer = undefined;\n      break;\n\n    default:\n      if (!err) {\n        errno = consts.RCODE_TO_NAME[rcode];\n        answer = undefined;\n      } else {\n        errno = consts.NOTFOUND;\n      }\n\n      break;\n  }\n\n  if (errno || answer) {\n    if (errno) {\n      err = new Error(this._type + ' ' + errno);\n      err.errno = err.code = errno;\n    }\n\n    this._emit(err, answer);\n  } else {\n    this.start();\n  }\n};\n\nResolve.prototype._handleTimeout = function () {\n  var err;\n\n  if (this._server_list.length === 0) {\n    debug('resolve timeout no more servers', this._domain);\n    err = new Error(this._type + ' ' + consts.TIMEOUT);\n    err.errno = consts.TIMEOUT;\n\n    this._emit(err, undefined);\n  } else {\n    debug('resolve timeout continue', this._domain);\n    this.start();\n  }\n};\n\nvar resolve = function (domain, rrtype, ip, callback) {\n  var res;\n\n  if (!callback) {\n    callback = ip;\n    ip = undefined;\n  }\n\n  if (!callback) {\n    callback = rrtype;\n    rrtype = undefined;\n  }\n\n  rrtype = consts.NAME_TO_QTYPE[rrtype || 'A'];\n\n  if (rrtype === PTR) {\n    return reverse(domain, callback);\n  }\n\n  var opts = {\n    domain: domain,\n    rrtype: rrtype,\n    remote: ip\n  };\n  res = new Resolve(opts);\n\n  res._cb = function (err, response) {\n    var ret = [],\n        i,\n        a;\n\n    if (err) {\n      callback(err, response);\n      return;\n    }\n\n    for (i = 0; i < response.answer.length; i++) {\n      a = response.answer[i];\n\n      if (a.type === rrtype) {\n        switch (rrtype) {\n          case A:\n          case AAAA:\n            ret.push(a.address);\n            break;\n\n          case consts.NAME_TO_QTYPE.MX:\n            ret.push({\n              priority: a.priority,\n              exchange: a.exchange\n            });\n            break;\n\n          case TXT:\n          case NS:\n          case CNAME:\n          case PTR:\n            ret.push(a.data);\n            break;\n\n          case SRV:\n            ret.push({\n              priority: a.priority,\n              weight: a.weight,\n              port: a.port,\n              name: a.target\n            });\n            break;\n\n          default:\n            ret.push(a);\n            break;\n        }\n      }\n    }\n\n    if (ret.length === 0) {\n      ret = undefined;\n    }\n\n    callback(err, ret);\n  };\n\n  return res;\n};\n\nexports.resolve = resolve;\n\nvar resolve4 = function (domain, callback) {\n  return resolve(domain, 'A', function (err, results) {\n    callback(err, results);\n  });\n};\n\nexports.resolve4 = resolve4;\n\nvar resolve6 = function (domain, callback) {\n  return resolve(domain, 'AAAA', function (err, results) {\n    callback(err, results);\n  });\n};\n\nexports.resolve6 = resolve6;\n\nvar resolveMx = function (domain, callback) {\n  return resolve(domain, 'MX', function (err, results) {\n    callback(err, results);\n  });\n};\n\nexports.resolveMx = resolveMx;\n\nvar resolveTxt = function (domain, callback) {\n  return resolve(domain, 'TXT', function (err, results) {\n    callback(err, results);\n  });\n};\n\nexports.resolveTxt = resolveTxt;\n\nvar resolveSrv = function (domain, callback) {\n  return resolve(domain, 'SRV', function (err, results) {\n    callback(err, results);\n  });\n};\n\nexports.resolveSrv = resolveSrv;\n\nvar resolveNs = function (domain, callback) {\n  return resolve(domain, 'NS', function (err, results) {\n    callback(err, results);\n  });\n};\n\nexports.resolveNs = resolveNs;\n\nvar resolveCname = function (domain, callback) {\n  return resolve(domain, 'CNAME', function (err, results) {\n    callback(err, results);\n  });\n};\n\nexports.resolveCname = resolveCname;\n\nvar reverse = function (ip, callback) {\n  var error, opts, res;\n\n  if (!net.isIP(ip)) {\n    error = new Error('getHostByAddr ENOTIMP');\n    error.errno = error.code = 'ENOTIMP';\n    throw error;\n  }\n\n  opts = {\n    domain: utils.reverseIP(ip),\n    rrtype: PTR\n  };\n  res = new Lookup(opts);\n\n  res._cb = function (err, response) {\n    var results = [];\n\n    if (response) {\n      response.answer.forEach(function (a) {\n        if (a.type === PTR) {\n          results.push(a.data);\n        }\n      });\n    }\n\n    if (results.length === 0) {\n      results = undefined;\n    }\n\n    callback(err, results);\n  };\n\n  return res;\n};\n\nexports.reverse = reverse;\n\nvar Lookup = function (opts) {\n  Resolve.call(this, opts);\n  this._type = 'getaddrinfo';\n};\n\nutil.inherits(Lookup, Resolve);\n\nLookup.prototype.start = function () {\n  var self = this;\n\n  if (!this._started) {\n    this._search_path = platform.search_path.slice(0);\n\n    this._preStart();\n  }\n\n  platform.hosts.lookup(this.question, function (results) {\n    var packet;\n\n    if (results && results.length) {\n      debug('Lookup in hosts', results);\n      packet = new Packet();\n      packet.answer = results.slice();\n\n      self._emit(null, packet);\n    } else {\n      debug('Lookup not in hosts');\n      Resolve.prototype.start.call(self);\n    }\n  });\n};\n\nLookup.prototype._shouldContinue = function () {\n  debug('Lookup should continue', this._server_list.length, this._search_path.length);\n  return this._server_list.length && this._search_path.length;\n};\n\nLookup.prototype._nextQuestion = function () {\n  debug('Lookup next question');\n\n  this._buildQuestion([this._domain, this._search_path.pop()].join('.'));\n};\n\nvar lookup = function (domain, family, callback) {\n  var rrtype, revip, res;\n\n  if (!callback) {\n    callback = family;\n    family = undefined;\n  }\n\n  if (!family) {\n    family = 4;\n  }\n\n  revip = net.isIP(domain);\n\n  if (revip === 4 || revip === 6) {\n    process.nextTick(function () {\n      callback(null, domain, revip);\n    });\n    return {};\n  }\n\n  if (!domain) {\n    process.nextTick(function () {\n      callback(null, null, family);\n    });\n    return {};\n  }\n\n  rrtype = consts.FAMILY_TO_QTYPE[family];\n  var opts = {\n    domain: domain,\n    rrtype: rrtype\n  };\n  res = new Lookup(opts);\n\n  res._cb = function (err, response) {\n    var i, afamily, address, a, all;\n\n    if (err) {\n      callback(err, undefined, undefined);\n      return;\n    }\n\n    all = response.answer.concat(response.additional);\n\n    for (i = 0; i < all.length; i++) {\n      a = all[i];\n\n      if (a.type === A || a.type === AAAA) {\n        afamily = consts.QTYPE_TO_FAMILY[a.type];\n        address = a.address;\n        break;\n      }\n    }\n\n    callback(err, address, afamily);\n  };\n\n  return res;\n};\n\nexports.lookup = lookup;","map":{"version":3,"names":["ipaddr","require","net","util","EventEmitter","PendingRequests","Packet","consts","utils","platform","A","NAME_TO_QTYPE","AAAA","MX","TXT","NS","CNAME","SRV","PTR","debug","process","env","NODE_DEBUG","match","args","Array","prototype","slice","call","arguments","console","error","apply","Date","now","toString","concat","Request","exports","opts","question","server","String","address","port","type","isIP","Error","indexOf","timeout","try_edns","fired","id","undefined","cache","inherits","handle","err","answer","cached","store","emit","done","clearTimeout","timer_","remove","handleTimeout","send","self","lookup","results","packet","_send","setTimeout","cancel","_queue","sendQueued","forEach","request","start","on","ready","Resolve","cb","_extend","retryOnTruncate","_domain","domain","_rrtype","rrtype","_buildQuestion","_started","_current_server","_server_list","remote","push","_request","_type","_cb","name","class","NAME_TO_QCLASS","IN","_emit","nextTick","syscall","_fillServers","tries","s","t","u","slist","name_servers","length","attempts","reverse","_popServer","splice","_preStart","getTime","edns","_shouldContinue","_nextQuestion","pop","_handleTimeout","bind","_handle","NOERROR","NAME_TO_RCODE","SERVFAIL","NOTFOUND","FORMERR","rcode","errno","header","tc","filter","RCODE_TO_NAME","code","TIMEOUT","resolve","ip","callback","res","response","ret","i","a","priority","exchange","data","weight","target","resolve4","resolve6","resolveMx","resolveTxt","resolveSrv","resolveNs","resolveCname","reverseIP","Lookup","_search_path","search_path","hosts","join","family","revip","FAMILY_TO_QTYPE","afamily","all","additional","QTYPE_TO_FAMILY"],"sources":["C:/Users/Kamen/ML/AlgoTrader/node_modules/native-dns/lib/client.js"],"sourcesContent":["// Copyright 2011 Timothy J Fontaine <tjfontaine@gmail.com>\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE\r\n\r\n'use strict';\r\n\r\nvar ipaddr = require('ipaddr.js'),\r\n    net = require('net'),\r\n    util = require('util'),\r\n    EventEmitter = require('events').EventEmitter,\r\n    PendingRequests = require('./pending'),\r\n    Packet = require('./packet'),\r\n    consts = require('native-dns-packet').consts,\r\n    utils = require('./utils'),\r\n    platform = require('./platform');\r\n\r\nvar A = consts.NAME_TO_QTYPE.A,\r\n    AAAA = consts.NAME_TO_QTYPE.AAAA,\r\n    MX = consts.NAME_TO_QTYPE.MX,\r\n    TXT = consts.NAME_TO_QTYPE.TXT,\r\n    NS = consts.NAME_TO_QTYPE.NS,\r\n    CNAME = consts.NAME_TO_QTYPE.CNAME,\r\n    SRV = consts.NAME_TO_QTYPE.SRV,\r\n    PTR = consts.NAME_TO_QTYPE.PTR;\r\n\r\nvar debug = function() {};\r\n\r\nif (process.env.NODE_DEBUG && process.env.NODE_DEBUG.match(/dns/)) {\r\ndebug = function debug() {\r\n  var args = Array.prototype.slice.call(arguments);\r\n  console.error.apply(this, ['client', Date.now().toString()].concat(args));\r\n};\r\n}\r\n\r\nvar Request = exports.Request = function(opts) {\r\n  if (!(this instanceof Request)) return new Request(opts);\r\n\r\n  this.question = opts.question;\r\n  this.server = opts.server;\r\n\r\n  if (typeof(this.server) === 'string' || this.server instanceof String)\r\n    this.server = { address: this.server, port: 53, type: 'udp'};\r\n\r\n  if (!this.server || !this.server.address || !net.isIP(this.server.address))\r\n    throw new Error('Server object must be supplied with at least address');\r\n\r\n  if (!this.server.type || ['udp', 'tcp'].indexOf(this.server.type) === -1)\r\n    this.server.type = 'udp';\r\n\r\n  if (!this.server.port)\r\n    this.server.port = 53;\r\n\r\n  this.timeout = opts.timeout || 4 * 1000;\r\n  this.try_edns = opts.try_edns || false;\r\n\r\n  this.fired = false;\r\n  this.id = undefined;\r\n\r\n  if (opts.cache || opts.cache === false) {\r\n    this.cache = opts.cache;\r\n  } else {\r\n    this.cache = platform.cache;\r\n  }\r\n  debug('request created', this.question);\r\n};\r\nutil.inherits(Request, EventEmitter);\r\n\r\nRequest.prototype.handle = function(err, answer, cached) {\r\n  if (!this.fired) {\r\n    debug('request handled', this.id, this.question);\r\n\r\n    if (!cached && this.cache && this.cache.store && answer) {\r\n      this.cache.store(answer);\r\n    }\r\n\r\n    this.emit('message', err, answer);\r\n    this.done();\r\n  }\r\n};\r\n\r\nRequest.prototype.done = function() {\r\n  debug('request finished', this.id, this.question);\r\n  this.fired = true;\r\n  clearTimeout(this.timer_);\r\n  PendingRequests.remove(this);\r\n  this.emit('end');\r\n  this.id = undefined;\r\n};\r\n\r\nRequest.prototype.handleTimeout = function() {\r\n  if (!this.fired) {\r\n    debug('request timedout', this.id, this.question);\r\n    this.emit('timeout');\r\n    this.done();\r\n  }\r\n};\r\n\r\nRequest.prototype.error = function(err) {\r\n  if (!this.fired) {\r\n    debug('request error', err, this.id, this.question);\r\n    this.emit('error', err);\r\n    this.done();\r\n  }\r\n};\r\n\r\nRequest.prototype.send = function() {\r\n  debug('request starting', this.question);\r\n  var self = this;\r\n\r\n  if (this.cache && this.cache.lookup) {\r\n    this.cache.lookup(this.question, function(results) {\r\n      var packet;\r\n\r\n      if (!results) {\r\n        self._send();\r\n      } else {\r\n        packet = new Packet();\r\n        packet.answer = results.slice();\r\n        self.handle(null, packet, true);\r\n      }\r\n    });\r\n  } else {\r\n    this._send();\r\n  }\r\n};\r\n\r\nRequest.prototype._send = function() {\r\n  debug('request not in cache', this.question);\r\n  var self = this;\r\n\r\n  this.timer_ = setTimeout(function() {\r\n    self.handleTimeout();\r\n  }, this.timeout);\r\n\r\n  PendingRequests.send(self);\r\n};\r\n\r\nRequest.prototype.cancel = function() {\r\n  debug('request cancelled', this.id, this.question);\r\n  this.emit('cancelled');\r\n  this.done();\r\n};\r\n\r\nvar _queue = [];\r\n\r\nvar sendQueued = function() {\r\n  debug('platform ready sending queued requests');\r\n  _queue.forEach(function(request) {\r\n    request.start();\r\n  });\r\n  _queue = [];\r\n};\r\n\r\nplatform.on('ready', function() {\r\n  sendQueued();\r\n});\r\n\r\nif (platform.ready) {\r\n  sendQueued();\r\n}\r\n\r\nvar Resolve = function Resolve(opts, cb) {\r\n  if (!(this instanceof Resolve)) return new Resolve(opts, cb);\r\n\r\n  this.opts = util._extend({\r\n    retryOnTruncate: true,\r\n  }, opts);\r\n\r\n  this._domain = opts.domain;\r\n  this._rrtype = opts.rrtype;\r\n\r\n  this._buildQuestion(this._domain);\r\n\r\n  this._started = false;\r\n  this._current_server = undefined;\r\n\r\n  this._server_list = [];\r\n\r\n  if (opts.remote) {\r\n    this._server_list.push({\r\n      address: opts.remote,\r\n      port: 53,\r\n      type: 'tcp',\r\n    });\r\n    this._server_list.push({\r\n      address: opts.remote,\r\n      port: 53,\r\n      type: 'udp',\r\n    });\r\n  }\r\n\r\n  this._request = undefined;\r\n  this._type = 'getHostByName';\r\n  this._cb = cb;\r\n\r\n  if (!platform.ready) {\r\n    _queue.push(this);\r\n  } else {\r\n    this.start();\r\n  }\r\n};\r\nutil.inherits(Resolve, EventEmitter);\r\n\r\nResolve.prototype.cancel = function() {\r\n  if (this._request) {\r\n    this._request.cancel();\r\n  }\r\n};\r\n\r\nResolve.prototype._buildQuestion = function(name) {\r\n  debug('building question', name);\r\n  this.question = {\r\n    type: this._rrtype,\r\n    class: consts.NAME_TO_QCLASS.IN,\r\n    name: name\r\n  };\r\n};\r\nexports.Resolve = Resolve;\r\n\r\nResolve.prototype._emit = function(err, answer) {\r\n  debug('resolve end', this._domain);\r\n  var self = this;\r\n  process.nextTick(function() {\r\n    if (err) {\r\n      err.syscall = self._type;\r\n    }\r\n    self._cb(err, answer);\r\n  });\r\n};\r\n\r\nResolve.prototype._fillServers = function() {\r\n  debug('resolve filling servers', this._domain);\r\n  var tries = 0, s, t, u, slist;\r\n\r\n  slist = platform.name_servers;\r\n\r\n  while (this._server_list.length < platform.attempts) {\r\n    s = slist[tries % slist.length];\r\n\r\n    u = {\r\n      address: s.address,\r\n      port: s.port,\r\n      type: 'udp'\r\n    };\r\n\r\n    t = {\r\n      address: s.address,\r\n      port: s.port,\r\n      type: 'tcp'\r\n    };\r\n\r\n    this._server_list.push(u);\r\n    this._server_list.push(t);\r\n\r\n    tries += 1;\r\n  }\r\n\r\n  this._server_list.reverse();\r\n};\r\n\r\nResolve.prototype._popServer = function() {\r\n  debug('resolve pop server', this._current_server, this._domain);\r\n  this._server_list.splice(0, 1, this._current_server);\r\n};\r\n\r\nResolve.prototype._preStart = function() {\r\n  if (!this._started) {\r\n    this._started = new Date().getTime();\r\n    this.try_edns = platform.edns;\r\n\r\n    if (!this._server_list.length)\r\n      this._fillServers();\r\n  }\r\n};\r\n\r\nResolve.prototype._shouldContinue = function() {\r\n  debug('resolve should continue', this._server_list.length, this._domain);\r\n  return this._server_list.length;\r\n};\r\n\r\nResolve.prototype._nextQuestion = function() {\r\n  debug('resolve next question', this._domain);\r\n};\r\n\r\nResolve.prototype.start = function() {\r\n  if (!this._started) {\r\n    this._preStart();\r\n  }\r\n\r\n  if (this._server_list.length === 0) {\r\n    debug('resolve no more servers', this._domain);\r\n    this.handleTimeout();\r\n  } else {\r\n    this._current_server = this._server_list.pop();\r\n    debug('resolve start', this._current_server, this._domain);\r\n\r\n    this._request = Request({\r\n      question: this.question,\r\n      server: this._current_server,\r\n      timeout: platform.timeout,\r\n      try_edns: this.try_edns\r\n    });\r\n\r\n    this._request.on('timeout', this._handleTimeout.bind(this));\r\n    this._request.on('message', this._handle.bind(this));\r\n    this._request.on('error', this._handle.bind(this));\r\n\r\n    this._request.send();\r\n  }\r\n};\r\n\r\nvar NOERROR = consts.NAME_TO_RCODE.NOERROR,\r\n    SERVFAIL = consts.NAME_TO_RCODE.SERVFAIL,\r\n    NOTFOUND = consts.NAME_TO_RCODE.NOTFOUND,\r\n    FORMERR = consts.NAME_TO_RCODE.FORMERR;\r\n\r\nResolve.prototype._handle = function(err, answer) {\r\n  var rcode, errno;\r\n\r\n  if (answer) {\r\n    rcode = answer.header.rcode;\r\n  }\r\n\r\n  debug('resolve handle', rcode, this._domain);\r\n\r\n  switch (rcode) {\r\n    case NOERROR:\r\n      // answer trucated retry with tcp\r\n      //console.log(answer);\r\n      if (answer.header.tc &&\r\n          this.opts.retryOnTruncate &&\r\n          this._shouldContinue()) {\r\n        debug('truncated', this._domain, answer);\r\n        this.emit('truncated', err, answer);\r\n        \r\n        // remove udp servers\r\n        this._server_list = this._server_list.filter(function(server) {\r\n          return server.type === 'tcp';\r\n        });\r\n        answer = undefined;\r\n      }\r\n      break;\r\n    case SERVFAIL:\r\n      if (this._shouldContinue()) {\r\n        this._nextQuestion();\r\n        //this._popServer();\r\n      } else {\r\n        errno = consts.SERVFAIL;\r\n      }\r\n      answer = undefined;\r\n      break;\r\n    case NOTFOUND:\r\n      if (this._shouldContinue()) {\r\n        this._nextQuestion();\r\n      } else {\r\n        errno = consts.NOTFOUND;\r\n      }\r\n      answer = undefined;\r\n      break;\r\n    case FORMERR:\r\n      if (this.try_edns) {\r\n        this.try_edns = false;\r\n        //this._popServer();\r\n      } else {\r\n        errno = consts.FORMERR;\r\n      }\r\n      answer = undefined;\r\n      break;\r\n    default:\r\n      if (!err) {\r\n        errno = consts.RCODE_TO_NAME[rcode];\r\n        answer = undefined;\r\n      } else {\r\n        errno = consts.NOTFOUND;\r\n      }\r\n      break;\r\n  }\r\n\r\n  if (errno || answer) {\r\n    if (errno) {\r\n      err = new Error(this._type + ' ' + errno);\r\n      err.errno = err.code = errno;\r\n    }\r\n    this._emit(err, answer);\r\n  } else {\r\n    this.start();\r\n  }\r\n};\r\n\r\nResolve.prototype._handleTimeout = function() {\r\n  var err;\r\n\r\n  if (this._server_list.length === 0) {\r\n    debug('resolve timeout no more servers', this._domain);\r\n    err = new Error(this._type + ' ' + consts.TIMEOUT);\r\n    err.errno = consts.TIMEOUT;\r\n    this._emit(err, undefined);\r\n  } else {\r\n    debug('resolve timeout continue', this._domain);\r\n    this.start();\r\n  }\r\n};\r\n\r\nvar resolve = function(domain, rrtype, ip, callback) {\r\n  var res;\r\n\r\n  if (!callback) {\r\n    callback = ip;\r\n    ip = undefined;\r\n  }\r\n\r\n  if (!callback) {\r\n    callback = rrtype;\r\n    rrtype = undefined;\r\n  }\r\n\r\n  rrtype = consts.NAME_TO_QTYPE[rrtype || 'A'];\r\n\r\n  if (rrtype === PTR) {\r\n    return reverse(domain, callback);\r\n  }\r\n\r\n  var opts = {\r\n    domain: domain,\r\n    rrtype: rrtype,\r\n    remote: ip,\r\n  };\r\n\r\n  res = new Resolve(opts);\r\n\r\n  res._cb = function(err, response) {\r\n    var ret = [], i, a;\r\n\r\n    if (err) {\r\n      callback(err, response);\r\n      return;\r\n    }\r\n\r\n    for (i = 0; i < response.answer.length; i++) {\r\n      a = response.answer[i];\r\n      if (a.type === rrtype) {\r\n        switch (rrtype) {\r\n          case A:\r\n          case AAAA:\r\n            ret.push(a.address);\r\n            break;\r\n          case consts.NAME_TO_QTYPE.MX:\r\n            ret.push({\r\n              priority: a.priority,\r\n              exchange: a.exchange\r\n            });\r\n            break;\r\n          case TXT:\r\n          case NS:\r\n          case CNAME:\r\n          case PTR:\r\n            ret.push(a.data);\r\n            break;\r\n          case SRV:\r\n            ret.push({\r\n              priority: a.priority,\r\n              weight: a.weight,\r\n              port: a.port,\r\n              name: a.target\r\n            });\r\n            break;\r\n          default:\r\n            ret.push(a);\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (ret.length === 0) {\r\n      ret = undefined;\r\n    }\r\n\r\n    callback(err, ret);\r\n  };\r\n\r\n  return res;\r\n};\r\nexports.resolve = resolve;\r\n\r\nvar resolve4 = function(domain, callback) {\r\n  return resolve(domain, 'A', function(err, results) {\r\n    callback(err, results);\r\n  });\r\n};\r\nexports.resolve4 = resolve4;\r\n\r\nvar resolve6 = function(domain, callback) {\r\n  return resolve(domain, 'AAAA', function(err, results) {\r\n    callback(err, results);\r\n  });\r\n};\r\nexports.resolve6 = resolve6;\r\n\r\nvar resolveMx = function(domain, callback) {\r\n  return resolve(domain, 'MX', function(err, results) {\r\n    callback(err, results);\r\n  });\r\n};\r\nexports.resolveMx = resolveMx;\r\n\r\nvar resolveTxt = function(domain, callback) {\r\n  return resolve(domain, 'TXT', function(err, results) {\r\n    callback(err, results);\r\n  });\r\n};\r\nexports.resolveTxt = resolveTxt;\r\n\r\nvar resolveSrv = function(domain, callback) {\r\n  return resolve(domain, 'SRV', function(err, results) {\r\n    callback(err, results);\r\n  });\r\n};\r\nexports.resolveSrv = resolveSrv;\r\n\r\nvar resolveNs = function(domain, callback) {\r\n  return resolve(domain, 'NS', function(err, results) {\r\n    callback(err, results);\r\n  });\r\n};\r\nexports.resolveNs = resolveNs;\r\n\r\nvar resolveCname = function(domain, callback) {\r\n  return resolve(domain, 'CNAME', function(err, results) {\r\n    callback(err, results);\r\n  });\r\n};\r\nexports.resolveCname = resolveCname;\r\n\r\nvar reverse = function(ip, callback) {\r\n  var error, opts, res;\r\n\r\n  if (!net.isIP(ip)) {\r\n    error = new Error('getHostByAddr ENOTIMP');\r\n    error.errno = error.code = 'ENOTIMP';\r\n    throw error;\r\n  }\r\n\r\n  opts = {\r\n    domain: utils.reverseIP(ip),\r\n    rrtype: PTR\r\n  };\r\n\r\n  res = new Lookup(opts);\r\n\r\n  res._cb = function(err, response) {\r\n    var results = [];\r\n\r\n    if (response) {\r\n      response.answer.forEach(function(a) {\r\n        if (a.type === PTR) {\r\n          results.push(a.data);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (results.length === 0) {\r\n      results = undefined;\r\n    }\r\n\r\n    callback(err, results);\r\n  };\r\n\r\n  return res;\r\n};\r\nexports.reverse = reverse;\r\n\r\nvar Lookup = function(opts) {\r\n  Resolve.call(this, opts);\r\n  this._type = 'getaddrinfo';\r\n};\r\nutil.inherits(Lookup, Resolve);\r\n\r\nLookup.prototype.start = function() {\r\n  var self = this;\r\n\r\n  if (!this._started) {\r\n    this._search_path = platform.search_path.slice(0);\r\n    this._preStart();\r\n  }\r\n\r\n  platform.hosts.lookup(this.question, function(results) {\r\n    var packet;\r\n    if (results && results.length) {\r\n      debug('Lookup in hosts', results);\r\n      packet = new Packet();\r\n      packet.answer = results.slice();\r\n      self._emit(null, packet);\r\n    } else {\r\n      debug('Lookup not in hosts');\r\n      Resolve.prototype.start.call(self);\r\n    }\r\n  });\r\n};\r\n\r\nLookup.prototype._shouldContinue = function() {\r\n  debug('Lookup should continue', this._server_list.length,\r\n        this._search_path.length);\r\n  return this._server_list.length && this._search_path.length;\r\n};\r\n\r\nLookup.prototype._nextQuestion = function() {\r\n  debug('Lookup next question');\r\n  this._buildQuestion([this._domain, this._search_path.pop()].join('.'));\r\n};\r\n\r\nvar lookup = function(domain, family, callback) {\r\n  var rrtype, revip, res;\r\n\r\n  if (!callback) {\r\n    callback = family;\r\n    family = undefined;\r\n  }\r\n\r\n  if (!family) {\r\n    family = 4;\r\n  }\r\n\r\n  revip = net.isIP(domain);\r\n\r\n  if (revip === 4 || revip === 6) {\r\n    process.nextTick(function() {\r\n      callback(null, domain, revip);\r\n    });\r\n    return {};\r\n  }\r\n\r\n  if (!domain) {\r\n    process.nextTick(function() {\r\n      callback(null, null, family);\r\n    });\r\n    return {};\r\n  }\r\n\r\n  rrtype = consts.FAMILY_TO_QTYPE[family];\r\n\r\n  var opts = {\r\n    domain: domain,\r\n    rrtype: rrtype\r\n  };\r\n\r\n  res = new Lookup(opts);\r\n\r\n  res._cb = function(err, response) {\r\n    var i, afamily, address, a, all;\r\n\r\n    if (err) {\r\n      callback(err, undefined, undefined);\r\n      return;\r\n    }\r\n\r\n    all = response.answer.concat(response.additional);\r\n\r\n    for (i = 0; i < all.length; i++) {\r\n      a = all[i];\r\n\r\n      if (a.type === A || a.type === AAAA) {\r\n        afamily = consts.QTYPE_TO_FAMILY[a.type];\r\n        address = a.address;\r\n        break;\r\n      }\r\n    }\r\n\r\n    callback(err, address, afamily);\r\n  };\r\n\r\n  return res;\r\n};\r\nexports.lookup = lookup;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,WAAD,CAApB;AAAA,IACIC,GAAG,GAAGD,OAAO,CAAC,KAAD,CADjB;AAAA,IAEIE,IAAI,GAAGF,OAAO,CAAC,MAAD,CAFlB;AAAA,IAGIG,YAAY,GAAGH,OAAO,CAAC,QAAD,CAAP,CAAkBG,YAHrC;AAAA,IAIIC,eAAe,GAAGJ,OAAO,CAAC,WAAD,CAJ7B;AAAA,IAKIK,MAAM,GAAGL,OAAO,CAAC,UAAD,CALpB;AAAA,IAMIM,MAAM,GAAGN,OAAO,CAAC,mBAAD,CAAP,CAA6BM,MAN1C;AAAA,IAOIC,KAAK,GAAGP,OAAO,CAAC,SAAD,CAPnB;AAAA,IAQIQ,QAAQ,GAAGR,OAAO,CAAC,YAAD,CARtB;;AAUA,IAAIS,CAAC,GAAGH,MAAM,CAACI,aAAP,CAAqBD,CAA7B;AAAA,IACIE,IAAI,GAAGL,MAAM,CAACI,aAAP,CAAqBC,IADhC;AAAA,IAEIC,EAAE,GAAGN,MAAM,CAACI,aAAP,CAAqBE,EAF9B;AAAA,IAGIC,GAAG,GAAGP,MAAM,CAACI,aAAP,CAAqBG,GAH/B;AAAA,IAIIC,EAAE,GAAGR,MAAM,CAACI,aAAP,CAAqBI,EAJ9B;AAAA,IAKIC,KAAK,GAAGT,MAAM,CAACI,aAAP,CAAqBK,KALjC;AAAA,IAMIC,GAAG,GAAGV,MAAM,CAACI,aAAP,CAAqBM,GAN/B;AAAA,IAOIC,GAAG,GAAGX,MAAM,CAACI,aAAP,CAAqBO,GAP/B;;AASA,IAAIC,KAAK,GAAG,YAAW,CAAE,CAAzB;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,UAAZ,IAA0BF,OAAO,CAACC,GAAR,CAAYC,UAAZ,CAAuBC,KAAvB,CAA6B,KAA7B,CAA9B,EAAmE;EACnEJ,KAAK,GAAG,SAASA,KAAT,GAAiB;IACvB,IAAIK,IAAI,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,CAAX;IACAC,OAAO,CAACC,KAAR,CAAcC,KAAd,CAAoB,IAApB,EAA0B,CAAC,QAAD,EAAWC,IAAI,CAACC,GAAL,GAAWC,QAAX,EAAX,EAAkCC,MAAlC,CAAyCZ,IAAzC,CAA1B;EACD,CAHD;AAIC;;AAED,IAAIa,OAAO,GAAGC,OAAO,CAACD,OAAR,GAAkB,UAASE,IAAT,EAAe;EAC7C,IAAI,EAAE,gBAAgBF,OAAlB,CAAJ,EAAgC,OAAO,IAAIA,OAAJ,CAAYE,IAAZ,CAAP;EAEhC,KAAKC,QAAL,GAAgBD,IAAI,CAACC,QAArB;EACA,KAAKC,MAAL,GAAcF,IAAI,CAACE,MAAnB;EAEA,IAAI,OAAO,KAAKA,MAAZ,KAAwB,QAAxB,IAAoC,KAAKA,MAAL,YAAuBC,MAA/D,EACE,KAAKD,MAAL,GAAc;IAAEE,OAAO,EAAE,KAAKF,MAAhB;IAAwBG,IAAI,EAAE,EAA9B;IAAkCC,IAAI,EAAE;EAAxC,CAAd;EAEF,IAAI,CAAC,KAAKJ,MAAN,IAAgB,CAAC,KAAKA,MAAL,CAAYE,OAA7B,IAAwC,CAACzC,GAAG,CAAC4C,IAAJ,CAAS,KAAKL,MAAL,CAAYE,OAArB,CAA7C,EACE,MAAM,IAAII,KAAJ,CAAU,sDAAV,CAAN;EAEF,IAAI,CAAC,KAAKN,MAAL,CAAYI,IAAb,IAAqB,CAAC,KAAD,EAAQ,KAAR,EAAeG,OAAf,CAAuB,KAAKP,MAAL,CAAYI,IAAnC,MAA6C,CAAC,CAAvE,EACE,KAAKJ,MAAL,CAAYI,IAAZ,GAAmB,KAAnB;EAEF,IAAI,CAAC,KAAKJ,MAAL,CAAYG,IAAjB,EACE,KAAKH,MAAL,CAAYG,IAAZ,GAAmB,EAAnB;EAEF,KAAKK,OAAL,GAAeV,IAAI,CAACU,OAAL,IAAgB,IAAI,IAAnC;EACA,KAAKC,QAAL,GAAgBX,IAAI,CAACW,QAAL,IAAiB,KAAjC;EAEA,KAAKC,KAAL,GAAa,KAAb;EACA,KAAKC,EAAL,GAAUC,SAAV;;EAEA,IAAId,IAAI,CAACe,KAAL,IAAcf,IAAI,CAACe,KAAL,KAAe,KAAjC,EAAwC;IACtC,KAAKA,KAAL,GAAaf,IAAI,CAACe,KAAlB;EACD,CAFD,MAEO;IACL,KAAKA,KAAL,GAAa7C,QAAQ,CAAC6C,KAAtB;EACD;;EACDnC,KAAK,CAAC,iBAAD,EAAoB,KAAKqB,QAAzB,CAAL;AACD,CA9BD;;AA+BArC,IAAI,CAACoD,QAAL,CAAclB,OAAd,EAAuBjC,YAAvB;;AAEAiC,OAAO,CAACX,SAAR,CAAkB8B,MAAlB,GAA2B,UAASC,GAAT,EAAcC,MAAd,EAAsBC,MAAtB,EAA8B;EACvD,IAAI,CAAC,KAAKR,KAAV,EAAiB;IACfhC,KAAK,CAAC,iBAAD,EAAoB,KAAKiC,EAAzB,EAA6B,KAAKZ,QAAlC,CAAL;;IAEA,IAAI,CAACmB,MAAD,IAAW,KAAKL,KAAhB,IAAyB,KAAKA,KAAL,CAAWM,KAApC,IAA6CF,MAAjD,EAAyD;MACvD,KAAKJ,KAAL,CAAWM,KAAX,CAAiBF,MAAjB;IACD;;IAED,KAAKG,IAAL,CAAU,SAAV,EAAqBJ,GAArB,EAA0BC,MAA1B;IACA,KAAKI,IAAL;EACD;AACF,CAXD;;AAaAzB,OAAO,CAACX,SAAR,CAAkBoC,IAAlB,GAAyB,YAAW;EAClC3C,KAAK,CAAC,kBAAD,EAAqB,KAAKiC,EAA1B,EAA8B,KAAKZ,QAAnC,CAAL;EACA,KAAKW,KAAL,GAAa,IAAb;EACAY,YAAY,CAAC,KAAKC,MAAN,CAAZ;EACA3D,eAAe,CAAC4D,MAAhB,CAAuB,IAAvB;EACA,KAAKJ,IAAL,CAAU,KAAV;EACA,KAAKT,EAAL,GAAUC,SAAV;AACD,CAPD;;AASAhB,OAAO,CAACX,SAAR,CAAkBwC,aAAlB,GAAkC,YAAW;EAC3C,IAAI,CAAC,KAAKf,KAAV,EAAiB;IACfhC,KAAK,CAAC,kBAAD,EAAqB,KAAKiC,EAA1B,EAA8B,KAAKZ,QAAnC,CAAL;IACA,KAAKqB,IAAL,CAAU,SAAV;IACA,KAAKC,IAAL;EACD;AACF,CAND;;AAQAzB,OAAO,CAACX,SAAR,CAAkBK,KAAlB,GAA0B,UAAS0B,GAAT,EAAc;EACtC,IAAI,CAAC,KAAKN,KAAV,EAAiB;IACfhC,KAAK,CAAC,eAAD,EAAkBsC,GAAlB,EAAuB,KAAKL,EAA5B,EAAgC,KAAKZ,QAArC,CAAL;IACA,KAAKqB,IAAL,CAAU,OAAV,EAAmBJ,GAAnB;IACA,KAAKK,IAAL;EACD;AACF,CAND;;AAQAzB,OAAO,CAACX,SAAR,CAAkByC,IAAlB,GAAyB,YAAW;EAClChD,KAAK,CAAC,kBAAD,EAAqB,KAAKqB,QAA1B,CAAL;EACA,IAAI4B,IAAI,GAAG,IAAX;;EAEA,IAAI,KAAKd,KAAL,IAAc,KAAKA,KAAL,CAAWe,MAA7B,EAAqC;IACnC,KAAKf,KAAL,CAAWe,MAAX,CAAkB,KAAK7B,QAAvB,EAAiC,UAAS8B,OAAT,EAAkB;MACjD,IAAIC,MAAJ;;MAEA,IAAI,CAACD,OAAL,EAAc;QACZF,IAAI,CAACI,KAAL;MACD,CAFD,MAEO;QACLD,MAAM,GAAG,IAAIjE,MAAJ,EAAT;QACAiE,MAAM,CAACb,MAAP,GAAgBY,OAAO,CAAC3C,KAAR,EAAhB;QACAyC,IAAI,CAACZ,MAAL,CAAY,IAAZ,EAAkBe,MAAlB,EAA0B,IAA1B;MACD;IACF,CAVD;EAWD,CAZD,MAYO;IACL,KAAKC,KAAL;EACD;AACF,CAnBD;;AAqBAnC,OAAO,CAACX,SAAR,CAAkB8C,KAAlB,GAA0B,YAAW;EACnCrD,KAAK,CAAC,sBAAD,EAAyB,KAAKqB,QAA9B,CAAL;EACA,IAAI4B,IAAI,GAAG,IAAX;EAEA,KAAKJ,MAAL,GAAcS,UAAU,CAAC,YAAW;IAClCL,IAAI,CAACF,aAAL;EACD,CAFuB,EAErB,KAAKjB,OAFgB,CAAxB;EAIA5C,eAAe,CAAC8D,IAAhB,CAAqBC,IAArB;AACD,CATD;;AAWA/B,OAAO,CAACX,SAAR,CAAkBgD,MAAlB,GAA2B,YAAW;EACpCvD,KAAK,CAAC,mBAAD,EAAsB,KAAKiC,EAA3B,EAA+B,KAAKZ,QAApC,CAAL;EACA,KAAKqB,IAAL,CAAU,WAAV;EACA,KAAKC,IAAL;AACD,CAJD;;AAMA,IAAIa,MAAM,GAAG,EAAb;;AAEA,IAAIC,UAAU,GAAG,YAAW;EAC1BzD,KAAK,CAAC,wCAAD,CAAL;;EACAwD,MAAM,CAACE,OAAP,CAAe,UAASC,OAAT,EAAkB;IAC/BA,OAAO,CAACC,KAAR;EACD,CAFD;;EAGAJ,MAAM,GAAG,EAAT;AACD,CAND;;AAQAlE,QAAQ,CAACuE,EAAT,CAAY,OAAZ,EAAqB,YAAW;EAC9BJ,UAAU;AACX,CAFD;;AAIA,IAAInE,QAAQ,CAACwE,KAAb,EAAoB;EAClBL,UAAU;AACX;;AAED,IAAIM,OAAO,GAAG,SAASA,OAAT,CAAiB3C,IAAjB,EAAuB4C,EAAvB,EAA2B;EACvC,IAAI,EAAE,gBAAgBD,OAAlB,CAAJ,EAAgC,OAAO,IAAIA,OAAJ,CAAY3C,IAAZ,EAAkB4C,EAAlB,CAAP;EAEhC,KAAK5C,IAAL,GAAYpC,IAAI,CAACiF,OAAL,CAAa;IACvBC,eAAe,EAAE;EADM,CAAb,EAET9C,IAFS,CAAZ;EAIA,KAAK+C,OAAL,GAAe/C,IAAI,CAACgD,MAApB;EACA,KAAKC,OAAL,GAAejD,IAAI,CAACkD,MAApB;;EAEA,KAAKC,cAAL,CAAoB,KAAKJ,OAAzB;;EAEA,KAAKK,QAAL,GAAgB,KAAhB;EACA,KAAKC,eAAL,GAAuBvC,SAAvB;EAEA,KAAKwC,YAAL,GAAoB,EAApB;;EAEA,IAAItD,IAAI,CAACuD,MAAT,EAAiB;IACf,KAAKD,YAAL,CAAkBE,IAAlB,CAAuB;MACrBpD,OAAO,EAAEJ,IAAI,CAACuD,MADO;MAErBlD,IAAI,EAAE,EAFe;MAGrBC,IAAI,EAAE;IAHe,CAAvB;;IAKA,KAAKgD,YAAL,CAAkBE,IAAlB,CAAuB;MACrBpD,OAAO,EAAEJ,IAAI,CAACuD,MADO;MAErBlD,IAAI,EAAE,EAFe;MAGrBC,IAAI,EAAE;IAHe,CAAvB;EAKD;;EAED,KAAKmD,QAAL,GAAgB3C,SAAhB;EACA,KAAK4C,KAAL,GAAa,eAAb;EACA,KAAKC,GAAL,GAAWf,EAAX;;EAEA,IAAI,CAAC1E,QAAQ,CAACwE,KAAd,EAAqB;IACnBN,MAAM,CAACoB,IAAP,CAAY,IAAZ;EACD,CAFD,MAEO;IACL,KAAKhB,KAAL;EACD;AACF,CAvCD;;AAwCA5E,IAAI,CAACoD,QAAL,CAAc2B,OAAd,EAAuB9E,YAAvB;;AAEA8E,OAAO,CAACxD,SAAR,CAAkBgD,MAAlB,GAA2B,YAAW;EACpC,IAAI,KAAKsB,QAAT,EAAmB;IACjB,KAAKA,QAAL,CAActB,MAAd;EACD;AACF,CAJD;;AAMAQ,OAAO,CAACxD,SAAR,CAAkBgE,cAAlB,GAAmC,UAASS,IAAT,EAAe;EAChDhF,KAAK,CAAC,mBAAD,EAAsBgF,IAAtB,CAAL;EACA,KAAK3D,QAAL,GAAgB;IACdK,IAAI,EAAE,KAAK2C,OADG;IAEdY,KAAK,EAAE7F,MAAM,CAAC8F,cAAP,CAAsBC,EAFf;IAGdH,IAAI,EAAEA;EAHQ,CAAhB;AAKD,CAPD;;AAQA7D,OAAO,CAAC4C,OAAR,GAAkBA,OAAlB;;AAEAA,OAAO,CAACxD,SAAR,CAAkB6E,KAAlB,GAA0B,UAAS9C,GAAT,EAAcC,MAAd,EAAsB;EAC9CvC,KAAK,CAAC,aAAD,EAAgB,KAAKmE,OAArB,CAAL;EACA,IAAIlB,IAAI,GAAG,IAAX;EACAhD,OAAO,CAACoF,QAAR,CAAiB,YAAW;IAC1B,IAAI/C,GAAJ,EAAS;MACPA,GAAG,CAACgD,OAAJ,GAAcrC,IAAI,CAAC6B,KAAnB;IACD;;IACD7B,IAAI,CAAC8B,GAAL,CAASzC,GAAT,EAAcC,MAAd;EACD,CALD;AAMD,CATD;;AAWAwB,OAAO,CAACxD,SAAR,CAAkBgF,YAAlB,GAAiC,YAAW;EAC1CvF,KAAK,CAAC,yBAAD,EAA4B,KAAKmE,OAAjC,CAAL;EACA,IAAIqB,KAAK,GAAG,CAAZ;EAAA,IAAeC,CAAf;EAAA,IAAkBC,CAAlB;EAAA,IAAqBC,CAArB;EAAA,IAAwBC,KAAxB;EAEAA,KAAK,GAAGtG,QAAQ,CAACuG,YAAjB;;EAEA,OAAO,KAAKnB,YAAL,CAAkBoB,MAAlB,GAA2BxG,QAAQ,CAACyG,QAA3C,EAAqD;IACnDN,CAAC,GAAGG,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACE,MAAf,CAAT;IAEAH,CAAC,GAAG;MACFnE,OAAO,EAAEiE,CAAC,CAACjE,OADT;MAEFC,IAAI,EAAEgE,CAAC,CAAChE,IAFN;MAGFC,IAAI,EAAE;IAHJ,CAAJ;IAMAgE,CAAC,GAAG;MACFlE,OAAO,EAAEiE,CAAC,CAACjE,OADT;MAEFC,IAAI,EAAEgE,CAAC,CAAChE,IAFN;MAGFC,IAAI,EAAE;IAHJ,CAAJ;;IAMA,KAAKgD,YAAL,CAAkBE,IAAlB,CAAuBe,CAAvB;;IACA,KAAKjB,YAAL,CAAkBE,IAAlB,CAAuBc,CAAvB;;IAEAF,KAAK,IAAI,CAAT;EACD;;EAED,KAAKd,YAAL,CAAkBsB,OAAlB;AACD,CA5BD;;AA8BAjC,OAAO,CAACxD,SAAR,CAAkB0F,UAAlB,GAA+B,YAAW;EACxCjG,KAAK,CAAC,oBAAD,EAAuB,KAAKyE,eAA5B,EAA6C,KAAKN,OAAlD,CAAL;;EACA,KAAKO,YAAL,CAAkBwB,MAAlB,CAAyB,CAAzB,EAA4B,CAA5B,EAA+B,KAAKzB,eAApC;AACD,CAHD;;AAKAV,OAAO,CAACxD,SAAR,CAAkB4F,SAAlB,GAA8B,YAAW;EACvC,IAAI,CAAC,KAAK3B,QAAV,EAAoB;IAClB,KAAKA,QAAL,GAAgB,IAAI1D,IAAJ,GAAWsF,OAAX,EAAhB;IACA,KAAKrE,QAAL,GAAgBzC,QAAQ,CAAC+G,IAAzB;IAEA,IAAI,CAAC,KAAK3B,YAAL,CAAkBoB,MAAvB,EACE,KAAKP,YAAL;EACH;AACF,CARD;;AAUAxB,OAAO,CAACxD,SAAR,CAAkB+F,eAAlB,GAAoC,YAAW;EAC7CtG,KAAK,CAAC,yBAAD,EAA4B,KAAK0E,YAAL,CAAkBoB,MAA9C,EAAsD,KAAK3B,OAA3D,CAAL;EACA,OAAO,KAAKO,YAAL,CAAkBoB,MAAzB;AACD,CAHD;;AAKA/B,OAAO,CAACxD,SAAR,CAAkBgG,aAAlB,GAAkC,YAAW;EAC3CvG,KAAK,CAAC,uBAAD,EAA0B,KAAKmE,OAA/B,CAAL;AACD,CAFD;;AAIAJ,OAAO,CAACxD,SAAR,CAAkBqD,KAAlB,GAA0B,YAAW;EACnC,IAAI,CAAC,KAAKY,QAAV,EAAoB;IAClB,KAAK2B,SAAL;EACD;;EAED,IAAI,KAAKzB,YAAL,CAAkBoB,MAAlB,KAA6B,CAAjC,EAAoC;IAClC9F,KAAK,CAAC,yBAAD,EAA4B,KAAKmE,OAAjC,CAAL;IACA,KAAKpB,aAAL;EACD,CAHD,MAGO;IACL,KAAK0B,eAAL,GAAuB,KAAKC,YAAL,CAAkB8B,GAAlB,EAAvB;IACAxG,KAAK,CAAC,eAAD,EAAkB,KAAKyE,eAAvB,EAAwC,KAAKN,OAA7C,CAAL;IAEA,KAAKU,QAAL,GAAgB3D,OAAO,CAAC;MACtBG,QAAQ,EAAE,KAAKA,QADO;MAEtBC,MAAM,EAAE,KAAKmD,eAFS;MAGtB3C,OAAO,EAAExC,QAAQ,CAACwC,OAHI;MAItBC,QAAQ,EAAE,KAAKA;IAJO,CAAD,CAAvB;;IAOA,KAAK8C,QAAL,CAAchB,EAAd,CAAiB,SAAjB,EAA4B,KAAK4C,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAA5B;;IACA,KAAK7B,QAAL,CAAchB,EAAd,CAAiB,SAAjB,EAA4B,KAAK8C,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAA5B;;IACA,KAAK7B,QAAL,CAAchB,EAAd,CAAiB,OAAjB,EAA0B,KAAK8C,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAA1B;;IAEA,KAAK7B,QAAL,CAAc7B,IAAd;EACD;AACF,CAzBD;;AA2BA,IAAI4D,OAAO,GAAGxH,MAAM,CAACyH,aAAP,CAAqBD,OAAnC;AAAA,IACIE,QAAQ,GAAG1H,MAAM,CAACyH,aAAP,CAAqBC,QADpC;AAAA,IAEIC,QAAQ,GAAG3H,MAAM,CAACyH,aAAP,CAAqBE,QAFpC;AAAA,IAGIC,OAAO,GAAG5H,MAAM,CAACyH,aAAP,CAAqBG,OAHnC;;AAKAjD,OAAO,CAACxD,SAAR,CAAkBoG,OAAlB,GAA4B,UAASrE,GAAT,EAAcC,MAAd,EAAsB;EAChD,IAAI0E,KAAJ,EAAWC,KAAX;;EAEA,IAAI3E,MAAJ,EAAY;IACV0E,KAAK,GAAG1E,MAAM,CAAC4E,MAAP,CAAcF,KAAtB;EACD;;EAEDjH,KAAK,CAAC,gBAAD,EAAmBiH,KAAnB,EAA0B,KAAK9C,OAA/B,CAAL;;EAEA,QAAQ8C,KAAR;IACE,KAAKL,OAAL;MACE;MACA;MACA,IAAIrE,MAAM,CAAC4E,MAAP,CAAcC,EAAd,IACA,KAAKhG,IAAL,CAAU8C,eADV,IAEA,KAAKoC,eAAL,EAFJ,EAE4B;QAC1BtG,KAAK,CAAC,WAAD,EAAc,KAAKmE,OAAnB,EAA4B5B,MAA5B,CAAL;QACA,KAAKG,IAAL,CAAU,WAAV,EAAuBJ,GAAvB,EAA4BC,MAA5B,EAF0B,CAI1B;;QACA,KAAKmC,YAAL,GAAoB,KAAKA,YAAL,CAAkB2C,MAAlB,CAAyB,UAAS/F,MAAT,EAAiB;UAC5D,OAAOA,MAAM,CAACI,IAAP,KAAgB,KAAvB;QACD,CAFmB,CAApB;QAGAa,MAAM,GAAGL,SAAT;MACD;;MACD;;IACF,KAAK4E,QAAL;MACE,IAAI,KAAKR,eAAL,EAAJ,EAA4B;QAC1B,KAAKC,aAAL,GAD0B,CAE1B;;MACD,CAHD,MAGO;QACLW,KAAK,GAAG9H,MAAM,CAAC0H,QAAf;MACD;;MACDvE,MAAM,GAAGL,SAAT;MACA;;IACF,KAAK6E,QAAL;MACE,IAAI,KAAKT,eAAL,EAAJ,EAA4B;QAC1B,KAAKC,aAAL;MACD,CAFD,MAEO;QACLW,KAAK,GAAG9H,MAAM,CAAC2H,QAAf;MACD;;MACDxE,MAAM,GAAGL,SAAT;MACA;;IACF,KAAK8E,OAAL;MACE,IAAI,KAAKjF,QAAT,EAAmB;QACjB,KAAKA,QAAL,GAAgB,KAAhB,CADiB,CAEjB;MACD,CAHD,MAGO;QACLmF,KAAK,GAAG9H,MAAM,CAAC4H,OAAf;MACD;;MACDzE,MAAM,GAAGL,SAAT;MACA;;IACF;MACE,IAAI,CAACI,GAAL,EAAU;QACR4E,KAAK,GAAG9H,MAAM,CAACkI,aAAP,CAAqBL,KAArB,CAAR;QACA1E,MAAM,GAAGL,SAAT;MACD,CAHD,MAGO;QACLgF,KAAK,GAAG9H,MAAM,CAAC2H,QAAf;MACD;;MACD;EAlDJ;;EAqDA,IAAIG,KAAK,IAAI3E,MAAb,EAAqB;IACnB,IAAI2E,KAAJ,EAAW;MACT5E,GAAG,GAAG,IAAIV,KAAJ,CAAU,KAAKkD,KAAL,GAAa,GAAb,GAAmBoC,KAA7B,CAAN;MACA5E,GAAG,CAAC4E,KAAJ,GAAY5E,GAAG,CAACiF,IAAJ,GAAWL,KAAvB;IACD;;IACD,KAAK9B,KAAL,CAAW9C,GAAX,EAAgBC,MAAhB;EACD,CAND,MAMO;IACL,KAAKqB,KAAL;EACD;AACF,CAvED;;AAyEAG,OAAO,CAACxD,SAAR,CAAkBkG,cAAlB,GAAmC,YAAW;EAC5C,IAAInE,GAAJ;;EAEA,IAAI,KAAKoC,YAAL,CAAkBoB,MAAlB,KAA6B,CAAjC,EAAoC;IAClC9F,KAAK,CAAC,iCAAD,EAAoC,KAAKmE,OAAzC,CAAL;IACA7B,GAAG,GAAG,IAAIV,KAAJ,CAAU,KAAKkD,KAAL,GAAa,GAAb,GAAmB1F,MAAM,CAACoI,OAApC,CAAN;IACAlF,GAAG,CAAC4E,KAAJ,GAAY9H,MAAM,CAACoI,OAAnB;;IACA,KAAKpC,KAAL,CAAW9C,GAAX,EAAgBJ,SAAhB;EACD,CALD,MAKO;IACLlC,KAAK,CAAC,0BAAD,EAA6B,KAAKmE,OAAlC,CAAL;IACA,KAAKP,KAAL;EACD;AACF,CAZD;;AAcA,IAAI6D,OAAO,GAAG,UAASrD,MAAT,EAAiBE,MAAjB,EAAyBoD,EAAzB,EAA6BC,QAA7B,EAAuC;EACnD,IAAIC,GAAJ;;EAEA,IAAI,CAACD,QAAL,EAAe;IACbA,QAAQ,GAAGD,EAAX;IACAA,EAAE,GAAGxF,SAAL;EACD;;EAED,IAAI,CAACyF,QAAL,EAAe;IACbA,QAAQ,GAAGrD,MAAX;IACAA,MAAM,GAAGpC,SAAT;EACD;;EAEDoC,MAAM,GAAGlF,MAAM,CAACI,aAAP,CAAqB8E,MAAM,IAAI,GAA/B,CAAT;;EAEA,IAAIA,MAAM,KAAKvE,GAAf,EAAoB;IAClB,OAAOiG,OAAO,CAAC5B,MAAD,EAASuD,QAAT,CAAd;EACD;;EAED,IAAIvG,IAAI,GAAG;IACTgD,MAAM,EAAEA,MADC;IAETE,MAAM,EAAEA,MAFC;IAGTK,MAAM,EAAE+C;EAHC,CAAX;EAMAE,GAAG,GAAG,IAAI7D,OAAJ,CAAY3C,IAAZ,CAAN;;EAEAwG,GAAG,CAAC7C,GAAJ,GAAU,UAASzC,GAAT,EAAcuF,QAAd,EAAwB;IAChC,IAAIC,GAAG,GAAG,EAAV;IAAA,IAAcC,CAAd;IAAA,IAAiBC,CAAjB;;IAEA,IAAI1F,GAAJ,EAAS;MACPqF,QAAQ,CAACrF,GAAD,EAAMuF,QAAN,CAAR;MACA;IACD;;IAED,KAAKE,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,QAAQ,CAACtF,MAAT,CAAgBuD,MAAhC,EAAwCiC,CAAC,EAAzC,EAA6C;MAC3CC,CAAC,GAAGH,QAAQ,CAACtF,MAAT,CAAgBwF,CAAhB,CAAJ;;MACA,IAAIC,CAAC,CAACtG,IAAF,KAAW4C,MAAf,EAAuB;QACrB,QAAQA,MAAR;UACE,KAAK/E,CAAL;UACA,KAAKE,IAAL;YACEqI,GAAG,CAAClD,IAAJ,CAASoD,CAAC,CAACxG,OAAX;YACA;;UACF,KAAKpC,MAAM,CAACI,aAAP,CAAqBE,EAA1B;YACEoI,GAAG,CAAClD,IAAJ,CAAS;cACPqD,QAAQ,EAAED,CAAC,CAACC,QADL;cAEPC,QAAQ,EAAEF,CAAC,CAACE;YAFL,CAAT;YAIA;;UACF,KAAKvI,GAAL;UACA,KAAKC,EAAL;UACA,KAAKC,KAAL;UACA,KAAKE,GAAL;YACE+H,GAAG,CAAClD,IAAJ,CAASoD,CAAC,CAACG,IAAX;YACA;;UACF,KAAKrI,GAAL;YACEgI,GAAG,CAAClD,IAAJ,CAAS;cACPqD,QAAQ,EAAED,CAAC,CAACC,QADL;cAEPG,MAAM,EAAEJ,CAAC,CAACI,MAFH;cAGP3G,IAAI,EAAEuG,CAAC,CAACvG,IAHD;cAIPuD,IAAI,EAAEgD,CAAC,CAACK;YAJD,CAAT;YAMA;;UACF;YACEP,GAAG,CAAClD,IAAJ,CAASoD,CAAT;YACA;QA3BJ;MA6BD;IACF;;IAED,IAAIF,GAAG,CAAChC,MAAJ,KAAe,CAAnB,EAAsB;MACpBgC,GAAG,GAAG5F,SAAN;IACD;;IAEDyF,QAAQ,CAACrF,GAAD,EAAMwF,GAAN,CAAR;EACD,CAhDD;;EAkDA,OAAOF,GAAP;AACD,CA9ED;;AA+EAzG,OAAO,CAACsG,OAAR,GAAkBA,OAAlB;;AAEA,IAAIa,QAAQ,GAAG,UAASlE,MAAT,EAAiBuD,QAAjB,EAA2B;EACxC,OAAOF,OAAO,CAACrD,MAAD,EAAS,GAAT,EAAc,UAAS9B,GAAT,EAAca,OAAd,EAAuB;IACjDwE,QAAQ,CAACrF,GAAD,EAAMa,OAAN,CAAR;EACD,CAFa,CAAd;AAGD,CAJD;;AAKAhC,OAAO,CAACmH,QAAR,GAAmBA,QAAnB;;AAEA,IAAIC,QAAQ,GAAG,UAASnE,MAAT,EAAiBuD,QAAjB,EAA2B;EACxC,OAAOF,OAAO,CAACrD,MAAD,EAAS,MAAT,EAAiB,UAAS9B,GAAT,EAAca,OAAd,EAAuB;IACpDwE,QAAQ,CAACrF,GAAD,EAAMa,OAAN,CAAR;EACD,CAFa,CAAd;AAGD,CAJD;;AAKAhC,OAAO,CAACoH,QAAR,GAAmBA,QAAnB;;AAEA,IAAIC,SAAS,GAAG,UAASpE,MAAT,EAAiBuD,QAAjB,EAA2B;EACzC,OAAOF,OAAO,CAACrD,MAAD,EAAS,IAAT,EAAe,UAAS9B,GAAT,EAAca,OAAd,EAAuB;IAClDwE,QAAQ,CAACrF,GAAD,EAAMa,OAAN,CAAR;EACD,CAFa,CAAd;AAGD,CAJD;;AAKAhC,OAAO,CAACqH,SAAR,GAAoBA,SAApB;;AAEA,IAAIC,UAAU,GAAG,UAASrE,MAAT,EAAiBuD,QAAjB,EAA2B;EAC1C,OAAOF,OAAO,CAACrD,MAAD,EAAS,KAAT,EAAgB,UAAS9B,GAAT,EAAca,OAAd,EAAuB;IACnDwE,QAAQ,CAACrF,GAAD,EAAMa,OAAN,CAAR;EACD,CAFa,CAAd;AAGD,CAJD;;AAKAhC,OAAO,CAACsH,UAAR,GAAqBA,UAArB;;AAEA,IAAIC,UAAU,GAAG,UAAStE,MAAT,EAAiBuD,QAAjB,EAA2B;EAC1C,OAAOF,OAAO,CAACrD,MAAD,EAAS,KAAT,EAAgB,UAAS9B,GAAT,EAAca,OAAd,EAAuB;IACnDwE,QAAQ,CAACrF,GAAD,EAAMa,OAAN,CAAR;EACD,CAFa,CAAd;AAGD,CAJD;;AAKAhC,OAAO,CAACuH,UAAR,GAAqBA,UAArB;;AAEA,IAAIC,SAAS,GAAG,UAASvE,MAAT,EAAiBuD,QAAjB,EAA2B;EACzC,OAAOF,OAAO,CAACrD,MAAD,EAAS,IAAT,EAAe,UAAS9B,GAAT,EAAca,OAAd,EAAuB;IAClDwE,QAAQ,CAACrF,GAAD,EAAMa,OAAN,CAAR;EACD,CAFa,CAAd;AAGD,CAJD;;AAKAhC,OAAO,CAACwH,SAAR,GAAoBA,SAApB;;AAEA,IAAIC,YAAY,GAAG,UAASxE,MAAT,EAAiBuD,QAAjB,EAA2B;EAC5C,OAAOF,OAAO,CAACrD,MAAD,EAAS,OAAT,EAAkB,UAAS9B,GAAT,EAAca,OAAd,EAAuB;IACrDwE,QAAQ,CAACrF,GAAD,EAAMa,OAAN,CAAR;EACD,CAFa,CAAd;AAGD,CAJD;;AAKAhC,OAAO,CAACyH,YAAR,GAAuBA,YAAvB;;AAEA,IAAI5C,OAAO,GAAG,UAAS0B,EAAT,EAAaC,QAAb,EAAuB;EACnC,IAAI/G,KAAJ,EAAWQ,IAAX,EAAiBwG,GAAjB;;EAEA,IAAI,CAAC7I,GAAG,CAAC4C,IAAJ,CAAS+F,EAAT,CAAL,EAAmB;IACjB9G,KAAK,GAAG,IAAIgB,KAAJ,CAAU,uBAAV,CAAR;IACAhB,KAAK,CAACsG,KAAN,GAActG,KAAK,CAAC2G,IAAN,GAAa,SAA3B;IACA,MAAM3G,KAAN;EACD;;EAEDQ,IAAI,GAAG;IACLgD,MAAM,EAAE/E,KAAK,CAACwJ,SAAN,CAAgBnB,EAAhB,CADH;IAELpD,MAAM,EAAEvE;EAFH,CAAP;EAKA6H,GAAG,GAAG,IAAIkB,MAAJ,CAAW1H,IAAX,CAAN;;EAEAwG,GAAG,CAAC7C,GAAJ,GAAU,UAASzC,GAAT,EAAcuF,QAAd,EAAwB;IAChC,IAAI1E,OAAO,GAAG,EAAd;;IAEA,IAAI0E,QAAJ,EAAc;MACZA,QAAQ,CAACtF,MAAT,CAAgBmB,OAAhB,CAAwB,UAASsE,CAAT,EAAY;QAClC,IAAIA,CAAC,CAACtG,IAAF,KAAW3B,GAAf,EAAoB;UAClBoD,OAAO,CAACyB,IAAR,CAAaoD,CAAC,CAACG,IAAf;QACD;MACF,CAJD;IAKD;;IAED,IAAIhF,OAAO,CAAC2C,MAAR,KAAmB,CAAvB,EAA0B;MACxB3C,OAAO,GAAGjB,SAAV;IACD;;IAEDyF,QAAQ,CAACrF,GAAD,EAAMa,OAAN,CAAR;EACD,CAhBD;;EAkBA,OAAOyE,GAAP;AACD,CAnCD;;AAoCAzG,OAAO,CAAC6E,OAAR,GAAkBA,OAAlB;;AAEA,IAAI8C,MAAM,GAAG,UAAS1H,IAAT,EAAe;EAC1B2C,OAAO,CAACtD,IAAR,CAAa,IAAb,EAAmBW,IAAnB;EACA,KAAK0D,KAAL,GAAa,aAAb;AACD,CAHD;;AAIA9F,IAAI,CAACoD,QAAL,CAAc0G,MAAd,EAAsB/E,OAAtB;;AAEA+E,MAAM,CAACvI,SAAP,CAAiBqD,KAAjB,GAAyB,YAAW;EAClC,IAAIX,IAAI,GAAG,IAAX;;EAEA,IAAI,CAAC,KAAKuB,QAAV,EAAoB;IAClB,KAAKuE,YAAL,GAAoBzJ,QAAQ,CAAC0J,WAAT,CAAqBxI,KAArB,CAA2B,CAA3B,CAApB;;IACA,KAAK2F,SAAL;EACD;;EAED7G,QAAQ,CAAC2J,KAAT,CAAe/F,MAAf,CAAsB,KAAK7B,QAA3B,EAAqC,UAAS8B,OAAT,EAAkB;IACrD,IAAIC,MAAJ;;IACA,IAAID,OAAO,IAAIA,OAAO,CAAC2C,MAAvB,EAA+B;MAC7B9F,KAAK,CAAC,iBAAD,EAAoBmD,OAApB,CAAL;MACAC,MAAM,GAAG,IAAIjE,MAAJ,EAAT;MACAiE,MAAM,CAACb,MAAP,GAAgBY,OAAO,CAAC3C,KAAR,EAAhB;;MACAyC,IAAI,CAACmC,KAAL,CAAW,IAAX,EAAiBhC,MAAjB;IACD,CALD,MAKO;MACLpD,KAAK,CAAC,qBAAD,CAAL;MACA+D,OAAO,CAACxD,SAAR,CAAkBqD,KAAlB,CAAwBnD,IAAxB,CAA6BwC,IAA7B;IACD;EACF,CAXD;AAYD,CApBD;;AAsBA6F,MAAM,CAACvI,SAAP,CAAiB+F,eAAjB,GAAmC,YAAW;EAC5CtG,KAAK,CAAC,wBAAD,EAA2B,KAAK0E,YAAL,CAAkBoB,MAA7C,EACC,KAAKiD,YAAL,CAAkBjD,MADnB,CAAL;EAEA,OAAO,KAAKpB,YAAL,CAAkBoB,MAAlB,IAA4B,KAAKiD,YAAL,CAAkBjD,MAArD;AACD,CAJD;;AAMAgD,MAAM,CAACvI,SAAP,CAAiBgG,aAAjB,GAAiC,YAAW;EAC1CvG,KAAK,CAAC,sBAAD,CAAL;;EACA,KAAKuE,cAAL,CAAoB,CAAC,KAAKJ,OAAN,EAAe,KAAK4E,YAAL,CAAkBvC,GAAlB,EAAf,EAAwC0C,IAAxC,CAA6C,GAA7C,CAApB;AACD,CAHD;;AAKA,IAAIhG,MAAM,GAAG,UAASkB,MAAT,EAAiB+E,MAAjB,EAAyBxB,QAAzB,EAAmC;EAC9C,IAAIrD,MAAJ,EAAY8E,KAAZ,EAAmBxB,GAAnB;;EAEA,IAAI,CAACD,QAAL,EAAe;IACbA,QAAQ,GAAGwB,MAAX;IACAA,MAAM,GAAGjH,SAAT;EACD;;EAED,IAAI,CAACiH,MAAL,EAAa;IACXA,MAAM,GAAG,CAAT;EACD;;EAEDC,KAAK,GAAGrK,GAAG,CAAC4C,IAAJ,CAASyC,MAAT,CAAR;;EAEA,IAAIgF,KAAK,KAAK,CAAV,IAAeA,KAAK,KAAK,CAA7B,EAAgC;IAC9BnJ,OAAO,CAACoF,QAAR,CAAiB,YAAW;MAC1BsC,QAAQ,CAAC,IAAD,EAAOvD,MAAP,EAAegF,KAAf,CAAR;IACD,CAFD;IAGA,OAAO,EAAP;EACD;;EAED,IAAI,CAAChF,MAAL,EAAa;IACXnE,OAAO,CAACoF,QAAR,CAAiB,YAAW;MAC1BsC,QAAQ,CAAC,IAAD,EAAO,IAAP,EAAawB,MAAb,CAAR;IACD,CAFD;IAGA,OAAO,EAAP;EACD;;EAED7E,MAAM,GAAGlF,MAAM,CAACiK,eAAP,CAAuBF,MAAvB,CAAT;EAEA,IAAI/H,IAAI,GAAG;IACTgD,MAAM,EAAEA,MADC;IAETE,MAAM,EAAEA;EAFC,CAAX;EAKAsD,GAAG,GAAG,IAAIkB,MAAJ,CAAW1H,IAAX,CAAN;;EAEAwG,GAAG,CAAC7C,GAAJ,GAAU,UAASzC,GAAT,EAAcuF,QAAd,EAAwB;IAChC,IAAIE,CAAJ,EAAOuB,OAAP,EAAgB9H,OAAhB,EAAyBwG,CAAzB,EAA4BuB,GAA5B;;IAEA,IAAIjH,GAAJ,EAAS;MACPqF,QAAQ,CAACrF,GAAD,EAAMJ,SAAN,EAAiBA,SAAjB,CAAR;MACA;IACD;;IAEDqH,GAAG,GAAG1B,QAAQ,CAACtF,MAAT,CAAgBtB,MAAhB,CAAuB4G,QAAQ,CAAC2B,UAAhC,CAAN;;IAEA,KAAKzB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGwB,GAAG,CAACzD,MAApB,EAA4BiC,CAAC,EAA7B,EAAiC;MAC/BC,CAAC,GAAGuB,GAAG,CAACxB,CAAD,CAAP;;MAEA,IAAIC,CAAC,CAACtG,IAAF,KAAWnC,CAAX,IAAgByI,CAAC,CAACtG,IAAF,KAAWjC,IAA/B,EAAqC;QACnC6J,OAAO,GAAGlK,MAAM,CAACqK,eAAP,CAAuBzB,CAAC,CAACtG,IAAzB,CAAV;QACAF,OAAO,GAAGwG,CAAC,CAACxG,OAAZ;QACA;MACD;IACF;;IAEDmG,QAAQ,CAACrF,GAAD,EAAMd,OAAN,EAAe8H,OAAf,CAAR;EACD,CArBD;;EAuBA,OAAO1B,GAAP;AACD,CA7DD;;AA8DAzG,OAAO,CAAC+B,MAAR,GAAiBA,MAAjB"},"metadata":{},"sourceType":"script"}