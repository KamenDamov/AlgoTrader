{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Kamen\\\\ML\\\\AlgoTrader\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Kamen\\\\ML\\\\AlgoTrader\\\\my-app\\\\src\\\\components\\\\SignUp.js\";\nimport \"./style/signup.css\";\nimport './style/global.css';\nimport { Link } from 'react-router-dom';\nimport React, { useState } from \"react\";\nvar _require = require('pg'),\n  Pool = _require.Pool;\nfunction RegistrationForm() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    funds = _useState8[0],\n    setFunds = _useState8[1];\n  var pool = new Pool({\n    user: 'postgres',\n    host: 'localhost',\n    database: 'financial_db',\n    password: 'KaMendiNiO',\n    port: 5432 // or your custom port number\n  });\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    var user = {\n      name: name,\n      email: email,\n      password: password,\n      funds: funds\n    };\n    pool.query('INSERT INTO users (username, email, password, funds) VALUES ($1, $2, $3, $4)', [name, email, password, funds]).then(function () {\n      console.log('User created successfully');\n      // TODO: Add success message\n    }).catch(function (error) {\n      console.error(error);\n      // TODO: Add error message\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hero-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    name: \"name\",\n    value: name,\n    onChange: function onChange(event) {\n      return setName(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: function onChange(event) {\n      return setEmail(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: function onChange(event) {\n      return setPassword(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"funds\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"Add funds\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    min: \"0\",\n    id: \"funds\",\n    name: \"funds\",\n    value: funds,\n    onChange: function onChange(event) {\n      return setFunds(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"Back to landing page\"))));\n}\nexport default RegistrationForm;","map":{"version":3,"names":["Link","React","useState","_require","require","Pool","RegistrationForm","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","funds","setFunds","pool","user","host","database","port","handleSubmit","event","preventDefault","query","then","console","log","catch","error","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","min","to"],"sources":["C:/Users/Kamen/ML/AlgoTrader/my-app/src/components/SignUp.js"],"sourcesContent":["import \"./style/signup.css\";\r\nimport './style/global.css';\r\nimport { Link } from 'react-router-dom';\r\nimport React, { useState } from \"react\";\r\nconst { Pool } = require('pg');\r\n\r\n\r\n\r\nfunction RegistrationForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\")\r\n  const [funds, setFunds] = useState(\"\")\r\n\r\n  const pool = new Pool({\r\n    user: 'postgres',\r\n    host: 'localhost',\r\n    database: 'financial_db',\r\n    password: 'KaMendiNiO',\r\n    port: 5432, // or your custom port number\r\n  });\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const user = { name, email, password, funds };\r\n    pool.query('INSERT INTO users (username, email, password, funds) VALUES ($1, $2, $3, $4)', [name, email, password, funds])\r\n    .then(() => {\r\n      console.log('User created successfully');\r\n      // TODO: Add success message\r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n      // TODO: Add error message\r\n    });\r\n    };\r\n\r\n  return (\r\n    <div className=\"hero-image\">\r\n      <div className=\"form-container\">\r\n        <form onSubmit={handleSubmit}>\r\n          <label htmlFor=\"name\">Username</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={(event) => setName(event.target.value)}\r\n          />\r\n\r\n          <label htmlFor=\"email\">Email Address</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={(event) => setEmail(event.target.value)}\r\n          />\r\n\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={(event) => setPassword(event.target.value)}\r\n          />\r\n          <label htmlFor=\"funds\">Add funds</label>\r\n          <input\r\n            type=\"number\"\r\n            min = '0'\r\n            id=\"funds\"\r\n            name=\"funds\"\r\n            value={funds}\r\n            onChange={(event) => setFunds(event.target.value)}\r\n          />\r\n\r\n          <button type=\"submit\">Submit</button>\r\n          <Link to=\"/\">Back to landing page</Link>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegistrationForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}