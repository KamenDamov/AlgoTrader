{"ast":null,"code":"// Copyright 2012 Iris Couch, all rights reserved.\n//\n// Looking up and converting between various constants\nvar util = require('util');\n\nmodule.exports = {\n  'type': swap_type,\n  'class': swap_class,\n  'type_to_label': type_to_label,\n  'type_to_number': type_to_number,\n  'class_to_label': class_to_label,\n  'class_to_number': class_to_number // For testing\n  ,\n  'transpose': transpose,\n  'mk_type_labels': mk_type_labels\n};\nvar TYPE_LABELS = mk_type_labels(),\n    CLASS_LABELS = mk_class_labels(),\n    TYPE_NUMBERS = transpose(TYPE_LABELS),\n    CLASS_NUMBERS = transpose(CLASS_LABELS);\n\nfunction swap_type(obj) {\n  return typeof obj == 'string' ? type_to_number(obj) : type_to_label(obj);\n}\n\nfunction swap_class(obj) {\n  return typeof obj == 'string' ? class_to_number(obj) : class_to_label(obj);\n}\n\nfunction type_to_label(type) {\n  if (isNaN(type) || typeof type != 'number' || type < 1 || type > 65535) throw new Error('Invalid record type: ' + type);\n  return TYPE_LABELS[type];\n}\n\nfunction type_to_number(type) {\n  if (typeof type != 'string') throw new Error('Type must be string: ' + type);\n  var num = TYPE_NUMBERS[type];\n  if (!num) throw new Error('No such type label: ' + type);else return num;\n}\n\nfunction class_to_label(clas) {\n  if (isNaN(clas) || typeof clas != 'number' || clas < 1 || clas > 65535) throw new Error('Invalid record class: ' + clas);\n  return CLASS_LABELS[clas];\n}\n\nfunction class_to_number(clas) {\n  if (typeof clas != 'string') throw new Error('Type must be string: ' + clas);\n  var num = CLASS_NUMBERS[clas];\n  if (!num) throw new Error('No such clas label: ' + clas);else return num;\n} //\n// Utilities\n//\n\n\nfunction transpose(obj) {\n  var result = {};\n  Object.keys(obj).forEach(function (key) {\n    var val = obj[key];\n    if (typeof val == 'string') result[val] = +key;\n  });\n  return result;\n}\n\nfunction mk_class_labels() {\n  var classes = {\n    0: 'reserved',\n    1: 'IN',\n    2: null,\n    3: 'CH',\n    4: 'HS' // 5 - 127 unassigned classes\n    // 128 - 253 unassigned qclasses\n    ,\n    254: 'NONE',\n    255: '*' // 256 - 32767 unassigned\n    // 32768 - 57343 unassigned\n    // 57344 - 65279 unassigned qclasses and metaclasses\n    // 65280 - 65534 Private use\n    ,\n    65535: 'reserved'\n  };\n  var unassigned = [[5, 253], [256, 65279]];\n  unassigned.forEach(function (pair) {\n    var start = pair[0],\n        stop = pair[1];\n\n    for (var i = start; i <= stop; i++) classes[i] = null;\n  });\n\n  for (var i = 65280; i <= 65534; i++) classes[i] = 'Private use';\n\n  return classes;\n}\n\nfunction mk_type_labels() {\n  var types = {\n    0: null,\n    1: 'A',\n    2: 'NS',\n    3: 'MD',\n    4: 'MF',\n    5: 'CNAME',\n    6: 'SOA',\n    7: 'MB',\n    8: 'MG',\n    9: 'MR',\n    10: 'NULL',\n    11: 'WKS',\n    12: 'PTR',\n    13: 'HINFO',\n    14: 'MINFO',\n    15: 'MX',\n    16: 'TXT',\n    17: 'RP',\n    18: 'AFSDB',\n    19: 'X25',\n    20: 'ISDN',\n    21: 'RT',\n    22: 'NSAP',\n    23: 'NSAP-PTR',\n    24: 'SIG',\n    25: 'KEY',\n    26: 'PX',\n    27: 'GPOS',\n    28: 'AAAA',\n    29: 'LOC',\n    30: 'NXT',\n    31: 'EID',\n    32: 'NIMLOC',\n    33: 'SRV',\n    34: 'ATMA',\n    35: 'NAPTR',\n    36: 'KX',\n    37: 'CERT',\n    38: 'A6',\n    39: 'DNAME',\n    40: 'SINK',\n    41: 'OPT',\n    42: 'APL',\n    43: 'DS',\n    44: 'SSHFP',\n    45: 'IPSECKEY',\n    46: 'RRSIG',\n    47: 'NSEC',\n    48: 'DNSKEY',\n    49: 'DHCID',\n    50: 'NSEC3',\n    51: 'NSEC3PARAM',\n    52: 'TLSA' // 53 - 54 unassigned\n    ,\n    55: 'HIP',\n    56: 'NINFO',\n    57: 'RKEY',\n    58: 'TALINK',\n    59: 'CDS' // 60 - 98 unassigned\n    ,\n    99: 'SPF',\n    100: 'UINFO',\n    101: 'UID',\n    102: 'GID',\n    103: 'UNSPEC',\n    104: 'NID',\n    105: 'L32',\n    106: 'L64',\n    107: 'LP' // 108 - 248 unassigned\n    ,\n    249: 'TKEY',\n    250: 'TSIG',\n    251: 'IXFR',\n    252: 'AXFR',\n    253: 'MAILB',\n    254: 'MAILA',\n    255: '*',\n    256: 'URI',\n    257: 'CAA' // 258 - 32767 unassigned\n    ,\n    32768: 'TA',\n    32769: 'DLV' // 32770 - 65279 unassigned\n    // 65280 - 65534 Private use\n    ,\n    65535: 'Reserved'\n  };\n  var unassigned = [[53, 54], [60, 98], [108, 248], [258, 32767], [32770, 65279]];\n  unassigned.forEach(function (pair) {\n    var start = pair[0],\n        stop = pair[1];\n\n    for (var i = start; i <= stop; i++) types[i] = null;\n  });\n\n  for (var i = 65280; i <= 65534; i++) types[i] = 'Private use';\n\n  return types;\n}","map":{"version":3,"names":["util","require","module","exports","swap_type","swap_class","type_to_label","type_to_number","class_to_label","class_to_number","transpose","mk_type_labels","TYPE_LABELS","CLASS_LABELS","mk_class_labels","TYPE_NUMBERS","CLASS_NUMBERS","obj","type","isNaN","Error","num","clas","result","Object","keys","forEach","key","val","classes","unassigned","pair","start","stop","i","types"],"sources":["C:/Users/Kamen/ML/AlgoTrader/node_modules/hbo-dnsd/constants.js"],"sourcesContent":["// Copyright 2012 Iris Couch, all rights reserved.\r\n//\r\n// Looking up and converting between various constants\r\n\r\nvar util = require('util')\r\n\r\nmodule.exports = { 'type'           : swap_type\r\n                 , 'class'          : swap_class\r\n                 , 'type_to_label'  : type_to_label\r\n                 , 'type_to_number' : type_to_number\r\n                 , 'class_to_label' : class_to_label\r\n                 , 'class_to_number': class_to_number\r\n\r\n                 // For testing\r\n                 , 'transpose'     : transpose\r\n                 , 'mk_type_labels': mk_type_labels\r\n                 }\r\n\r\nvar TYPE_LABELS   = mk_type_labels()\r\n  , CLASS_LABELS  = mk_class_labels()\r\n  , TYPE_NUMBERS  = transpose(TYPE_LABELS)\r\n  , CLASS_NUMBERS = transpose(CLASS_LABELS)\r\n\r\nfunction swap_type(obj) {\r\n  return (typeof obj == 'string') ? type_to_number(obj) : type_to_label(obj)\r\n}\r\n\r\nfunction swap_class(obj) {\r\n  return (typeof obj == 'string') ? class_to_number(obj) : class_to_label(obj)\r\n}\r\n\r\nfunction type_to_label(type) {\r\n  if(isNaN(type) || typeof type != 'number' || type < 1 || type > 65535)\r\n    throw new Error('Invalid record type: ' + type)\r\n  return TYPE_LABELS[type]\r\n}\r\n\r\nfunction type_to_number(type) {\r\n  if(typeof type != 'string')\r\n    throw new Error('Type must be string: ' + type)\r\n\r\n  var num = TYPE_NUMBERS[type]\r\n  if(!num)\r\n    throw new Error('No such type label: ' + type)\r\n  else\r\n    return num\r\n}\r\n\r\nfunction class_to_label(clas) {\r\n  if(isNaN(clas) || typeof clas != 'number' || clas < 1 || clas > 65535)\r\n    throw new Error('Invalid record class: ' + clas)\r\n  return CLASS_LABELS[clas]\r\n}\r\n\r\nfunction class_to_number(clas) {\r\n  if(typeof clas != 'string')\r\n    throw new Error('Type must be string: ' + clas)\r\n\r\n  var num = CLASS_NUMBERS[clas]\r\n  if(!num)\r\n    throw new Error('No such clas label: ' + clas)\r\n  else\r\n    return num\r\n}\r\n\r\n//\r\n// Utilities\r\n//\r\n\r\nfunction transpose(obj) {\r\n  var result = {}\r\n  Object.keys(obj).forEach(function(key) {\r\n    var val = obj[key]\r\n    if(typeof val == 'string')\r\n      result[val] = +key\r\n  })\r\n\r\n  return result\r\n}\r\n\r\nfunction mk_class_labels() {\r\n  var classes =\r\n    { 0: 'reserved'\r\n    , 1: 'IN'\r\n    , 2: null\r\n    , 3: 'CH'\r\n    , 4: 'HS'\r\n    // 5 - 127 unassigned classes\r\n    // 128 - 253 unassigned qclasses\r\n    , 254: 'NONE'\r\n    , 255: '*'\r\n    // 256 - 32767 unassigned\r\n    // 32768 - 57343 unassigned\r\n    // 57344 - 65279 unassigned qclasses and metaclasses\r\n    // 65280 - 65534 Private use\r\n    , 65535: 'reserved'\r\n    }\r\n\r\n  var unassigned = [ [5,253], [256,65279] ]\r\n  unassigned.forEach(function(pair) {\r\n    var start = pair[0], stop = pair[1]\r\n    for(var i = start; i <= stop; i++)\r\n      classes[i] = null\r\n  })\r\n\r\n  for(var i = 65280; i <= 65534; i++)\r\n    classes[i] = 'Private use'\r\n\r\n  return classes\r\n}\r\n\r\nfunction mk_type_labels() {\r\n  var types =\r\n    { 0: null\r\n    , 1: 'A'\r\n    , 2: 'NS'\r\n    , 3: 'MD'\r\n    , 4: 'MF'\r\n    , 5: 'CNAME'\r\n    , 6: 'SOA'\r\n    , 7: 'MB'\r\n    , 8: 'MG'\r\n    , 9: 'MR'\r\n    , 10: 'NULL'\r\n    , 11: 'WKS'\r\n    , 12: 'PTR'\r\n    , 13: 'HINFO'\r\n    , 14: 'MINFO'\r\n    , 15: 'MX'\r\n    , 16: 'TXT'\r\n    , 17: 'RP'\r\n    , 18: 'AFSDB'\r\n    , 19: 'X25'\r\n    , 20: 'ISDN'\r\n    , 21: 'RT'\r\n    , 22: 'NSAP'\r\n    , 23: 'NSAP-PTR'\r\n    , 24: 'SIG'\r\n    , 25: 'KEY'\r\n    , 26: 'PX'\r\n    , 27: 'GPOS'\r\n    , 28: 'AAAA'\r\n    , 29: 'LOC'\r\n    , 30: 'NXT'\r\n    , 31: 'EID'\r\n    , 32: 'NIMLOC'\r\n    , 33: 'SRV'\r\n    , 34: 'ATMA'\r\n    , 35: 'NAPTR'\r\n    , 36: 'KX'\r\n    , 37: 'CERT'\r\n    , 38: 'A6'\r\n    , 39: 'DNAME'\r\n    , 40: 'SINK'\r\n    , 41: 'OPT'\r\n    , 42: 'APL'\r\n    , 43: 'DS'\r\n    , 44: 'SSHFP'\r\n    , 45: 'IPSECKEY'\r\n    , 46: 'RRSIG'\r\n    , 47: 'NSEC'\r\n    , 48: 'DNSKEY'\r\n    , 49: 'DHCID'\r\n    , 50: 'NSEC3'\r\n    , 51: 'NSEC3PARAM'\r\n    , 52: 'TLSA'\r\n    // 53 - 54 unassigned\r\n    , 55: 'HIP'\r\n    , 56: 'NINFO'\r\n    , 57: 'RKEY'\r\n    , 58: 'TALINK'\r\n    , 59: 'CDS'\r\n    // 60 - 98 unassigned\r\n    , 99: 'SPF'\r\n    , 100: 'UINFO'\r\n    , 101: 'UID'\r\n    , 102: 'GID'\r\n    , 103: 'UNSPEC'\r\n    , 104: 'NID'\r\n    , 105: 'L32'\r\n    , 106: 'L64'\r\n    , 107: 'LP'\r\n    // 108 - 248 unassigned\r\n    , 249: 'TKEY'\r\n    , 250: 'TSIG'\r\n    , 251: 'IXFR'\r\n    , 252: 'AXFR'\r\n    , 253: 'MAILB'\r\n    , 254: 'MAILA'\r\n    , 255: '*'\r\n    , 256: 'URI'\r\n    , 257: 'CAA'\r\n    // 258 - 32767 unassigned\r\n    , 32768: 'TA'\r\n    , 32769: 'DLV'\r\n    // 32770 - 65279 unassigned\r\n    // 65280 - 65534 Private use\r\n    , 65535: 'Reserved'\r\n    }\r\n\r\n  var unassigned = [ [53,54], [60,98], [108,248], [258,32767], [32770,65279] ]\r\n  unassigned.forEach(function(pair) {\r\n    var start = pair[0], stop = pair[1]\r\n    for(var i = start; i <= stop; i++)\r\n      types[i] = null\r\n  })\r\n\r\n  for(var i = 65280; i <= 65534; i++)\r\n    types[i] = 'Private use'\r\n\r\n  return types\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}