{"ast":null,"code":"'use strict';\n\nconst util = require('util');\n\nconst contentPath = require('./path');\n\nconst {\n  hasContent\n} = require('./read');\n\nconst rimraf = util.promisify(require('rimraf'));\nmodule.exports = rm;\n\nfunction rm(cache, integrity) {\n  return hasContent(cache, integrity).then(content => {\n    // ~pretty~ sure we can't end up with a content lacking sri, but be safe\n    if (content && content.sri) return rimraf(contentPath(cache, content.sri)).then(() => true);else return false;\n  });\n}","map":{"version":3,"names":["util","require","contentPath","hasContent","rimraf","promisify","module","exports","rm","cache","integrity","then","content","sri"],"sources":["C:/Users/Kamen/ML/AlgoTrader/node_modules/cacache/lib/content/rm.js"],"sourcesContent":["'use strict'\n\nconst util = require('util')\n\nconst contentPath = require('./path')\nconst { hasContent } = require('./read')\nconst rimraf = util.promisify(require('rimraf'))\n\nmodule.exports = rm\n\nfunction rm (cache, integrity) {\n  return hasContent(cache, integrity).then((content) => {\n    // ~pretty~ sure we can't end up with a content lacking sri, but be safe\n    if (content && content.sri)\n      return rimraf(contentPath(cache, content.sri)).then(() => true)\n    else\n      return false\n  })\n}\n"],"mappings":"AAAA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEA,MAAMC,WAAW,GAAGD,OAAO,CAAC,QAAD,CAA3B;;AACA,MAAM;EAAEE;AAAF,IAAiBF,OAAO,CAAC,QAAD,CAA9B;;AACA,MAAMG,MAAM,GAAGJ,IAAI,CAACK,SAAL,CAAeJ,OAAO,CAAC,QAAD,CAAtB,CAAf;AAEAK,MAAM,CAACC,OAAP,GAAiBC,EAAjB;;AAEA,SAASA,EAAT,CAAaC,KAAb,EAAoBC,SAApB,EAA+B;EAC7B,OAAOP,UAAU,CAACM,KAAD,EAAQC,SAAR,CAAV,CAA6BC,IAA7B,CAAmCC,OAAD,IAAa;IACpD;IACA,IAAIA,OAAO,IAAIA,OAAO,CAACC,GAAvB,EACE,OAAOT,MAAM,CAACF,WAAW,CAACO,KAAD,EAAQG,OAAO,CAACC,GAAhB,CAAZ,CAAN,CAAwCF,IAAxC,CAA6C,MAAM,IAAnD,CAAP,CADF,KAGE,OAAO,KAAP;EACH,CANM,CAAP;AAOD"},"metadata":{},"sourceType":"script"}