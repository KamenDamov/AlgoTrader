{"ast":null,"code":"function RetryOperation(timeouts, options) {\n  // Compatibility for the old (timeouts, retryForever) signature\n  if (typeof options === 'boolean') {\n    options = {\n      forever: options\n    };\n  }\n\n  this._originalTimeouts = JSON.parse(JSON.stringify(timeouts));\n  this._timeouts = timeouts;\n  this._options = options || {};\n  this._maxRetryTime = options && options.maxRetryTime || Infinity;\n  this._fn = null;\n  this._errors = [];\n  this._attempts = 1;\n  this._operationTimeout = null;\n  this._operationTimeoutCb = null;\n  this._timeout = null;\n  this._operationStart = null;\n\n  if (this._options.forever) {\n    this._cachedTimeouts = this._timeouts.slice(0);\n  }\n}\n\nmodule.exports = RetryOperation;\n\nRetryOperation.prototype.reset = function () {\n  this._attempts = 1;\n  this._timeouts = this._originalTimeouts;\n};\n\nRetryOperation.prototype.stop = function () {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n\n  this._timeouts = [];\n  this._cachedTimeouts = null;\n};\n\nRetryOperation.prototype.retry = function (err) {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n\n  if (!err) {\n    return false;\n  }\n\n  var currentTime = new Date().getTime();\n\n  if (err && currentTime - this._operationStart >= this._maxRetryTime) {\n    this._errors.unshift(new Error('RetryOperation timeout occurred'));\n\n    return false;\n  }\n\n  this._errors.push(err);\n\n  var timeout = this._timeouts.shift();\n\n  if (timeout === undefined) {\n    if (this._cachedTimeouts) {\n      // retry forever, only keep last error\n      this._errors.splice(this._errors.length - 1, this._errors.length);\n\n      this._timeouts = this._cachedTimeouts.slice(0);\n      timeout = this._timeouts.shift();\n    } else {\n      return false;\n    }\n  }\n\n  var self = this;\n  var timer = setTimeout(function () {\n    self._attempts++;\n\n    if (self._operationTimeoutCb) {\n      self._timeout = setTimeout(function () {\n        self._operationTimeoutCb(self._attempts);\n      }, self._operationTimeout);\n\n      if (self._options.unref) {\n        self._timeout.unref();\n      }\n    }\n\n    self._fn(self._attempts);\n  }, timeout);\n\n  if (this._options.unref) {\n    timer.unref();\n  }\n\n  return true;\n};\n\nRetryOperation.prototype.attempt = function (fn, timeoutOps) {\n  this._fn = fn;\n\n  if (timeoutOps) {\n    if (timeoutOps.timeout) {\n      this._operationTimeout = timeoutOps.timeout;\n    }\n\n    if (timeoutOps.cb) {\n      this._operationTimeoutCb = timeoutOps.cb;\n    }\n  }\n\n  var self = this;\n\n  if (this._operationTimeoutCb) {\n    this._timeout = setTimeout(function () {\n      self._operationTimeoutCb();\n    }, self._operationTimeout);\n  }\n\n  this._operationStart = new Date().getTime();\n\n  this._fn(this._attempts);\n};\n\nRetryOperation.prototype.try = function (fn) {\n  console.log('Using RetryOperation.try() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = function (fn) {\n  console.log('Using RetryOperation.start() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = RetryOperation.prototype.try;\n\nRetryOperation.prototype.errors = function () {\n  return this._errors;\n};\n\nRetryOperation.prototype.attempts = function () {\n  return this._attempts;\n};\n\nRetryOperation.prototype.mainError = function () {\n  if (this._errors.length === 0) {\n    return null;\n  }\n\n  var counts = {};\n  var mainError = null;\n  var mainErrorCount = 0;\n\n  for (var i = 0; i < this._errors.length; i++) {\n    var error = this._errors[i];\n    var message = error.message;\n    var count = (counts[message] || 0) + 1;\n    counts[message] = count;\n\n    if (count >= mainErrorCount) {\n      mainError = error;\n      mainErrorCount = count;\n    }\n  }\n\n  return mainError;\n};","map":{"version":3,"names":["RetryOperation","timeouts","options","forever","_originalTimeouts","JSON","parse","stringify","_timeouts","_options","_maxRetryTime","maxRetryTime","Infinity","_fn","_errors","_attempts","_operationTimeout","_operationTimeoutCb","_timeout","_operationStart","_cachedTimeouts","slice","module","exports","prototype","reset","stop","clearTimeout","retry","err","currentTime","Date","getTime","unshift","Error","push","timeout","shift","undefined","splice","length","self","timer","setTimeout","unref","attempt","fn","timeoutOps","cb","try","console","log","start","errors","attempts","mainError","counts","mainErrorCount","i","error","message","count"],"sources":["C:/Users/Kamen/ML/AlgoTrader/node_modules/retry/lib/retry_operation.js"],"sourcesContent":["function RetryOperation(timeouts, options) {\n  // Compatibility for the old (timeouts, retryForever) signature\n  if (typeof options === 'boolean') {\n    options = { forever: options };\n  }\n\n  this._originalTimeouts = JSON.parse(JSON.stringify(timeouts));\n  this._timeouts = timeouts;\n  this._options = options || {};\n  this._maxRetryTime = options && options.maxRetryTime || Infinity;\n  this._fn = null;\n  this._errors = [];\n  this._attempts = 1;\n  this._operationTimeout = null;\n  this._operationTimeoutCb = null;\n  this._timeout = null;\n  this._operationStart = null;\n\n  if (this._options.forever) {\n    this._cachedTimeouts = this._timeouts.slice(0);\n  }\n}\nmodule.exports = RetryOperation;\n\nRetryOperation.prototype.reset = function() {\n  this._attempts = 1;\n  this._timeouts = this._originalTimeouts;\n}\n\nRetryOperation.prototype.stop = function() {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n\n  this._timeouts       = [];\n  this._cachedTimeouts = null;\n};\n\nRetryOperation.prototype.retry = function(err) {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n\n  if (!err) {\n    return false;\n  }\n  var currentTime = new Date().getTime();\n  if (err && currentTime - this._operationStart >= this._maxRetryTime) {\n    this._errors.unshift(new Error('RetryOperation timeout occurred'));\n    return false;\n  }\n\n  this._errors.push(err);\n\n  var timeout = this._timeouts.shift();\n  if (timeout === undefined) {\n    if (this._cachedTimeouts) {\n      // retry forever, only keep last error\n      this._errors.splice(this._errors.length - 1, this._errors.length);\n      this._timeouts = this._cachedTimeouts.slice(0);\n      timeout = this._timeouts.shift();\n    } else {\n      return false;\n    }\n  }\n\n  var self = this;\n  var timer = setTimeout(function() {\n    self._attempts++;\n\n    if (self._operationTimeoutCb) {\n      self._timeout = setTimeout(function() {\n        self._operationTimeoutCb(self._attempts);\n      }, self._operationTimeout);\n\n      if (self._options.unref) {\n          self._timeout.unref();\n      }\n    }\n\n    self._fn(self._attempts);\n  }, timeout);\n\n  if (this._options.unref) {\n      timer.unref();\n  }\n\n  return true;\n};\n\nRetryOperation.prototype.attempt = function(fn, timeoutOps) {\n  this._fn = fn;\n\n  if (timeoutOps) {\n    if (timeoutOps.timeout) {\n      this._operationTimeout = timeoutOps.timeout;\n    }\n    if (timeoutOps.cb) {\n      this._operationTimeoutCb = timeoutOps.cb;\n    }\n  }\n\n  var self = this;\n  if (this._operationTimeoutCb) {\n    this._timeout = setTimeout(function() {\n      self._operationTimeoutCb();\n    }, self._operationTimeout);\n  }\n\n  this._operationStart = new Date().getTime();\n\n  this._fn(this._attempts);\n};\n\nRetryOperation.prototype.try = function(fn) {\n  console.log('Using RetryOperation.try() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = function(fn) {\n  console.log('Using RetryOperation.start() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = RetryOperation.prototype.try;\n\nRetryOperation.prototype.errors = function() {\n  return this._errors;\n};\n\nRetryOperation.prototype.attempts = function() {\n  return this._attempts;\n};\n\nRetryOperation.prototype.mainError = function() {\n  if (this._errors.length === 0) {\n    return null;\n  }\n\n  var counts = {};\n  var mainError = null;\n  var mainErrorCount = 0;\n\n  for (var i = 0; i < this._errors.length; i++) {\n    var error = this._errors[i];\n    var message = error.message;\n    var count = (counts[message] || 0) + 1;\n\n    counts[message] = count;\n\n    if (count >= mainErrorCount) {\n      mainError = error;\n      mainErrorCount = count;\n    }\n  }\n\n  return mainError;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}