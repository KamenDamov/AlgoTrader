{"ast":null,"code":"// Copyright 2012 Timothy J Fontaine <tjfontaine@gmail.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE\n'use strict';\n\nvar net = require('net'),\n    util = require('util'),\n    EventEmitter = require('events').EventEmitter,\n    Packet = require('./packet'),\n    consts = require('native-dns-packet').consts,\n    UDPSocket = require('./utils').UDPSocket,\n    TCPSocket = require('./utils').TCPSocket;\n\nvar debug = function () {//var args = Array.prototype.slice.call(arguments);\n  //console.log.apply(this, ['pending', Date.now().toString()].concat(args));\n};\n\nvar SocketQueue = function (socket, server) {\n  this._active = {};\n  this._active_count = 0;\n  this._pending = [];\n  debug('created', server);\n  this._server = server;\n  this._socket = socket;\n\n  this._socket.on('ready', this._onlisten.bind(this));\n\n  this._socket.on('message', this._onmessage.bind(this));\n\n  this._socket.on('close', this._onclose.bind(this));\n\n  this._socket.bind(server);\n\n  this._refd = true;\n};\n\nutil.inherits(SocketQueue, EventEmitter);\n\nSocketQueue.prototype.send = function (request) {\n  debug('added', request.question);\n\n  this._pending.push(request);\n\n  this._fill();\n};\n\nSocketQueue.prototype.remove = function (request) {\n  var req = this._active[request.id];\n\n  var idx = this._pending.indexOf(request);\n\n  if (req) {\n    delete this._active[request.id];\n    this._active_count -= 1;\n\n    this._fill();\n  }\n\n  if (idx > -1) this._pending.splice(idx, 1);\n\n  this._unref();\n};\n\nSocketQueue.prototype.close = function () {\n  debug('closing', this._server);\n\n  this._socket.close();\n\n  this._socket = undefined;\n  this.emit('close');\n};\n\nSocketQueue.prototype._fill = function () {\n  debug('pre fill, active:', this._active_count, 'pending:', this._pending.length);\n\n  while (this._listening && this._pending.length && this._active_count < 100) {\n    this._dequeue();\n  }\n\n  debug('post fill, active:', this._active_count, 'pending:', this._pending.length);\n};\n\nvar random_integer = function () {\n  return Math.floor(Math.random() * 50000 + 1);\n};\n\nSocketQueue.prototype._dequeue = function () {\n  var req = this._pending.pop();\n\n  var id, packet, dnssocket;\n\n  if (req) {\n    id = random_integer();\n\n    while (this._active[id]) id = random_integer();\n\n    debug('sending', req.question, id);\n    req.id = id;\n    this._active[id] = req;\n    this._active_count += 1;\n\n    try {\n      packet = new Packet(this._socket.remote(req.server));\n      packet.header.id = id;\n      packet.header.rd = 1;\n\n      if (req.try_edns) {\n        packet.edns_version = 0; //TODO when we support dnssec\n        //packet.do = 1\n      }\n\n      packet.question.push(req.question);\n      packet.send();\n\n      this._ref();\n    } catch (e) {\n      req.error(e);\n    }\n  }\n};\n\nSocketQueue.prototype._onmessage = function (msg, remote) {\n  var req;\n  debug('got a message', this._server);\n\n  try {\n    var packet = Packet.parse(msg, remote);\n    req = this._active[packet.header.id];\n    debug('associated message', packet.header.id);\n  } catch (e) {\n    debug('error parsing packet', e);\n  }\n\n  if (req) {\n    delete this._active[packet.header.id];\n    this._active_count -= 1;\n    req.handle(null, packet);\n\n    this._fill();\n  }\n\n  this._unref();\n};\n\nSocketQueue.prototype._unref = function () {\n  var self = this;\n  this._refd = false;\n\n  if (this._active_count <= 0) {\n    if (this._socket.unref) {\n      debug('unrefd socket');\n\n      this._socket.unref();\n    } else if (!this._timer) {\n      this._timer = setTimeout(function () {\n        self.close();\n      }, 300);\n    }\n  }\n};\n\nSocketQueue.prototype._ref = function () {\n  this._refd = true;\n\n  if (this._socket.ref) {\n    debug('refd socket');\n\n    this._socket.ref();\n  } else if (this._timer) {\n    clearTimeout(this._timer);\n    this._timer = null;\n  }\n};\n\nSocketQueue.prototype._onlisten = function () {\n  this._unref();\n\n  this._listening = true;\n\n  this._fill();\n};\n\nSocketQueue.prototype._onclose = function () {\n  var req,\n      err,\n      self = this;\n  debug('socket closed', this);\n  this._listening = false;\n  err = new Error('getHostByName ' + consts.TIMEOUT);\n  err.errno = consts.TIMEOUT;\n\n  while (this._pending.length) {\n    req = this._pending.pop();\n    req.error(err);\n  }\n\n  Object.keys(this._active).forEach(function (key) {\n    var req = self._active[key];\n    req.error(err);\n    delete self._active[key];\n    self._active_count -= 1;\n  });\n};\n\nvar serverHash = function (server) {\n  if (server.type === 'tcp') return server.address + ':' + server.port;else return 'udp' + net.isIP(server.address);\n};\n\nvar _sockets = {};\n\nexports.send = function (request) {\n  var hash = serverHash(request.server);\n  var socket = _sockets[hash];\n\n  if (!socket) {\n    switch (hash) {\n      case 'udp4':\n      case 'udp6':\n        socket = new SocketQueue(new UDPSocket(), hash);\n        break;\n\n      default:\n        socket = new SocketQueue(new TCPSocket(), request.server);\n        break;\n    }\n\n    socket.on('close', function () {\n      delete _sockets[hash];\n    });\n    _sockets[hash] = socket;\n  }\n\n  socket.send(request);\n};\n\nexports.remove = function (request) {\n  var hash = serverHash(request.server);\n  var socket = _sockets[hash];\n\n  if (socket) {\n    socket.remove(request);\n  }\n};","map":{"version":3,"names":["net","require","util","EventEmitter","Packet","consts","UDPSocket","TCPSocket","debug","SocketQueue","socket","server","_active","_active_count","_pending","_server","_socket","on","_onlisten","bind","_onmessage","_onclose","_refd","inherits","prototype","send","request","question","push","_fill","remove","req","id","idx","indexOf","splice","_unref","close","undefined","emit","length","_listening","_dequeue","random_integer","Math","floor","random","pop","packet","dnssocket","remote","header","rd","try_edns","edns_version","_ref","e","error","msg","parse","handle","self","unref","_timer","setTimeout","ref","clearTimeout","err","Error","TIMEOUT","errno","Object","keys","forEach","key","serverHash","type","address","port","isIP","_sockets","exports","hash"],"sources":["C:/Users/Kamen/ML/AlgoTrader/node_modules/native-dns/lib/pending.js"],"sourcesContent":["// Copyright 2012 Timothy J Fontaine <tjfontaine@gmail.com>\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE\r\n\r\n'use strict';\r\n\r\nvar net = require('net'),\r\n    util = require('util'),\r\n    EventEmitter = require('events').EventEmitter,\r\n    Packet = require('./packet'),\r\n    consts = require('native-dns-packet').consts,\r\n    UDPSocket = require('./utils').UDPSocket,\r\n    TCPSocket = require('./utils').TCPSocket;\r\n\r\nvar debug = function() {\r\n  //var args = Array.prototype.slice.call(arguments);\r\n  //console.log.apply(this, ['pending', Date.now().toString()].concat(args));\r\n};\r\n\r\nvar SocketQueue = function(socket, server) {\r\n  this._active = {};\r\n  this._active_count = 0;\r\n  this._pending = [];\r\n\r\n  debug('created', server);\r\n\r\n  this._server = server;\r\n\r\n  this._socket = socket;\r\n  this._socket.on('ready', this._onlisten.bind(this));\r\n  this._socket.on('message', this._onmessage.bind(this));\r\n  this._socket.on('close', this._onclose.bind(this));\r\n  this._socket.bind(server);\r\n\r\n  this._refd = true;\r\n};\r\nutil.inherits(SocketQueue, EventEmitter);\r\n\r\nSocketQueue.prototype.send = function(request) {\r\n  debug('added', request.question);\r\n  this._pending.push(request);\r\n  this._fill();\r\n};\r\n\r\nSocketQueue.prototype.remove = function(request) {\r\n  var req = this._active[request.id];\r\n  var idx = this._pending.indexOf(request);\r\n\r\n  if (req) {\r\n    delete this._active[request.id];\r\n    this._active_count -= 1;\r\n    this._fill();\r\n  }\r\n\r\n  if (idx > -1)\r\n    this._pending.splice(idx, 1);\r\n\r\n  this._unref();\r\n};\r\n\r\nSocketQueue.prototype.close = function() {\r\n  debug('closing', this._server);\r\n  this._socket.close();\r\n  this._socket = undefined;\r\n  this.emit('close');\r\n};\r\n\r\nSocketQueue.prototype._fill = function() {\r\n  debug('pre fill, active:', this._active_count, 'pending:',\r\n        this._pending.length);\r\n\r\n  while (this._listening && this._pending.length &&\r\n         this._active_count < 100) {\r\n    this._dequeue();\r\n  }\r\n\r\n  debug('post fill, active:', this._active_count, 'pending:',\r\n        this._pending.length);\r\n};\r\n\r\nvar random_integer = function() {\r\n  return Math.floor(Math.random() * 50000 + 1);\r\n};\r\n\r\nSocketQueue.prototype._dequeue = function() {\r\n  var req = this._pending.pop();\r\n  var id, packet, dnssocket;\r\n\r\n  if (req) {\r\n    id = random_integer();\r\n\r\n    while (this._active[id])\r\n      id = random_integer();\r\n\r\n    debug('sending', req.question, id);\r\n\r\n    req.id = id;\r\n    this._active[id] = req;\r\n    this._active_count += 1;\r\n\r\n    try {\r\n      packet = new Packet(this._socket.remote(req.server));\r\n      packet.header.id = id;\r\n      packet.header.rd = 1;\r\n\r\n      if (req.try_edns) {\r\n        packet.edns_version = 0;\r\n        //TODO when we support dnssec\r\n        //packet.do = 1\r\n      }\r\n\r\n      packet.question.push(req.question);\r\n      packet.send();\r\n\r\n      this._ref();\r\n    } catch (e) {\r\n      req.error(e);\r\n    }\r\n  }\r\n};\r\n\r\nSocketQueue.prototype._onmessage = function(msg, remote) {\r\n  var req;\r\n\r\n  debug('got a message', this._server);\r\n\r\n  try {\r\n    var packet = Packet.parse(msg, remote);\r\n    req = this._active[packet.header.id];\r\n    debug('associated message', packet.header.id);\r\n  } catch (e) {\r\n    debug('error parsing packet', e);\r\n  }\r\n\r\n  if (req) {\r\n    delete this._active[packet.header.id];\r\n    this._active_count -= 1;\r\n    req.handle(null, packet);\r\n    this._fill();\r\n  }\r\n\r\n  this._unref();\r\n};\r\n\r\nSocketQueue.prototype._unref = function() {\r\n  var self = this;\r\n  this._refd = false;\r\n\r\n  if (this._active_count <= 0) {\r\n    if (this._socket.unref) {\r\n      debug('unrefd socket');\r\n      this._socket.unref();\r\n    } else if (!this._timer) {\r\n      this._timer = setTimeout(function() {\r\n        self.close();\r\n      }, 300);\r\n    }\r\n  }\r\n};\r\n\r\nSocketQueue.prototype._ref = function() {\r\n  this._refd = true;\r\n  if (this._socket.ref) {\r\n    debug('refd socket');\r\n    this._socket.ref();\r\n  } else if (this._timer) {\r\n    clearTimeout(this._timer);\r\n    this._timer = null;\r\n  }\r\n};\r\n\r\nSocketQueue.prototype._onlisten = function() {\r\n  this._unref();\r\n  this._listening = true;\r\n  this._fill();\r\n};\r\n\r\nSocketQueue.prototype._onclose = function() {\r\n  var req, err, self = this;\r\n\r\n  debug('socket closed', this);\r\n\r\n  this._listening = false;\r\n\r\n  err = new Error('getHostByName ' + consts.TIMEOUT);\r\n  err.errno = consts.TIMEOUT;\r\n\r\n  while (this._pending.length) {\r\n    req = this._pending.pop();\r\n    req.error(err);\r\n  }\r\n\r\n  Object.keys(this._active).forEach(function(key) {\r\n    var req = self._active[key];\r\n    req.error(err);\r\n    delete self._active[key];\r\n    self._active_count -= 1;\r\n  });\r\n};\r\n\r\nvar serverHash = function(server) {\r\n  if (server.type === 'tcp')\r\n    return server.address + ':' + server.port;\r\n  else\r\n    return 'udp' + net.isIP(server.address);\r\n};\r\n\r\nvar _sockets = {};\r\n\r\nexports.send = function(request) {\r\n  var hash = serverHash(request.server);\r\n  var socket = _sockets[hash];\r\n\r\n  if (!socket) {\r\n    switch (hash) {\r\n      case 'udp4':\r\n      case 'udp6':\r\n        socket = new SocketQueue(new UDPSocket(), hash);\r\n        break;\r\n      default:\r\n        socket = new SocketQueue(new TCPSocket(), request.server);\r\n        break;\r\n    }\r\n\r\n    socket.on('close', function() {\r\n      delete _sockets[hash];\r\n    });\r\n\r\n    _sockets[hash] = socket;\r\n  }\r\n\r\n  socket.send(request);\r\n};\r\n\r\nexports.remove = function(request) {\r\n  var hash = serverHash(request.server);\r\n  var socket = _sockets[hash];\r\n  if (socket) {\r\n    socket.remove(request);\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}