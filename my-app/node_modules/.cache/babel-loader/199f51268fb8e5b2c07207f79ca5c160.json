{"ast":null,"code":"// given an input that may or may not be an object, return an object that has\n// a copy of every defined property listed in 'copy'. if the input is not an\n// object, assign it to the property named by 'wrap'\nconst getOptions = (input, _ref) => {\n  let {\n    copy,\n    wrap\n  } = _ref;\n  const result = {};\n\n  if (input && typeof input === 'object') {\n    for (const prop of copy) {\n      if (input[prop] !== undefined) {\n        result[prop] = input[prop];\n      }\n    }\n  } else {\n    result[wrap] = input;\n  }\n\n  return result;\n};\n\nmodule.exports = getOptions;","map":{"version":3,"names":["getOptions","input","copy","wrap","result","prop","undefined","module","exports"],"sources":["C:/Users/Kamen/ML/AlgoTrader/node_modules/@npmcli/fs/lib/common/get-options.js"],"sourcesContent":["// given an input that may or may not be an object, return an object that has\n// a copy of every defined property listed in 'copy'. if the input is not an\n// object, assign it to the property named by 'wrap'\nconst getOptions = (input, { copy, wrap }) => {\n  const result = {}\n\n  if (input && typeof input === 'object') {\n    for (const prop of copy) {\n      if (input[prop] !== undefined) {\n        result[prop] = input[prop]\n      }\n    }\n  } else {\n    result[wrap] = input\n  }\n\n  return result\n}\n\nmodule.exports = getOptions\n"],"mappings":"AAAA;AACA;AACA;AACA,MAAMA,UAAU,GAAG,CAACC,KAAD,WAA2B;EAAA,IAAnB;IAAEC,IAAF;IAAQC;EAAR,CAAmB;EAC5C,MAAMC,MAAM,GAAG,EAAf;;EAEA,IAAIH,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA9B,EAAwC;IACtC,KAAK,MAAMI,IAAX,IAAmBH,IAAnB,EAAyB;MACvB,IAAID,KAAK,CAACI,IAAD,CAAL,KAAgBC,SAApB,EAA+B;QAC7BF,MAAM,CAACC,IAAD,CAAN,GAAeJ,KAAK,CAACI,IAAD,CAApB;MACD;IACF;EACF,CAND,MAMO;IACLD,MAAM,CAACD,IAAD,CAAN,GAAeF,KAAf;EACD;;EAED,OAAOG,MAAP;AACD,CAdD;;AAgBAG,MAAM,CAACC,OAAP,GAAiBR,UAAjB"},"metadata":{},"sourceType":"script"}