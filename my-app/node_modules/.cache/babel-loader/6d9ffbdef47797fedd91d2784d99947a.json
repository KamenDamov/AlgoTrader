{"ast":null,"code":"// Copyright 2011 Timothy J Fontaine <tjfontaine@gmail.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE\n'use strict';\n\nvar fs = require('fs'),\n    EventEmitter = require('events').EventEmitter,\n    net = require('net'),\n    os = require('os'),\n    util = require('util'),\n    Cache = require('native-dns-cache'),\n    consts = require('native-dns-packet').consts,\n    path = require('path'),\n    utils = require('./utils');\n\nvar A = consts.NAME_TO_QTYPE.A,\n    AAAA = consts.NAME_TO_QTYPE.AAAA,\n    PTR = consts.NAME_TO_QTYPE.PTR;\n\nvar Platform = function () {\n  this._nsReady = false;\n  this._hostsReady = false;\n  Object.defineProperty(this, 'ready', {\n    get: function () {\n      return this._nsReady && this._hostsReady;\n    }\n  });\n  this._watches = {};\n  Object.defineProperty(this, 'watching', {\n    get: function () {\n      return Object.keys(this._watches).length > 0;\n    },\n    set: function (value) {\n      var k;\n      if (value) this._watchFiles();else {\n        for (k in this._watches) {\n          this._watches[k].close();\n\n          delete this._watches[k];\n        }\n      }\n    }\n  });\n  this.hosts = new Cache();\n\n  this._initNameServers();\n\n  this._initHostsFile();\n\n  this._populate();\n\n  this.cache = false; //new Cache();\n};\n\nutil.inherits(Platform, EventEmitter);\n\nPlatform.prototype.reload = function () {\n  this.emit('unready');\n\n  this._initNameServers();\n\n  this._initHostsFile();\n\n  this._populate();\n};\n\nPlatform.prototype._initNameServers = function () {\n  this._nsReady = false;\n  this.name_servers = [];\n  this.search_path = [];\n  this.timeout = 5 * 1000;\n  this.attempts = 5;\n  this.edns = false;\n};\n\nPlatform.prototype._initHostsFile = function () {\n  this._hostsReady = false;\n  this.hosts.purge();\n};\n\nPlatform.prototype._populate = function () {\n  var hostsfile,\n      self = this;\n\n  switch (os.platform()) {\n    case 'win32':\n      this.name_servers = [{\n        address: '8.8.8.8',\n        port: 53\n      }, {\n        address: '8.8.4.4',\n        port: 53\n      }];\n      self._nsReady = true;\n      hostsfile = path.join(process.env.SystemRoot, '\\\\System32\\\\drivers\\\\etc\\\\hosts');\n      break;\n\n    default:\n      this.parseResolv();\n      hostsfile = '/etc/hosts';\n      break;\n  }\n\n  this._parseHosts(hostsfile);\n};\n\nPlatform.prototype._watchFiles = function () {\n  var self = this,\n      watchParams;\n  watchParams = {\n    persistent: false\n  };\n\n  switch (os.platform()) {\n    case 'win32':\n      //TODO XXX FIXME: it would be nice if this existed\n      break;\n\n    default:\n      this._watches.resolve = fs.watch('/etc/resolv.conf', watchParams, function (event, filename) {\n        if (event === 'change') {\n          self.emit('unready');\n\n          self._initNameServers();\n\n          self.parseResolv();\n        }\n      });\n      this._watches.hosts = fs.watch('/etc/hosts', watchParams, function (event, filename) {\n        if (event === 'change') {\n          self.emit('unready');\n\n          self._initHostsFile();\n\n          self._parseHosts(hostsfile);\n        }\n      });\n      break;\n  }\n};\n\nPlatform.prototype._checkReady = function () {\n  if (this.ready) {\n    this.emit('ready');\n  }\n};\n\nPlatform.prototype.parseResolv = function () {\n  var self = this;\n  fs.readFile('/etc/resolv.conf', 'ascii', function (err, file) {\n    if (err) {\n      throw err;\n    }\n\n    file.split(/\\n/).forEach(function (line) {\n      var i, parts, subparts;\n      line = line.replace(/^\\s+|\\s+$/g, '');\n\n      if (!line.match(/^#/)) {\n        parts = line.split(/\\s+/);\n\n        switch (parts[0]) {\n          case 'nameserver':\n            self.name_servers.push({\n              address: parts[1],\n              port: 53\n            });\n            break;\n\n          case 'domain':\n            self.search_path = [parts[1]];\n            break;\n\n          case 'search':\n            self.search_path = [parts.slice(1)];\n            break;\n\n          case 'options':\n            for (i = 1; i < parts.length; i++) {\n              subparts = parts[i].split(/:/);\n\n              switch (subparts[0]) {\n                case 'timeout':\n                  self.timeout = parseInt(subparts[1], 10) * 1000;\n                  break;\n\n                case 'attempts':\n                  self.attempts = parseInt(subparts[1], 10);\n                  break;\n\n                case 'edns0':\n                  self.edns = true;\n                  break;\n              }\n            }\n\n            break;\n        }\n      }\n    });\n    self._nsReady = true;\n\n    self._checkReady();\n  });\n};\n\nPlatform.prototype._parseHosts = function (hostsfile) {\n  var self = this;\n  fs.readFile(hostsfile, 'ascii', function (err, file) {\n    var toStore = {};\n\n    if (err) {\n      throw err;\n    }\n\n    file.split(/\\n/).forEach(function (line) {\n      var i, parts, ip, revip, kind;\n      line = line.replace(/^\\s+|\\s+$/g, '');\n\n      if (!line.match(/^#/)) {\n        parts = line.split(/\\s+/);\n        ip = parts[0];\n        parts = parts.slice(1);\n        kind = net.isIP(ip);\n\n        if (parts.length && ip && kind) {\n          /* IP -> Domain */\n          revip = utils.reverseIP(ip);\n          parts.forEach(function (domain) {\n            var r = toStore[revip];\n            if (!r) r = toStore[revip] = {};\n            var t = r[PTR];\n            if (!t) t = r[PTR] = [];\n            t.push({\n              type: PTR,\n              class: 1,\n              name: revip,\n              data: domain,\n              ttl: Infinity\n            });\n          });\n          /* Domain -> IP */\n\n          parts.forEach(function (domain) {\n            var r = toStore[domain.toLowerCase()];\n\n            if (!r) {\n              r = toStore[domain.toLowerCase()] = {};\n            }\n\n            var type = kind === 4 ? A : AAAA;\n            var t = r[type];\n            if (!t) t = r[type] = [];\n            t.push({\n              type: type,\n              name: domain.toLowerCase(),\n              address: ip,\n              ttl: Infinity\n            });\n          });\n        }\n      }\n    });\n    Object.keys(toStore).forEach(function (key) {\n      self.hosts._store.set(self.hosts._zone, key, toStore[key]);\n    });\n    self._hostsReady = true;\n\n    self._checkReady();\n  });\n};\n\nmodule.exports = new Platform();","map":{"version":3,"names":["fs","require","EventEmitter","net","os","util","Cache","consts","path","utils","A","NAME_TO_QTYPE","AAAA","PTR","Platform","_nsReady","_hostsReady","Object","defineProperty","get","_watches","keys","length","set","value","k","_watchFiles","close","hosts","_initNameServers","_initHostsFile","_populate","cache","inherits","prototype","reload","emit","name_servers","search_path","timeout","attempts","edns","purge","hostsfile","self","platform","address","port","join","process","env","SystemRoot","parseResolv","_parseHosts","watchParams","persistent","resolve","watch","event","filename","_checkReady","ready","readFile","err","file","split","forEach","line","i","parts","subparts","replace","match","push","slice","parseInt","toStore","ip","revip","kind","isIP","reverseIP","domain","r","t","type","class","name","data","ttl","Infinity","toLowerCase","key","_store","_zone","module","exports"],"sources":["C:/Users/Kamen/ML/AlgoTrader/node_modules/native-dns/lib/platform.js"],"sourcesContent":["// Copyright 2011 Timothy J Fontaine <tjfontaine@gmail.com>\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE\r\n\r\n'use strict';\r\n\r\nvar fs = require('fs'),\r\n    EventEmitter = require('events').EventEmitter,\r\n    net = require('net'),\r\n    os = require('os'),\r\n    util = require('util'),\r\n    Cache = require('native-dns-cache'),\r\n    consts = require('native-dns-packet').consts,\r\n    path = require('path'),\r\n    utils = require('./utils');\r\n\r\nvar A = consts.NAME_TO_QTYPE.A,\r\n    AAAA = consts.NAME_TO_QTYPE.AAAA,\r\n    PTR = consts.NAME_TO_QTYPE.PTR;\r\n\r\nvar Platform = function() {\r\n  this._nsReady = false;\r\n  this._hostsReady = false;\r\n\r\n  Object.defineProperty(this, 'ready', {\r\n    get: function() {\r\n      return this._nsReady && this._hostsReady;\r\n    }\r\n  });\r\n\r\n  this._watches = {};\r\n\r\n  Object.defineProperty(this, 'watching', {\r\n    get: function() {\r\n      return Object.keys(this._watches).length > 0;\r\n    },\r\n    set: function(value) {\r\n      var k;\r\n      if (value)\r\n        this._watchFiles();\r\n      else {\r\n        for (k in this._watches) {\r\n          this._watches[k].close();\r\n          delete this._watches[k];\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  this.hosts = new Cache();\r\n\r\n  this._initNameServers();\r\n  this._initHostsFile();\r\n  this._populate();\r\n\r\n  this.cache = false; //new Cache();\r\n};\r\nutil.inherits(Platform, EventEmitter);\r\n\r\nPlatform.prototype.reload = function() {\r\n  this.emit('unready');\r\n  this._initNameServers();\r\n  this._initHostsFile();\r\n  this._populate();\r\n};\r\n\r\nPlatform.prototype._initNameServers = function() {\r\n  this._nsReady = false;\r\n  this.name_servers = [];\r\n  this.search_path = [];\r\n  this.timeout = 5 * 1000;\r\n  this.attempts = 5;\r\n  this.edns = false;\r\n};\r\n\r\nPlatform.prototype._initHostsFile = function() {\r\n  this._hostsReady = false;\r\n  this.hosts.purge();\r\n};\r\n\r\nPlatform.prototype._populate = function() {\r\n  var hostsfile, self = this;\r\n\r\n  switch (os.platform()) {\r\n    case 'win32':\r\n      this.name_servers = [\r\n        {\r\n          address: '8.8.8.8',\r\n          port: 53\r\n        },\r\n        {\r\n          address: '8.8.4.4',\r\n          port: 53\r\n        }\r\n      ];\r\n      self._nsReady = true;\r\n      hostsfile = path.join(process.env.SystemRoot,\r\n                        '\\\\System32\\\\drivers\\\\etc\\\\hosts');\r\n      break;\r\n    default:\r\n      this.parseResolv();\r\n      hostsfile = '/etc/hosts';\r\n      break;\r\n  }\r\n\r\n  this._parseHosts(hostsfile);\r\n};\r\n\r\nPlatform.prototype._watchFiles = function() {\r\n  var self = this, watchParams;\r\n\r\n  watchParams = {persistent: false};\r\n\r\n  switch (os.platform()) {\r\n    case 'win32':\r\n      //TODO XXX FIXME: it would be nice if this existed\r\n      break;\r\n    default:\r\n      this._watches.resolve = fs.watch('/etc/resolv.conf', watchParams,\r\n          function(event, filename) {\r\n            if (event === 'change') {\r\n              self.emit('unready');\r\n              self._initNameServers();\r\n              self.parseResolv();\r\n            }\r\n          });\r\n      this._watches.hosts = fs.watch('/etc/hosts', watchParams,\r\n          function(event, filename) {\r\n            if (event === 'change') {\r\n              self.emit('unready');\r\n              self._initHostsFile();\r\n              self._parseHosts(hostsfile);\r\n            }\r\n          });\r\n      break;\r\n  }\r\n};\r\n\r\nPlatform.prototype._checkReady = function() {\r\n  if (this.ready) {\r\n    this.emit('ready');\r\n  }\r\n};\r\n\r\nPlatform.prototype.parseResolv = function() {\r\n  var self = this;\r\n\r\n  fs.readFile('/etc/resolv.conf', 'ascii', function(err, file) {\r\n    if (err) {\r\n      throw err;\r\n    }\r\n\r\n    file.split(/\\n/).forEach(function(line) {\r\n      var i, parts, subparts;\r\n      line = line.replace(/^\\s+|\\s+$/g, '');\r\n      if (!line.match(/^#/)) {\r\n        parts = line.split(/\\s+/);\r\n        switch (parts[0]) {\r\n          case 'nameserver':\r\n            self.name_servers.push({\r\n              address: parts[1],\r\n              port: 53\r\n            });\r\n            break;\r\n          case 'domain':\r\n            self.search_path = [parts[1]];\r\n            break;\r\n          case 'search':\r\n            self.search_path = [parts.slice(1)];\r\n            break;\r\n          case 'options':\r\n            for (i = 1; i < parts.length; i++) {\r\n              subparts = parts[i].split(/:/);\r\n              switch (subparts[0]) {\r\n                case 'timeout':\r\n                  self.timeout = parseInt(subparts[1], 10) * 1000;\r\n                  break;\r\n                case 'attempts':\r\n                  self.attempts = parseInt(subparts[1], 10);\r\n                  break;\r\n                case 'edns0':\r\n                  self.edns = true;\r\n                  break;\r\n              }\r\n            }\r\n            break;\r\n        }\r\n      }\r\n    });\r\n\r\n    self._nsReady = true;\r\n    self._checkReady();\r\n  });\r\n};\r\n\r\nPlatform.prototype._parseHosts = function(hostsfile) {\r\n  var self = this;\r\n\r\n  fs.readFile(hostsfile, 'ascii', function(err, file) {\r\n    var toStore = {};\r\n    if (err) {\r\n      throw err;\r\n    }\r\n\r\n    file.split(/\\n/).forEach(function(line) {\r\n      var i, parts, ip, revip, kind;\r\n      line = line.replace(/^\\s+|\\s+$/g, '');\r\n      if (!line.match(/^#/)) {\r\n        parts = line.split(/\\s+/);\r\n        ip = parts[0];\r\n        parts = parts.slice(1);\r\n        kind = net.isIP(ip);\r\n\r\n        if (parts.length && ip && kind) {\r\n          /* IP -> Domain */\r\n          revip = utils.reverseIP(ip);\r\n          parts.forEach(function(domain) {\r\n            var r = toStore[revip];\r\n            if (!r)\r\n              r = toStore[revip] = {};\r\n            var t = r[PTR];\r\n            if (!t)\r\n              t = r[PTR] = [];\r\n            t.push({\r\n              type: PTR,\r\n              class: 1,\r\n              name: revip,\r\n              data: domain,\r\n              ttl: Infinity\r\n            });\r\n          });\r\n\r\n          /* Domain -> IP */\r\n          parts.forEach(function(domain) {\r\n            var r = toStore[domain.toLowerCase()];\r\n            if (!r) {\r\n              r = toStore[domain.toLowerCase()] = {};\r\n            }\r\n            var type = kind === 4 ? A : AAAA;\r\n            var t = r[type];\r\n            if (!t)\r\n              t = r[type] = [];\r\n            t.push({\r\n              type: type,\r\n              name: domain.toLowerCase(),\r\n              address: ip,\r\n              ttl: Infinity\r\n            });\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    Object.keys(toStore).forEach(function (key) {\r\n      self.hosts._store.set(self.hosts._zone, key, toStore[key]);\r\n    });\r\n    self._hostsReady = true;\r\n    self._checkReady();\r\n  });\r\n};\r\n\r\nmodule.exports = new Platform();\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}