{"ast":null,"code":"'use strict';\n\nconst {\n  promisify\n} = require('util');\n\nconst handler = {\n  get: function (target, prop, receiver) {\n    if (typeof target[prop] !== 'function') {\n      return target[prop];\n    }\n\n    if (target[prop][promisify.custom]) {\n      return function () {\n        return Reflect.get(target, prop, receiver)[promisify.custom].apply(target, arguments);\n      };\n    }\n\n    return function () {\n      return new Promise((resolve, reject) => {\n        Reflect.get(target, prop, receiver).apply(target, [...arguments, function (err, result) {\n          if (err) {\n            return reject(err);\n          }\n\n          resolve(result);\n        }]);\n      });\n    };\n  }\n};\n\nmodule.exports = function (thingToPromisify) {\n  if (typeof thingToPromisify === 'function') {\n    return promisify(thingToPromisify);\n  }\n\n  if (typeof thingToPromisify === 'object') {\n    return new Proxy(thingToPromisify, handler);\n  }\n\n  throw new TypeError('Can only promisify functions or objects');\n};","map":{"version":3,"names":["promisify","require","handler","get","target","prop","receiver","custom","Reflect","apply","arguments","Promise","resolve","reject","err","result","module","exports","thingToPromisify","Proxy","TypeError"],"sources":["C:/Users/Kamen/ML/AlgoTrader/node_modules/@gar/promisify/index.js"],"sourcesContent":["'use strict'\n\nconst { promisify } = require('util')\n\nconst handler = {\n  get: function (target, prop, receiver) {\n    if (typeof target[prop] !== 'function') {\n      return target[prop]\n    }\n    if (target[prop][promisify.custom]) {\n      return function () {\n        return Reflect.get(target, prop, receiver)[promisify.custom].apply(target, arguments)\n      }\n    }\n    return function () {\n      return new Promise((resolve, reject) => {\n        Reflect.get(target, prop, receiver).apply(target, [...arguments, function (err, result) {\n          if (err) {\n            return reject(err)\n          }\n          resolve(result)\n        }])\n      })\n    }\n  }\n}\n\nmodule.exports = function (thingToPromisify) {\n  if (typeof thingToPromisify === 'function') {\n    return promisify(thingToPromisify)\n  }\n  if (typeof thingToPromisify === 'object') {\n    return new Proxy(thingToPromisify, handler)\n  }\n  throw new TypeError('Can only promisify functions or objects')\n}\n"],"mappings":"AAAA;;AAEA,MAAM;EAAEA;AAAF,IAAgBC,OAAO,CAAC,MAAD,CAA7B;;AAEA,MAAMC,OAAO,GAAG;EACdC,GAAG,EAAE,UAAUC,MAAV,EAAkBC,IAAlB,EAAwBC,QAAxB,EAAkC;IACrC,IAAI,OAAOF,MAAM,CAACC,IAAD,CAAb,KAAwB,UAA5B,EAAwC;MACtC,OAAOD,MAAM,CAACC,IAAD,CAAb;IACD;;IACD,IAAID,MAAM,CAACC,IAAD,CAAN,CAAaL,SAAS,CAACO,MAAvB,CAAJ,EAAoC;MAClC,OAAO,YAAY;QACjB,OAAOC,OAAO,CAACL,GAAR,CAAYC,MAAZ,EAAoBC,IAApB,EAA0BC,QAA1B,EAAoCN,SAAS,CAACO,MAA9C,EAAsDE,KAAtD,CAA4DL,MAA5D,EAAoEM,SAApE,CAAP;MACD,CAFD;IAGD;;IACD,OAAO,YAAY;MACjB,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;QACtCL,OAAO,CAACL,GAAR,CAAYC,MAAZ,EAAoBC,IAApB,EAA0BC,QAA1B,EAAoCG,KAApC,CAA0CL,MAA1C,EAAkD,CAAC,GAAGM,SAAJ,EAAe,UAAUI,GAAV,EAAeC,MAAf,EAAuB;UACtF,IAAID,GAAJ,EAAS;YACP,OAAOD,MAAM,CAACC,GAAD,CAAb;UACD;;UACDF,OAAO,CAACG,MAAD,CAAP;QACD,CALiD,CAAlD;MAMD,CAPM,CAAP;IAQD,CATD;EAUD;AApBa,CAAhB;;AAuBAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,gBAAV,EAA4B;EAC3C,IAAI,OAAOA,gBAAP,KAA4B,UAAhC,EAA4C;IAC1C,OAAOlB,SAAS,CAACkB,gBAAD,CAAhB;EACD;;EACD,IAAI,OAAOA,gBAAP,KAA4B,QAAhC,EAA0C;IACxC,OAAO,IAAIC,KAAJ,CAAUD,gBAAV,EAA4BhB,OAA5B,CAAP;EACD;;EACD,MAAM,IAAIkB,SAAJ,CAAc,yCAAd,CAAN;AACD,CARD"},"metadata":{},"sourceType":"script"}