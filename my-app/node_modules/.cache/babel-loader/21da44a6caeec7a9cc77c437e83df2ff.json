{"ast":null,"code":"'use strict';\n\nconst path = require('path');\n\nconst nopt = require('nopt');\n\nconst log = require('npmlog');\n\nconst childProcess = require('child_process');\n\nconst EE = require('events').EventEmitter;\n\nconst inherits = require('util').inherits;\n\nconst commands = [// Module build commands\n'build', 'clean', 'configure', 'rebuild', // Development Header File management commands\n'install', 'list', 'remove'];\nconst aliases = {\n  ls: 'list',\n  rm: 'remove'\n}; // differentiate node-gyp's logs from npm's\n\nlog.heading = 'gyp';\n\nfunction gyp() {\n  return new Gyp();\n}\n\nfunction Gyp() {\n  var self = this;\n  this.devDir = '';\n  this.commands = {};\n  commands.forEach(function (command) {\n    self.commands[command] = function (argv, callback) {\n      log.verbose('command', command, argv);\n      return require('./' + command)(self, argv, callback);\n    };\n  });\n}\n\ninherits(Gyp, EE);\nexports.Gyp = Gyp;\nvar proto = Gyp.prototype;\n/**\n * Export the contents of the package.json.\n */\n\nproto.package = require('../package.json');\n/**\n * nopt configuration definitions\n */\n\nproto.configDefs = {\n  help: Boolean,\n  // everywhere\n  arch: String,\n  // 'configure'\n  cafile: String,\n  // 'install'\n  debug: Boolean,\n  // 'build'\n  directory: String,\n  // bin\n  make: String,\n  // 'build'\n  msvs_version: String,\n  // 'configure'\n  ensure: Boolean,\n  // 'install'\n  solution: String,\n  // 'build' (windows only)\n  proxy: String,\n  // 'install'\n  noproxy: String,\n  // 'install'\n  devdir: String,\n  // everywhere\n  nodedir: String,\n  // 'configure'\n  loglevel: String,\n  // everywhere\n  python: String,\n  // 'configure'\n  'dist-url': String,\n  // 'install'\n  tarball: String,\n  // 'install'\n  jobs: String,\n  // 'build'\n  thin: String,\n  // 'configure'\n  'force-process-config': Boolean // 'configure'\n\n};\n/**\n * nopt shorthands\n */\n\nproto.shorthands = {\n  release: '--no-debug',\n  C: '--directory',\n  debug: '--debug',\n  j: '--jobs',\n  silly: '--loglevel=silly',\n  verbose: '--loglevel=verbose',\n  silent: '--loglevel=silent'\n};\n/**\n * expose the command aliases for the bin file to use.\n */\n\nproto.aliases = aliases;\n/**\n * Parses the given argv array and sets the 'opts',\n * 'argv' and 'command' properties.\n */\n\nproto.parseArgv = function parseOpts(argv) {\n  this.opts = nopt(this.configDefs, this.shorthands, argv);\n  this.argv = this.opts.argv.remain.slice();\n  var commands = this.todo = []; // create a copy of the argv array with aliases mapped\n\n  argv = this.argv.map(function (arg) {\n    // is this an alias?\n    if (arg in this.aliases) {\n      arg = this.aliases[arg];\n    }\n\n    return arg;\n  }, this); // process the mapped args into \"command\" objects (\"name\" and \"args\" props)\n\n  argv.slice().forEach(function (arg) {\n    if (arg in this.commands) {\n      var args = argv.splice(0, argv.indexOf(arg));\n      argv.shift();\n\n      if (commands.length > 0) {\n        commands[commands.length - 1].args = args;\n      }\n\n      commands.push({\n        name: arg,\n        args: []\n      });\n    }\n  }, this);\n\n  if (commands.length > 0) {\n    commands[commands.length - 1].args = argv.splice(0);\n  } // support for inheriting config env variables from npm\n\n\n  var npmConfigPrefix = 'npm_config_';\n  Object.keys(process.env).forEach(function (name) {\n    if (name.indexOf(npmConfigPrefix) !== 0) {\n      return;\n    }\n\n    var val = process.env[name];\n\n    if (name === npmConfigPrefix + 'loglevel') {\n      log.level = val;\n    } else {\n      // add the user-defined options to the config\n      name = name.substring(npmConfigPrefix.length); // gyp@741b7f1 enters an infinite loop when it encounters\n      // zero-length options so ensure those don't get through.\n\n      if (name) {\n        this.opts[name] = val;\n      }\n    }\n  }, this);\n\n  if (this.opts.loglevel) {\n    log.level = this.opts.loglevel;\n  }\n\n  log.resume();\n};\n/**\n * Spawns a child process and emits a 'spawn' event.\n */\n\n\nproto.spawn = function spawn(command, args, opts) {\n  if (!opts) {\n    opts = {};\n  }\n\n  if (!opts.silent && !opts.stdio) {\n    opts.stdio = [0, 1, 2];\n  }\n\n  var cp = childProcess.spawn(command, args, opts);\n  log.info('spawn', command);\n  log.info('spawn args', args);\n  return cp;\n};\n/**\n * Returns the usage instructions for node-gyp.\n */\n\n\nproto.usage = function usage() {\n  var str = ['', '  Usage: node-gyp <command> [options]', '', '  where <command> is one of:', commands.map(function (c) {\n    return '    - ' + c + ' - ' + require('./' + c).usage;\n  }).join('\\n'), '', 'node-gyp@' + this.version + '  ' + path.resolve(__dirname, '..'), 'node@' + process.versions.node].join('\\n');\n  return str;\n};\n/**\n * Version number getter.\n */\n\n\nObject.defineProperty(proto, 'version', {\n  get: function () {\n    return this.package.version;\n  },\n  enumerable: true\n});\nmodule.exports = exports = gyp;","map":{"version":3,"names":["path","require","nopt","log","childProcess","EE","EventEmitter","inherits","commands","aliases","ls","rm","heading","gyp","Gyp","self","devDir","forEach","command","argv","callback","verbose","exports","proto","prototype","package","configDefs","help","Boolean","arch","String","cafile","debug","directory","make","msvs_version","ensure","solution","proxy","noproxy","devdir","nodedir","loglevel","python","tarball","jobs","thin","shorthands","release","C","j","silly","silent","parseArgv","parseOpts","opts","remain","slice","todo","map","arg","args","splice","indexOf","shift","length","push","name","npmConfigPrefix","Object","keys","process","env","val","level","substring","resume","spawn","stdio","cp","info","usage","str","c","join","version","resolve","__dirname","versions","node","defineProperty","get","enumerable","module"],"sources":["C:/Users/Kamen/ML/AlgoTrader/node_modules/node-gyp/lib/node-gyp.js"],"sourcesContent":["'use strict'\n\nconst path = require('path')\nconst nopt = require('nopt')\nconst log = require('npmlog')\nconst childProcess = require('child_process')\nconst EE = require('events').EventEmitter\nconst inherits = require('util').inherits\nconst commands = [\n  // Module build commands\n  'build',\n  'clean',\n  'configure',\n  'rebuild',\n  // Development Header File management commands\n  'install',\n  'list',\n  'remove'\n]\nconst aliases = {\n  ls: 'list',\n  rm: 'remove'\n}\n\n// differentiate node-gyp's logs from npm's\nlog.heading = 'gyp'\n\nfunction gyp () {\n  return new Gyp()\n}\n\nfunction Gyp () {\n  var self = this\n\n  this.devDir = ''\n  this.commands = {}\n\n  commands.forEach(function (command) {\n    self.commands[command] = function (argv, callback) {\n      log.verbose('command', command, argv)\n      return require('./' + command)(self, argv, callback)\n    }\n  })\n}\ninherits(Gyp, EE)\nexports.Gyp = Gyp\nvar proto = Gyp.prototype\n\n/**\n * Export the contents of the package.json.\n */\n\nproto.package = require('../package.json')\n\n/**\n * nopt configuration definitions\n */\n\nproto.configDefs = {\n  help: Boolean, // everywhere\n  arch: String, // 'configure'\n  cafile: String, // 'install'\n  debug: Boolean, // 'build'\n  directory: String, // bin\n  make: String, // 'build'\n  msvs_version: String, // 'configure'\n  ensure: Boolean, // 'install'\n  solution: String, // 'build' (windows only)\n  proxy: String, // 'install'\n  noproxy: String, // 'install'\n  devdir: String, // everywhere\n  nodedir: String, // 'configure'\n  loglevel: String, // everywhere\n  python: String, // 'configure'\n  'dist-url': String, // 'install'\n  tarball: String, // 'install'\n  jobs: String, // 'build'\n  thin: String, // 'configure'\n  'force-process-config': Boolean // 'configure'\n}\n\n/**\n * nopt shorthands\n */\n\nproto.shorthands = {\n  release: '--no-debug',\n  C: '--directory',\n  debug: '--debug',\n  j: '--jobs',\n  silly: '--loglevel=silly',\n  verbose: '--loglevel=verbose',\n  silent: '--loglevel=silent'\n}\n\n/**\n * expose the command aliases for the bin file to use.\n */\n\nproto.aliases = aliases\n\n/**\n * Parses the given argv array and sets the 'opts',\n * 'argv' and 'command' properties.\n */\n\nproto.parseArgv = function parseOpts (argv) {\n  this.opts = nopt(this.configDefs, this.shorthands, argv)\n  this.argv = this.opts.argv.remain.slice()\n\n  var commands = this.todo = []\n\n  // create a copy of the argv array with aliases mapped\n  argv = this.argv.map(function (arg) {\n    // is this an alias?\n    if (arg in this.aliases) {\n      arg = this.aliases[arg]\n    }\n    return arg\n  }, this)\n\n  // process the mapped args into \"command\" objects (\"name\" and \"args\" props)\n  argv.slice().forEach(function (arg) {\n    if (arg in this.commands) {\n      var args = argv.splice(0, argv.indexOf(arg))\n      argv.shift()\n      if (commands.length > 0) {\n        commands[commands.length - 1].args = args\n      }\n      commands.push({ name: arg, args: [] })\n    }\n  }, this)\n  if (commands.length > 0) {\n    commands[commands.length - 1].args = argv.splice(0)\n  }\n\n  // support for inheriting config env variables from npm\n  var npmConfigPrefix = 'npm_config_'\n  Object.keys(process.env).forEach(function (name) {\n    if (name.indexOf(npmConfigPrefix) !== 0) {\n      return\n    }\n    var val = process.env[name]\n    if (name === npmConfigPrefix + 'loglevel') {\n      log.level = val\n    } else {\n      // add the user-defined options to the config\n      name = name.substring(npmConfigPrefix.length)\n      // gyp@741b7f1 enters an infinite loop when it encounters\n      // zero-length options so ensure those don't get through.\n      if (name) {\n        this.opts[name] = val\n      }\n    }\n  }, this)\n\n  if (this.opts.loglevel) {\n    log.level = this.opts.loglevel\n  }\n  log.resume()\n}\n\n/**\n * Spawns a child process and emits a 'spawn' event.\n */\n\nproto.spawn = function spawn (command, args, opts) {\n  if (!opts) {\n    opts = {}\n  }\n  if (!opts.silent && !opts.stdio) {\n    opts.stdio = [0, 1, 2]\n  }\n  var cp = childProcess.spawn(command, args, opts)\n  log.info('spawn', command)\n  log.info('spawn args', args)\n  return cp\n}\n\n/**\n * Returns the usage instructions for node-gyp.\n */\n\nproto.usage = function usage () {\n  var str = [\n    '',\n    '  Usage: node-gyp <command> [options]',\n    '',\n    '  where <command> is one of:',\n    commands.map(function (c) {\n      return '    - ' + c + ' - ' + require('./' + c).usage\n    }).join('\\n'),\n    '',\n    'node-gyp@' + this.version + '  ' + path.resolve(__dirname, '..'),\n    'node@' + process.versions.node\n  ].join('\\n')\n  return str\n}\n\n/**\n * Version number getter.\n */\n\nObject.defineProperty(proto, 'version', {\n  get: function () {\n    return this.package.version\n  },\n  enumerable: true\n})\n\nmodule.exports = exports = gyp\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}