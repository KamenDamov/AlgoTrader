{"ast":null,"code":"'use strict';\n\nconst Url = require('url');\n\nconst Minipass = require('minipass');\n\nconst Headers = require('./headers.js');\n\nconst {\n  exportNodeCompatibleHeaders\n} = Headers;\n\nconst Body = require('./body.js');\n\nconst {\n  clone,\n  extractContentType,\n  getTotalBytes\n} = Body;\n\nconst version = require('../package.json').version;\n\nconst defaultUserAgent = `minipass-fetch/${version} (+https://github.com/isaacs/minipass-fetch)`;\nconst INTERNALS = Symbol('Request internals');\nconst {\n  parse: parseUrl,\n  format: formatUrl\n} = Url;\n\nconst isRequest = input => typeof input === 'object' && typeof input[INTERNALS] === 'object';\n\nconst isAbortSignal = signal => {\n  const proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n  return !!(proto && proto.constructor.name === 'AbortSignal');\n};\n\nclass Request extends Body {\n  constructor(input) {\n    let init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const parsedURL = isRequest(input) ? Url.parse(input.url) : input && input.href ? Url.parse(input.href) : Url.parse(`${input}`);\n    if (isRequest(input)) init = { ...input[INTERNALS],\n      ...init\n    };else if (!input || typeof input === 'string') input = {};\n    const method = (init.method || input.method || 'GET').toUpperCase();\n    const isGETHEAD = method === 'GET' || method === 'HEAD';\n    if ((init.body !== null && init.body !== undefined || isRequest(input) && input.body !== null) && isGETHEAD) throw new TypeError('Request with GET/HEAD method cannot have body');\n    const inputBody = init.body !== null && init.body !== undefined ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n    super(inputBody, {\n      timeout: init.timeout || input.timeout || 0,\n      size: init.size || input.size || 0\n    });\n    const headers = new Headers(init.headers || input.headers || {});\n\n    if (inputBody !== null && inputBody !== undefined && !headers.has('Content-Type')) {\n      const contentType = extractContentType(inputBody);\n      if (contentType) headers.append('Content-Type', contentType);\n    }\n\n    const signal = 'signal' in init ? init.signal : null;\n    if (signal !== null && signal !== undefined && !isAbortSignal(signal)) throw new TypeError('Expected signal must be an instanceof AbortSignal'); // TLS specific options that are handled by node\n\n    const {\n      ca,\n      cert,\n      ciphers,\n      clientCertEngine,\n      crl,\n      dhparam,\n      ecdhCurve,\n      family,\n      honorCipherOrder,\n      key,\n      passphrase,\n      pfx,\n      rejectUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED !== '0',\n      secureOptions,\n      secureProtocol,\n      servername,\n      sessionIdContext\n    } = init;\n    this[INTERNALS] = {\n      method,\n      redirect: init.redirect || input.redirect || 'follow',\n      headers,\n      parsedURL,\n      signal,\n      ca,\n      cert,\n      ciphers,\n      clientCertEngine,\n      crl,\n      dhparam,\n      ecdhCurve,\n      family,\n      honorCipherOrder,\n      key,\n      passphrase,\n      pfx,\n      rejectUnauthorized,\n      secureOptions,\n      secureProtocol,\n      servername,\n      sessionIdContext\n    }; // node-fetch-only options\n\n    this.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n    this.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n    this.counter = init.counter || input.counter || 0;\n    this.agent = init.agent || input.agent;\n  }\n\n  get method() {\n    return this[INTERNALS].method;\n  }\n\n  get url() {\n    return formatUrl(this[INTERNALS].parsedURL);\n  }\n\n  get headers() {\n    return this[INTERNALS].headers;\n  }\n\n  get redirect() {\n    return this[INTERNALS].redirect;\n  }\n\n  get signal() {\n    return this[INTERNALS].signal;\n  }\n\n  clone() {\n    return new Request(this);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Request';\n  }\n\n  static getNodeRequestOptions(request) {\n    const parsedURL = request[INTERNALS].parsedURL;\n    const headers = new Headers(request[INTERNALS].headers); // fetch step 1.3\n\n    if (!headers.has('Accept')) headers.set('Accept', '*/*'); // Basic fetch\n\n    if (!parsedURL.protocol || !parsedURL.hostname) throw new TypeError('Only absolute URLs are supported');\n    if (!/^https?:$/.test(parsedURL.protocol)) throw new TypeError('Only HTTP(S) protocols are supported');\n\n    if (request.signal && Minipass.isStream(request.body) && typeof request.body.destroy !== 'function') {\n      throw new Error('Cancellation of streamed requests with AbortSignal is not supported');\n    } // HTTP-network-or-cache fetch steps 2.4-2.7\n\n\n    const contentLengthValue = (request.body === null || request.body === undefined) && /^(POST|PUT)$/i.test(request.method) ? '0' : request.body !== null && request.body !== undefined ? getTotalBytes(request) : null;\n    if (contentLengthValue) headers.set('Content-Length', contentLengthValue + ''); // HTTP-network-or-cache fetch step 2.11\n\n    if (!headers.has('User-Agent')) headers.set('User-Agent', defaultUserAgent); // HTTP-network-or-cache fetch step 2.15\n\n    if (request.compress && !headers.has('Accept-Encoding')) headers.set('Accept-Encoding', 'gzip,deflate');\n    const agent = typeof request.agent === 'function' ? request.agent(parsedURL) : request.agent;\n    if (!headers.has('Connection') && !agent) headers.set('Connection', 'close'); // TLS specific options that are handled by node\n\n    const {\n      ca,\n      cert,\n      ciphers,\n      clientCertEngine,\n      crl,\n      dhparam,\n      ecdhCurve,\n      family,\n      honorCipherOrder,\n      key,\n      passphrase,\n      pfx,\n      rejectUnauthorized,\n      secureOptions,\n      secureProtocol,\n      servername,\n      sessionIdContext\n    } = request[INTERNALS]; // HTTP-network fetch step 4.2\n    // chunked encoding is handled by Node.js\n\n    return { ...parsedURL,\n      method: request.method,\n      headers: exportNodeCompatibleHeaders(headers),\n      agent,\n      ca,\n      cert,\n      ciphers,\n      clientCertEngine,\n      crl,\n      dhparam,\n      ecdhCurve,\n      family,\n      honorCipherOrder,\n      key,\n      passphrase,\n      pfx,\n      rejectUnauthorized,\n      secureOptions,\n      secureProtocol,\n      servername,\n      sessionIdContext\n    };\n  }\n\n}\n\nmodule.exports = Request;\nObject.defineProperties(Request.prototype, {\n  method: {\n    enumerable: true\n  },\n  url: {\n    enumerable: true\n  },\n  headers: {\n    enumerable: true\n  },\n  redirect: {\n    enumerable: true\n  },\n  clone: {\n    enumerable: true\n  },\n  signal: {\n    enumerable: true\n  }\n});","map":{"version":3,"names":["Url","require","Minipass","Headers","exportNodeCompatibleHeaders","Body","clone","extractContentType","getTotalBytes","version","defaultUserAgent","INTERNALS","Symbol","parse","parseUrl","format","formatUrl","isRequest","input","isAbortSignal","signal","proto","Object","getPrototypeOf","constructor","name","Request","init","parsedURL","url","href","method","toUpperCase","isGETHEAD","body","undefined","TypeError","inputBody","timeout","size","headers","has","contentType","append","ca","cert","ciphers","clientCertEngine","crl","dhparam","ecdhCurve","family","honorCipherOrder","key","passphrase","pfx","rejectUnauthorized","process","env","NODE_TLS_REJECT_UNAUTHORIZED","secureOptions","secureProtocol","servername","sessionIdContext","redirect","follow","compress","counter","agent","toStringTag","getNodeRequestOptions","request","set","protocol","hostname","test","isStream","destroy","Error","contentLengthValue","module","exports","defineProperties","prototype","enumerable"],"sources":["C:/Users/Kamen/ML/AlgoTrader/node_modules/minipass-fetch/lib/request.js"],"sourcesContent":["'use strict'\nconst Url = require('url')\nconst Minipass = require('minipass')\nconst Headers = require('./headers.js')\nconst { exportNodeCompatibleHeaders } = Headers\nconst Body = require('./body.js')\nconst { clone, extractContentType, getTotalBytes } = Body\n\nconst version = require('../package.json').version\nconst defaultUserAgent =\n  `minipass-fetch/${version} (+https://github.com/isaacs/minipass-fetch)`\n\nconst INTERNALS = Symbol('Request internals')\n\nconst { parse: parseUrl, format: formatUrl } = Url\n\nconst isRequest = input =>\n  typeof input === 'object' && typeof input[INTERNALS] === 'object'\n\nconst isAbortSignal = signal => {\n  const proto = (\n    signal\n    && typeof signal === 'object'\n    && Object.getPrototypeOf(signal)\n  )\n  return !!(proto && proto.constructor.name === 'AbortSignal')\n}\n\nclass Request extends Body {\n  constructor (input, init = {}) {\n    const parsedURL = isRequest(input) ? Url.parse(input.url)\n      : input && input.href ? Url.parse(input.href)\n      : Url.parse(`${input}`)\n\n    if (isRequest(input))\n      init = { ...input[INTERNALS], ...init }\n    else if (!input || typeof input === 'string')\n      input = {}\n\n    const method = (init.method || input.method || 'GET').toUpperCase()\n    const isGETHEAD = method === 'GET' || method === 'HEAD'\n\n    if ((init.body !== null && init.body !== undefined ||\n        isRequest(input) && input.body !== null) && isGETHEAD)\n      throw new TypeError('Request with GET/HEAD method cannot have body')\n\n    const inputBody = init.body !== null && init.body !== undefined ? init.body\n      : isRequest(input) && input.body !== null ? clone(input)\n      : null\n\n    super(inputBody, {\n      timeout: init.timeout || input.timeout || 0,\n      size: init.size || input.size || 0,\n    })\n\n    const headers = new Headers(init.headers || input.headers || {})\n\n    if (inputBody !== null && inputBody !== undefined &&\n        !headers.has('Content-Type')) {\n      const contentType = extractContentType(inputBody)\n      if (contentType)\n        headers.append('Content-Type', contentType)\n    }\n\n    const signal = 'signal' in init ? init.signal\n      : null\n\n    if (signal !== null && signal !== undefined && !isAbortSignal(signal))\n      throw new TypeError('Expected signal must be an instanceof AbortSignal')\n\n    // TLS specific options that are handled by node\n    const {\n      ca,\n      cert,\n      ciphers,\n      clientCertEngine,\n      crl,\n      dhparam,\n      ecdhCurve,\n      family,\n      honorCipherOrder,\n      key,\n      passphrase,\n      pfx,\n      rejectUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED !== '0',\n      secureOptions,\n      secureProtocol,\n      servername,\n      sessionIdContext,\n    } = init\n\n    this[INTERNALS] = {\n      method,\n      redirect: init.redirect || input.redirect || 'follow',\n      headers,\n      parsedURL,\n      signal,\n      ca,\n      cert,\n      ciphers,\n      clientCertEngine,\n      crl,\n      dhparam,\n      ecdhCurve,\n      family,\n      honorCipherOrder,\n      key,\n      passphrase,\n      pfx,\n      rejectUnauthorized,\n      secureOptions,\n      secureProtocol,\n      servername,\n      sessionIdContext,\n    }\n\n    // node-fetch-only options\n    this.follow = init.follow !== undefined ? init.follow\n      : input.follow !== undefined ? input.follow\n      : 20\n    this.compress = init.compress !== undefined ? init.compress\n      : input.compress !== undefined ? input.compress\n      : true\n    this.counter = init.counter || input.counter || 0\n    this.agent = init.agent || input.agent\n  }\n\n  get method() {\n    return this[INTERNALS].method\n  }\n\n  get url() {\n    return formatUrl(this[INTERNALS].parsedURL)\n  }\n\n  get headers() {\n    return this[INTERNALS].headers\n  }\n\n  get redirect() {\n    return this[INTERNALS].redirect\n  }\n\n  get signal() {\n    return this[INTERNALS].signal\n  }\n\n  clone () {\n    return new Request(this)\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Request'\n  }\n\n  static getNodeRequestOptions (request) {\n    const parsedURL = request[INTERNALS].parsedURL\n    const headers = new Headers(request[INTERNALS].headers)\n\n    // fetch step 1.3\n    if (!headers.has('Accept'))\n      headers.set('Accept', '*/*')\n\n    // Basic fetch\n    if (!parsedURL.protocol || !parsedURL.hostname)\n      throw new TypeError('Only absolute URLs are supported')\n\n    if (!/^https?:$/.test(parsedURL.protocol))\n      throw new TypeError('Only HTTP(S) protocols are supported')\n\n    if (request.signal &&\n        Minipass.isStream(request.body) &&\n        typeof request.body.destroy !== 'function') {\n      throw new Error(\n        'Cancellation of streamed requests with AbortSignal is not supported')\n    }\n\n    // HTTP-network-or-cache fetch steps 2.4-2.7\n    const contentLengthValue =\n      (request.body === null || request.body === undefined) &&\n        /^(POST|PUT)$/i.test(request.method) ? '0'\n      : request.body !== null && request.body !== undefined\n        ? getTotalBytes(request)\n      : null\n\n    if (contentLengthValue)\n      headers.set('Content-Length', contentLengthValue + '')\n\n    // HTTP-network-or-cache fetch step 2.11\n    if (!headers.has('User-Agent'))\n      headers.set('User-Agent', defaultUserAgent)\n\n    // HTTP-network-or-cache fetch step 2.15\n    if (request.compress && !headers.has('Accept-Encoding'))\n      headers.set('Accept-Encoding', 'gzip,deflate')\n\n    const agent = typeof request.agent === 'function'\n      ? request.agent(parsedURL)\n      : request.agent\n\n    if (!headers.has('Connection') && !agent)\n      headers.set('Connection', 'close')\n\n    // TLS specific options that are handled by node\n    const {\n      ca,\n      cert,\n      ciphers,\n      clientCertEngine,\n      crl,\n      dhparam,\n      ecdhCurve,\n      family,\n      honorCipherOrder,\n      key,\n      passphrase,\n      pfx,\n      rejectUnauthorized,\n      secureOptions,\n      secureProtocol,\n      servername,\n      sessionIdContext,\n    } = request[INTERNALS]\n\n    // HTTP-network fetch step 4.2\n    // chunked encoding is handled by Node.js\n\n    return {\n      ...parsedURL,\n      method: request.method,\n      headers: exportNodeCompatibleHeaders(headers),\n      agent,\n      ca,\n      cert,\n      ciphers,\n      clientCertEngine,\n      crl,\n      dhparam,\n      ecdhCurve,\n      family,\n      honorCipherOrder,\n      key,\n      passphrase,\n      pfx,\n      rejectUnauthorized,\n      secureOptions,\n      secureProtocol,\n      servername,\n      sessionIdContext,\n    }\n  }\n}\n\nmodule.exports = Request\n\nObject.defineProperties(Request.prototype, {\n  method: { enumerable: true },\n  url: { enumerable: true },\n  headers: { enumerable: true },\n  redirect: { enumerable: true },\n  clone: { enumerable: true },\n  signal: { enumerable: true },\n})\n"],"mappings":"AAAA;;AACA,MAAMA,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAnB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAME,OAAO,GAAGF,OAAO,CAAC,cAAD,CAAvB;;AACA,MAAM;EAAEG;AAAF,IAAkCD,OAAxC;;AACA,MAAME,IAAI,GAAGJ,OAAO,CAAC,WAAD,CAApB;;AACA,MAAM;EAAEK,KAAF;EAASC,kBAAT;EAA6BC;AAA7B,IAA+CH,IAArD;;AAEA,MAAMI,OAAO,GAAGR,OAAO,CAAC,iBAAD,CAAP,CAA2BQ,OAA3C;;AACA,MAAMC,gBAAgB,GACnB,kBAAiBD,OAAQ,8CAD5B;AAGA,MAAME,SAAS,GAAGC,MAAM,CAAC,mBAAD,CAAxB;AAEA,MAAM;EAAEC,KAAK,EAAEC,QAAT;EAAmBC,MAAM,EAAEC;AAA3B,IAAyChB,GAA/C;;AAEA,MAAMiB,SAAS,GAAGC,KAAK,IACrB,OAAOA,KAAP,KAAiB,QAAjB,IAA6B,OAAOA,KAAK,CAACP,SAAD,CAAZ,KAA4B,QAD3D;;AAGA,MAAMQ,aAAa,GAAGC,MAAM,IAAI;EAC9B,MAAMC,KAAK,GACTD,MAAM,IACH,OAAOA,MAAP,KAAkB,QADrB,IAEGE,MAAM,CAACC,cAAP,CAAsBH,MAAtB,CAHL;EAKA,OAAO,CAAC,EAAEC,KAAK,IAAIA,KAAK,CAACG,WAAN,CAAkBC,IAAlB,KAA2B,aAAtC,CAAR;AACD,CAPD;;AASA,MAAMC,OAAN,SAAsBrB,IAAtB,CAA2B;EACzBmB,WAAW,CAAEN,KAAF,EAAoB;IAAA,IAAXS,IAAW,uEAAJ,EAAI;IAC7B,MAAMC,SAAS,GAAGX,SAAS,CAACC,KAAD,CAAT,GAAmBlB,GAAG,CAACa,KAAJ,CAAUK,KAAK,CAACW,GAAhB,CAAnB,GACdX,KAAK,IAAIA,KAAK,CAACY,IAAf,GAAsB9B,GAAG,CAACa,KAAJ,CAAUK,KAAK,CAACY,IAAhB,CAAtB,GACA9B,GAAG,CAACa,KAAJ,CAAW,GAAEK,KAAM,EAAnB,CAFJ;IAIA,IAAID,SAAS,CAACC,KAAD,CAAb,EACES,IAAI,GAAG,EAAE,GAAGT,KAAK,CAACP,SAAD,CAAV;MAAuB,GAAGgB;IAA1B,CAAP,CADF,KAEK,IAAI,CAACT,KAAD,IAAU,OAAOA,KAAP,KAAiB,QAA/B,EACHA,KAAK,GAAG,EAAR;IAEF,MAAMa,MAAM,GAAG,CAACJ,IAAI,CAACI,MAAL,IAAeb,KAAK,CAACa,MAArB,IAA+B,KAAhC,EAAuCC,WAAvC,EAAf;IACA,MAAMC,SAAS,GAAGF,MAAM,KAAK,KAAX,IAAoBA,MAAM,KAAK,MAAjD;IAEA,IAAI,CAACJ,IAAI,CAACO,IAAL,KAAc,IAAd,IAAsBP,IAAI,CAACO,IAAL,KAAcC,SAApC,IACDlB,SAAS,CAACC,KAAD,CAAT,IAAoBA,KAAK,CAACgB,IAAN,KAAe,IADnC,KAC4CD,SADhD,EAEE,MAAM,IAAIG,SAAJ,CAAc,+CAAd,CAAN;IAEF,MAAMC,SAAS,GAAGV,IAAI,CAACO,IAAL,KAAc,IAAd,IAAsBP,IAAI,CAACO,IAAL,KAAcC,SAApC,GAAgDR,IAAI,CAACO,IAArD,GACdjB,SAAS,CAACC,KAAD,CAAT,IAAoBA,KAAK,CAACgB,IAAN,KAAe,IAAnC,GAA0C5B,KAAK,CAACY,KAAD,CAA/C,GACA,IAFJ;IAIA,MAAMmB,SAAN,EAAiB;MACfC,OAAO,EAAEX,IAAI,CAACW,OAAL,IAAgBpB,KAAK,CAACoB,OAAtB,IAAiC,CAD3B;MAEfC,IAAI,EAAEZ,IAAI,CAACY,IAAL,IAAarB,KAAK,CAACqB,IAAnB,IAA2B;IAFlB,CAAjB;IAKA,MAAMC,OAAO,GAAG,IAAIrC,OAAJ,CAAYwB,IAAI,CAACa,OAAL,IAAgBtB,KAAK,CAACsB,OAAtB,IAAiC,EAA7C,CAAhB;;IAEA,IAAIH,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAKF,SAApC,IACA,CAACK,OAAO,CAACC,GAAR,CAAY,cAAZ,CADL,EACkC;MAChC,MAAMC,WAAW,GAAGnC,kBAAkB,CAAC8B,SAAD,CAAtC;MACA,IAAIK,WAAJ,EACEF,OAAO,CAACG,MAAR,CAAe,cAAf,EAA+BD,WAA/B;IACH;;IAED,MAAMtB,MAAM,GAAG,YAAYO,IAAZ,GAAmBA,IAAI,CAACP,MAAxB,GACX,IADJ;IAGA,IAAIA,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAKe,SAA9B,IAA2C,CAAChB,aAAa,CAACC,MAAD,CAA7D,EACE,MAAM,IAAIgB,SAAJ,CAAc,mDAAd,CAAN,CAvC2B,CAyC7B;;IACA,MAAM;MACJQ,EADI;MAEJC,IAFI;MAGJC,OAHI;MAIJC,gBAJI;MAKJC,GALI;MAMJC,OANI;MAOJC,SAPI;MAQJC,MARI;MASJC,gBATI;MAUJC,GAVI;MAWJC,UAXI;MAYJC,GAZI;MAaJC,kBAAkB,GAAGC,OAAO,CAACC,GAAR,CAAYC,4BAAZ,KAA6C,GAb9D;MAcJC,aAdI;MAeJC,cAfI;MAgBJC,UAhBI;MAiBJC;IAjBI,IAkBFpC,IAlBJ;IAoBA,KAAKhB,SAAL,IAAkB;MAChBoB,MADgB;MAEhBiC,QAAQ,EAAErC,IAAI,CAACqC,QAAL,IAAiB9C,KAAK,CAAC8C,QAAvB,IAAmC,QAF7B;MAGhBxB,OAHgB;MAIhBZ,SAJgB;MAKhBR,MALgB;MAMhBwB,EANgB;MAOhBC,IAPgB;MAQhBC,OARgB;MAShBC,gBATgB;MAUhBC,GAVgB;MAWhBC,OAXgB;MAYhBC,SAZgB;MAahBC,MAbgB;MAchBC,gBAdgB;MAehBC,GAfgB;MAgBhBC,UAhBgB;MAiBhBC,GAjBgB;MAkBhBC,kBAlBgB;MAmBhBI,aAnBgB;MAoBhBC,cApBgB;MAqBhBC,UArBgB;MAsBhBC;IAtBgB,CAAlB,CA9D6B,CAuF7B;;IACA,KAAKE,MAAL,GAActC,IAAI,CAACsC,MAAL,KAAgB9B,SAAhB,GAA4BR,IAAI,CAACsC,MAAjC,GACV/C,KAAK,CAAC+C,MAAN,KAAiB9B,SAAjB,GAA6BjB,KAAK,CAAC+C,MAAnC,GACA,EAFJ;IAGA,KAAKC,QAAL,GAAgBvC,IAAI,CAACuC,QAAL,KAAkB/B,SAAlB,GAA8BR,IAAI,CAACuC,QAAnC,GACZhD,KAAK,CAACgD,QAAN,KAAmB/B,SAAnB,GAA+BjB,KAAK,CAACgD,QAArC,GACA,IAFJ;IAGA,KAAKC,OAAL,GAAexC,IAAI,CAACwC,OAAL,IAAgBjD,KAAK,CAACiD,OAAtB,IAAiC,CAAhD;IACA,KAAKC,KAAL,GAAazC,IAAI,CAACyC,KAAL,IAAclD,KAAK,CAACkD,KAAjC;EACD;;EAES,IAANrC,MAAM,GAAG;IACX,OAAO,KAAKpB,SAAL,EAAgBoB,MAAvB;EACD;;EAEM,IAAHF,GAAG,GAAG;IACR,OAAOb,SAAS,CAAC,KAAKL,SAAL,EAAgBiB,SAAjB,CAAhB;EACD;;EAEU,IAAPY,OAAO,GAAG;IACZ,OAAO,KAAK7B,SAAL,EAAgB6B,OAAvB;EACD;;EAEW,IAARwB,QAAQ,GAAG;IACb,OAAO,KAAKrD,SAAL,EAAgBqD,QAAvB;EACD;;EAES,IAAN5C,MAAM,GAAG;IACX,OAAO,KAAKT,SAAL,EAAgBS,MAAvB;EACD;;EAEDd,KAAK,GAAI;IACP,OAAO,IAAIoB,OAAJ,CAAY,IAAZ,CAAP;EACD;;EAEsB,KAAlBd,MAAM,CAACyD,WAAW,IAAK;IAC1B,OAAO,SAAP;EACD;;EAE2B,OAArBC,qBAAqB,CAAEC,OAAF,EAAW;IACrC,MAAM3C,SAAS,GAAG2C,OAAO,CAAC5D,SAAD,CAAP,CAAmBiB,SAArC;IACA,MAAMY,OAAO,GAAG,IAAIrC,OAAJ,CAAYoE,OAAO,CAAC5D,SAAD,CAAP,CAAmB6B,OAA/B,CAAhB,CAFqC,CAIrC;;IACA,IAAI,CAACA,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAL,EACED,OAAO,CAACgC,GAAR,CAAY,QAAZ,EAAsB,KAAtB,EANmC,CAQrC;;IACA,IAAI,CAAC5C,SAAS,CAAC6C,QAAX,IAAuB,CAAC7C,SAAS,CAAC8C,QAAtC,EACE,MAAM,IAAItC,SAAJ,CAAc,kCAAd,CAAN;IAEF,IAAI,CAAC,YAAYuC,IAAZ,CAAiB/C,SAAS,CAAC6C,QAA3B,CAAL,EACE,MAAM,IAAIrC,SAAJ,CAAc,sCAAd,CAAN;;IAEF,IAAImC,OAAO,CAACnD,MAAR,IACAlB,QAAQ,CAAC0E,QAAT,CAAkBL,OAAO,CAACrC,IAA1B,CADA,IAEA,OAAOqC,OAAO,CAACrC,IAAR,CAAa2C,OAApB,KAAgC,UAFpC,EAEgD;MAC9C,MAAM,IAAIC,KAAJ,CACJ,qEADI,CAAN;IAED,CApBoC,CAsBrC;;;IACA,MAAMC,kBAAkB,GACtB,CAACR,OAAO,CAACrC,IAAR,KAAiB,IAAjB,IAAyBqC,OAAO,CAACrC,IAAR,KAAiBC,SAA3C,KACE,gBAAgBwC,IAAhB,CAAqBJ,OAAO,CAACxC,MAA7B,CADF,GACyC,GADzC,GAEEwC,OAAO,CAACrC,IAAR,KAAiB,IAAjB,IAAyBqC,OAAO,CAACrC,IAAR,KAAiBC,SAA1C,GACE3B,aAAa,CAAC+D,OAAD,CADf,GAEA,IALJ;IAOA,IAAIQ,kBAAJ,EACEvC,OAAO,CAACgC,GAAR,CAAY,gBAAZ,EAA8BO,kBAAkB,GAAG,EAAnD,EA/BmC,CAiCrC;;IACA,IAAI,CAACvC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAL,EACED,OAAO,CAACgC,GAAR,CAAY,YAAZ,EAA0B9D,gBAA1B,EAnCmC,CAqCrC;;IACA,IAAI6D,OAAO,CAACL,QAAR,IAAoB,CAAC1B,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAAzB,EACED,OAAO,CAACgC,GAAR,CAAY,iBAAZ,EAA+B,cAA/B;IAEF,MAAMJ,KAAK,GAAG,OAAOG,OAAO,CAACH,KAAf,KAAyB,UAAzB,GACVG,OAAO,CAACH,KAAR,CAAcxC,SAAd,CADU,GAEV2C,OAAO,CAACH,KAFZ;IAIA,IAAI,CAAC5B,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAD,IAA8B,CAAC2B,KAAnC,EACE5B,OAAO,CAACgC,GAAR,CAAY,YAAZ,EAA0B,OAA1B,EA9CmC,CAgDrC;;IACA,MAAM;MACJ5B,EADI;MAEJC,IAFI;MAGJC,OAHI;MAIJC,gBAJI;MAKJC,GALI;MAMJC,OANI;MAOJC,SAPI;MAQJC,MARI;MASJC,gBATI;MAUJC,GAVI;MAWJC,UAXI;MAYJC,GAZI;MAaJC,kBAbI;MAcJI,aAdI;MAeJC,cAfI;MAgBJC,UAhBI;MAiBJC;IAjBI,IAkBFQ,OAAO,CAAC5D,SAAD,CAlBX,CAjDqC,CAqErC;IACA;;IAEA,OAAO,EACL,GAAGiB,SADE;MAELG,MAAM,EAAEwC,OAAO,CAACxC,MAFX;MAGLS,OAAO,EAAEpC,2BAA2B,CAACoC,OAAD,CAH/B;MAIL4B,KAJK;MAKLxB,EALK;MAMLC,IANK;MAOLC,OAPK;MAQLC,gBARK;MASLC,GATK;MAULC,OAVK;MAWLC,SAXK;MAYLC,MAZK;MAaLC,gBAbK;MAcLC,GAdK;MAeLC,UAfK;MAgBLC,GAhBK;MAiBLC,kBAjBK;MAkBLI,aAlBK;MAmBLC,cAnBK;MAoBLC,UApBK;MAqBLC;IArBK,CAAP;EAuBD;;AA9NwB;;AAiO3BiB,MAAM,CAACC,OAAP,GAAiBvD,OAAjB;AAEAJ,MAAM,CAAC4D,gBAAP,CAAwBxD,OAAO,CAACyD,SAAhC,EAA2C;EACzCpD,MAAM,EAAE;IAAEqD,UAAU,EAAE;EAAd,CADiC;EAEzCvD,GAAG,EAAE;IAAEuD,UAAU,EAAE;EAAd,CAFoC;EAGzC5C,OAAO,EAAE;IAAE4C,UAAU,EAAE;EAAd,CAHgC;EAIzCpB,QAAQ,EAAE;IAAEoB,UAAU,EAAE;EAAd,CAJ+B;EAKzC9E,KAAK,EAAE;IAAE8E,UAAU,EAAE;EAAd,CALkC;EAMzChE,MAAM,EAAE;IAAEgE,UAAU,EAAE;EAAd;AANiC,CAA3C"},"metadata":{},"sourceType":"script"}