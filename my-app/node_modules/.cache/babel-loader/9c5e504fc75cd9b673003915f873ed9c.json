{"ast":null,"code":"'use strict';\n\nconst {\n  inspect\n} = require('util'); // adapted from node's internal/errors\n// https://github.com/nodejs/node/blob/c8a04049/lib/internal/errors.js\n// close copy of node's internal SystemError class.\n\n\nclass SystemError {\n  constructor(code, prefix, context) {\n    // XXX context.code is undefined in all constructors used in cp/polyfill\n    // that may be a bug copied from node, maybe the constructor should use\n    // `code` not `errno`?  nodejs/node#41104\n    let message = `${prefix}: ${context.syscall} returned ` + `${context.code} (${context.message})`;\n\n    if (context.path !== undefined) {\n      message += ` ${context.path}`;\n    }\n\n    if (context.dest !== undefined) {\n      message += ` => ${context.dest}`;\n    }\n\n    this.code = code;\n    Object.defineProperties(this, {\n      name: {\n        value: 'SystemError',\n        enumerable: false,\n        writable: true,\n        configurable: true\n      },\n      message: {\n        value: message,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      },\n      info: {\n        value: context,\n        enumerable: true,\n        configurable: true,\n        writable: false\n      },\n      errno: {\n        get() {\n          return context.errno;\n        },\n\n        set(value) {\n          context.errno = value;\n        },\n\n        enumerable: true,\n        configurable: true\n      },\n      syscall: {\n        get() {\n          return context.syscall;\n        },\n\n        set(value) {\n          context.syscall = value;\n        },\n\n        enumerable: true,\n        configurable: true\n      }\n    });\n\n    if (context.path !== undefined) {\n      Object.defineProperty(this, 'path', {\n        get() {\n          return context.path;\n        },\n\n        set(value) {\n          context.path = value;\n        },\n\n        enumerable: true,\n        configurable: true\n      });\n    }\n\n    if (context.dest !== undefined) {\n      Object.defineProperty(this, 'dest', {\n        get() {\n          return context.dest;\n        },\n\n        set(value) {\n          context.dest = value;\n        },\n\n        enumerable: true,\n        configurable: true\n      });\n    }\n  }\n\n  toString() {\n    return `${this.name} [${this.code}]: ${this.message}`;\n  }\n\n  [Symbol.for('nodejs.util.inspect.custom')](_recurseTimes, ctx) {\n    return inspect(this, { ...ctx,\n      getters: true,\n      customInspect: false\n    });\n  }\n\n}\n\nfunction E(code, message) {\n  module.exports[code] = class NodeError extends SystemError {\n    constructor(ctx) {\n      super(code, message, ctx);\n    }\n\n  };\n}\n\nE('ERR_FS_CP_DIR_TO_NON_DIR', 'Cannot overwrite directory with non-directory');\nE('ERR_FS_CP_EEXIST', 'Target already exists');\nE('ERR_FS_CP_EINVAL', 'Invalid src or dest');\nE('ERR_FS_CP_FIFO_PIPE', 'Cannot copy a FIFO pipe');\nE('ERR_FS_CP_NON_DIR_TO_DIR', 'Cannot overwrite non-directory with directory');\nE('ERR_FS_CP_SOCKET', 'Cannot copy a socket file');\nE('ERR_FS_CP_SYMLINK_TO_SUBDIRECTORY', 'Cannot overwrite symlink in subdirectory of self');\nE('ERR_FS_CP_UNKNOWN', 'Cannot copy an unknown file type');\nE('ERR_FS_EISDIR', 'Path is a directory');\nmodule.exports.ERR_INVALID_ARG_TYPE = class ERR_INVALID_ARG_TYPE extends Error {\n  constructor(name, expected, actual) {\n    super();\n    this.code = 'ERR_INVALID_ARG_TYPE';\n    this.message = `The ${name} argument must be ${expected}. Received ${typeof actual}`;\n  }\n\n};","map":{"version":3,"names":["inspect","require","SystemError","constructor","code","prefix","context","message","syscall","path","undefined","dest","Object","defineProperties","name","value","enumerable","writable","configurable","info","errno","get","set","defineProperty","toString","Symbol","for","_recurseTimes","ctx","getters","customInspect","E","module","exports","NodeError","ERR_INVALID_ARG_TYPE","Error","expected","actual"],"sources":["C:/Users/Kamen/ML/AlgoTrader/node_modules/@npmcli/fs/lib/errors.js"],"sourcesContent":["'use strict'\nconst { inspect } = require('util')\n\n// adapted from node's internal/errors\n// https://github.com/nodejs/node/blob/c8a04049/lib/internal/errors.js\n\n// close copy of node's internal SystemError class.\nclass SystemError {\n  constructor (code, prefix, context) {\n    // XXX context.code is undefined in all constructors used in cp/polyfill\n    // that may be a bug copied from node, maybe the constructor should use\n    // `code` not `errno`?  nodejs/node#41104\n    let message = `${prefix}: ${context.syscall} returned ` +\n                  `${context.code} (${context.message})`\n\n    if (context.path !== undefined) {\n      message += ` ${context.path}`\n    }\n    if (context.dest !== undefined) {\n      message += ` => ${context.dest}`\n    }\n\n    this.code = code\n    Object.defineProperties(this, {\n      name: {\n        value: 'SystemError',\n        enumerable: false,\n        writable: true,\n        configurable: true,\n      },\n      message: {\n        value: message,\n        enumerable: false,\n        writable: true,\n        configurable: true,\n      },\n      info: {\n        value: context,\n        enumerable: true,\n        configurable: true,\n        writable: false,\n      },\n      errno: {\n        get () {\n          return context.errno\n        },\n        set (value) {\n          context.errno = value\n        },\n        enumerable: true,\n        configurable: true,\n      },\n      syscall: {\n        get () {\n          return context.syscall\n        },\n        set (value) {\n          context.syscall = value\n        },\n        enumerable: true,\n        configurable: true,\n      },\n    })\n\n    if (context.path !== undefined) {\n      Object.defineProperty(this, 'path', {\n        get () {\n          return context.path\n        },\n        set (value) {\n          context.path = value\n        },\n        enumerable: true,\n        configurable: true,\n      })\n    }\n\n    if (context.dest !== undefined) {\n      Object.defineProperty(this, 'dest', {\n        get () {\n          return context.dest\n        },\n        set (value) {\n          context.dest = value\n        },\n        enumerable: true,\n        configurable: true,\n      })\n    }\n  }\n\n  toString () {\n    return `${this.name} [${this.code}]: ${this.message}`\n  }\n\n  [Symbol.for('nodejs.util.inspect.custom')] (_recurseTimes, ctx) {\n    return inspect(this, {\n      ...ctx,\n      getters: true,\n      customInspect: false,\n    })\n  }\n}\n\nfunction E (code, message) {\n  module.exports[code] = class NodeError extends SystemError {\n    constructor (ctx) {\n      super(code, message, ctx)\n    }\n  }\n}\n\nE('ERR_FS_CP_DIR_TO_NON_DIR', 'Cannot overwrite directory with non-directory')\nE('ERR_FS_CP_EEXIST', 'Target already exists')\nE('ERR_FS_CP_EINVAL', 'Invalid src or dest')\nE('ERR_FS_CP_FIFO_PIPE', 'Cannot copy a FIFO pipe')\nE('ERR_FS_CP_NON_DIR_TO_DIR', 'Cannot overwrite non-directory with directory')\nE('ERR_FS_CP_SOCKET', 'Cannot copy a socket file')\nE('ERR_FS_CP_SYMLINK_TO_SUBDIRECTORY', 'Cannot overwrite symlink in subdirectory of self')\nE('ERR_FS_CP_UNKNOWN', 'Cannot copy an unknown file type')\nE('ERR_FS_EISDIR', 'Path is a directory')\n\nmodule.exports.ERR_INVALID_ARG_TYPE = class ERR_INVALID_ARG_TYPE extends Error {\n  constructor (name, expected, actual) {\n    super()\n    this.code = 'ERR_INVALID_ARG_TYPE'\n    this.message = `The ${name} argument must be ${expected}. Received ${typeof actual}`\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}