{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\Kamen\\\\ML\\\\AlgoTrader\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\Kamen\\\\ML\\\\AlgoTrader\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\Kamen\\\\ML\\\\AlgoTrader\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"C:\\\\Users\\\\Kamen\\\\ML\\\\AlgoTrader\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\nvar Client = require('./client');\nvar defaults = require('./defaults');\nvar Connection = require('./connection');\nvar Pool = require('pg-pool');\nvar _require = require('pg-protocol'),\n  DatabaseError = _require.DatabaseError;\nvar poolFactory = function poolFactory(Client) {\n  return /*#__PURE__*/function (_Pool) {\n    _inherits(BoundPool, _Pool);\n    function BoundPool(options) {\n      _classCallCheck(this, BoundPool);\n      return _possibleConstructorReturn(this, _getPrototypeOf(BoundPool).call(this, options, Client));\n    }\n    return BoundPool;\n  }(Pool);\n};\nvar PG = function PG(clientConstructor) {\n  this.defaults = defaults;\n  this.Client = clientConstructor;\n  this.Query = this.Client.Query;\n  this.Pool = poolFactory(this.Client);\n  this._pools = [];\n  this.Connection = Connection;\n  this.types = require('pg-types');\n  this.DatabaseError = DatabaseError;\n};\nif (typeof process.env.NODE_PG_FORCE_NATIVE !== 'undefined') {\n  module.exports = new PG(require('./native'));\n} else {\n  module.exports = new PG(Client);\n\n  // lazy require native module...the native module may not have installed\n  Object.defineProperty(module.exports, 'native', {\n    configurable: true,\n    enumerable: false,\n    get: function get() {\n      var native = null;\n      try {\n        native = new PG(require('./native'));\n      } catch (err) {\n        if (err.code !== 'MODULE_NOT_FOUND') {\n          throw err;\n        }\n      }\n\n      // overwrite module.exports.native so that getter is never called again\n      Object.defineProperty(module.exports, 'native', {\n        value: native\n      });\n      return native;\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"script"}