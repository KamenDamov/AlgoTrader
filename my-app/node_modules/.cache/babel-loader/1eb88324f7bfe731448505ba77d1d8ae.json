{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kamen\\\\ML\\\\AlgoTrader\\\\my-app\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst express = require('express');\n\nconst sqlite3 = require('sqlite3').verbose();\n\nconst cors = require('cors');\n\nconst bodyParser = require('body-parser'); // Create a new Express app\n\n\nconst app = express();\nconst port = 5000; // Enable CORS\n\napp.use(cors()); // Enable body parsing middleware\n\napp.use(bodyParser.json()); // Create a new table in the database\n\ndb.serialize(() => {\n  db.run(`\n    CREATE TABLE IF NOT EXISTS users (\n    Username TEXT NOT NULL,\n    Email TEXT NOT NULL,\n    Password TEXT NOT NULL,\n    )\n  `);\n});\napp.post('/api/users', (req, res) => {\n  const {\n    name,\n    email,\n    password\n  } = req.body; // Insert a new user into the database\n\n  db.run('INSERT INTO users (name, email) VALUES (?, ?, ?)', [name, email, password], err => {\n    if (err) {\n      console.error(err);\n      return res.status(500).json({\n        error: 'Failed to insert user into database'\n      });\n    }\n\n    return res.status(200).json({\n      message: 'User created successfully'\n    });\n  });\n});\napp.listen(port, () => {\n  console.log(`Server listening at http://localhost:${port}`);\n}); //Use to create a new user\n\nclass RegistrationService extends React.Component {\n  updateUser(name, email) {\n    return axios.put(`/api/users/${name}`, {\n      name,\n      email,\n      password\n    });\n  }\n\n  render() {\n    return null;\n  }\n\n} //export default RegistrationService;\n\n\nfunction RegistrationForm() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const user = {\n      name,\n      email,\n      password\n    };\n    axios.post(\"/api/users\", user).then(response => {\n      console.log(response.data); // TODO: Add success message\n    }).catch(error => {\n      console.error(error); // TODO: Add error message\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hero-image\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Test your \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"AI and algorithmic trading strategy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), \" today\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Profile Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          value: name,\n          onChange: event => setName(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: email,\n          onChange: event => setEmail(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: event => setPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegistrationForm, \"U1DCtFSIKcmCKgpSr3L7jOg/618=\");\n\n_c = RegistrationForm;\nexport default RegistrationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"names":["React","useState","axios","express","require","sqlite3","verbose","cors","bodyParser","app","port","use","json","db","serialize","run","post","req","res","name","email","password","body","err","console","error","status","message","listen","log","RegistrationService","Component","updateUser","put","render","RegistrationForm","setName","setEmail","setPassword","handleSubmit","event","preventDefault","user","then","response","data","catch","target","value"],"sources":["C:/Users/Kamen/ML/AlgoTrader/my-app/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./index.css\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst express = require('express');\r\nconst sqlite3 = require('sqlite3').verbose();\r\nconst cors = require('cors');\r\nconst bodyParser = require('body-parser');\r\n\r\n// Create a new Express app\r\nconst app = express();\r\nconst port = 5000;\r\n\r\n// Enable CORS\r\napp.use(cors());\r\n\r\n// Enable body parsing middleware\r\napp.use(bodyParser.json());\r\n\r\n// Create a new table in the database\r\ndb.serialize(() => {\r\n  db.run(`\r\n    CREATE TABLE IF NOT EXISTS users (\r\n    Username TEXT NOT NULL,\r\n    Email TEXT NOT NULL,\r\n    Password TEXT NOT NULL,\r\n    )\r\n  `);\r\n});\r\n\r\napp.post('/api/users', (req, res) => {\r\n  const { name, email, password } = req.body;\r\n\r\n  // Insert a new user into the database\r\n  db.run('INSERT INTO users (name, email) VALUES (?, ?, ?)', [name, email, password], (err) => {\r\n    if (err) {\r\n      console.error(err);\r\n      return res.status(500).json({ error: 'Failed to insert user into database' });\r\n    }\r\n\r\n    return res.status(200).json({ message: 'User created successfully' });\r\n  });\r\n});\r\n  app.listen(port, () => {\r\n    console.log(`Server listening at http://localhost:${port}`);\r\n  });\r\n\r\n//Use to create a new user\r\nclass RegistrationService extends React.Component {\r\n  updateUser(name, email) {\r\n    return axios.put(`/api/users/${name}`, { name, email, password });\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\n//export default RegistrationService;\r\n\r\nfunction RegistrationForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\")\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    \r\n    const user = { name, email, password };\r\n\r\n    axios.post(\"/api/users\", user)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        // TODO: Add success message\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        // TODO: Add error message\r\n      })};\r\n\r\n  return (\r\n    <div className=\"hero-image\">\r\n      <div className=\"form-container\">\r\n        <h2>\r\n          Test your <span>AI and algorithmic trading strategy</span> today\r\n        </h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <label htmlFor=\"name\">Profile Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={(event) => setName(event.target.value)}\r\n          />\r\n\r\n          <label htmlFor=\"email\">Email Address</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={(event) => setEmail(event.target.value)}\r\n          />\r\n\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={(event) => setPassword(event.target.value)}\r\n          />\r\n\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegistrationForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}