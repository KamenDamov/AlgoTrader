{"ast":null,"code":"module.exports = function () {\n  var dnsd = require('hbo-dnsd'),\n      dns = require('native-dns');\n\n  function Dns(config) {\n    var $this = this;\n    this.config = {};\n    this.config.host = process.env.DNSINTERFACE || config.dns.host;\n    this.config.port = process.env.DNSPORT || config.dns.port;\n    this.config.zone = process.env.DNSZONE || config.dns.zone;\n    this.config.ttl = process.env.DNSTTL || config.dns.ttl;\n    this.config.prefix = process.env.DNSPREFIX || config.dns.prefix;\n    this.config.primary = process.env.DNSPRIMARY || config.dns.primary;\n    this.config.secondary = process.env.DNSSECONDARY || config.dns.secondary;\n    this.config.timeout = process.env.DNSTIMEOUT || config.dns.timeout;\n    this.store = config.store;\n    this.meta = config.meta;\n    this.logger = config.logger;\n    this.logger.log('debug', \"dns-config=%j\", this.config, this.meta);\n    this.logger.log('debug', \"env=%j\", process.env, this.meta);\n    this.logger.log('debug', \"store=%j\", config.store, this.meta);\n  }\n\n  Dns.prototype.nativeDNS = function (dnsAddress, question, hostname, req, res, next) {\n    var timedout = false;\n    var $this = this,\n        nativeQuestion = dns.Question({\n      name: question.name,\n      type: question.type\n    }),\n        nativeReq = dns.Request({\n      question: nativeQuestion,\n      server: {\n        address: dnsAddress,\n        port: 53,\n        type: 'udp'\n      },\n      timeout: $this.config.timeout\n    });\n    nativeReq.on('timeout', function () {\n      if (dnsAddress === $this.config.secondary) {\n        $this.logger.log('error', '%s:%s/%s - %s - %s question:\"%s\" - %j -- timeout', req.connection.remoteAddress, req.connection.remotePort, req.connection.type, dnsAddress, hostname, question, res.answer, $this.meta);\n        return next(new Error('DNS:nativeDNS:timeout: ' + $this.config.secondary));\n      }\n\n      $this.logger.log('warn', '%s:%s/%s - %s - %s question:\"%s\" - %j -- timeout', req.connection.remoteAddress, req.connection.remotePort, req.connection.type, dnsAddress, hostname, question, res.answer, $this.meta);\n      timedout = true;\n      $this.nativeDNS($this.config.secondary, question, hostname, req, res, next);\n    });\n    nativeReq.on('message', function (err, answer) {\n      answer.answer.forEach(function (oneAnswer) {\n        answer = {\n          name: hostname,\n          type: question.type,\n          class: question.class,\n          data: oneAnswer.address,\n          ttl: oneAnswer.ttl\n        };\n        res.answer.push(answer);\n      });\n    });\n    nativeReq.on('end', function () {\n      if (!timedout) {\n        $this.logger.log('info', '%s:%s/%s - %s - %s question:\"%s\" - %j', req.connection.remoteAddress, req.connection.remotePort, req.connection.type, dnsAddress, hostname, question, res.answer, $this.meta);\n        next(null);\n      }\n    });\n    nativeReq.send();\n  };\n\n  Dns.prototype.resolver = function (req, res) {\n    var $this = this,\n        question = res.question[0],\n        hostname = question.name,\n        length = hostname.length,\n        answer = {},\n        key = this.config.prefix + hostname;\n    this.store.get(key, function (err, value) {\n      $this.logger.log('debug', '%s:%s/%s - local - %s question:\"%s\" - store key[%s] value[%s] err[%j]', req.connection.remoteAddress, req.connection.remotePort, req.connection.type, hostname, question, key, value, err, $this.meta);\n      var object;\n\n      if (!err && value) {\n        try {\n          object = JSON.parse(value);\n          $this.logger.log('debug', '%s:%s/%s - local - %s question:\"%s\" - store key[%s] value[%s] == object[%j]', req.connection.remoteAddress, req.connection.remotePort, req.connection.type, hostname, question, key, value, object, $this.meta);\n        } catch (e) {\n          err = new Error(\"Exception [\" + util.inspect(e, true) + \"] while parsing store response [\" + value + \"]\");\n          $this.logger.log('error', '%s:%s/%s - local - %s question:\"%s\" - store key[%s] value[%s]', req.connection.remoteAddress, req.connection.remotePort, req.connection.type, hostname, question, key, value, $this.meta);\n        }\n      }\n\n      if (!err && object && object.hasOwnProperty(question.type)) {\n        answer = {\n          name: hostname,\n          type: question.type,\n          class: question.class,\n          ttl: $this.config.ttl\n        };\n\n        if (object[question.type]) {\n          var vector = object[question.type] instanceof Array ? object[question.type] : [object[question.type]];\n          vector.forEach(function (data) {\n            answer.data = '' + data;\n            res.answer.push(answer);\n            $this.logger.log('info', '%s:%s/%s - local - %s question:\"%s\" - %j', req.connection.remoteAddress, req.connection.remotePort, req.connection.type, hostname, question, answer, $this.meta);\n          });\n        } else {\n          res.answer.push(answer);\n          $this.logger.log('info', '%s:%s/%s - local - %s question:\"%s\" - %j', req.connection.remoteAddress, req.connection.remotePort, req.connection.type, hostname, question, answer, $this.meta);\n        }\n\n        return res.end();\n      } // Log the error and try with the external DNS\n\n\n      if (err) {\n        $this.logger.log('error', 'dns/local GET hostname \"%s\" - err=%j', hostname, err, $this.meta);\n      } // Send the requestion to the DNSPRIMARY and DNSSECONDARY\n\n\n      $this.nativeDNS($this.config.primary, question, hostname, req, res, function (err) {\n        if (err) {\n          $this.logger.log('error', '%s:%s/%s - local - %s question:\"%s\" - %j -- ERROR:%j', req.connection.remoteAddress, req.connection.remotePort, req.connection.type, hostname, question, res.answer, err, $this.meta);\n        }\n\n        res.end();\n      });\n    });\n  };\n\n  Dns.prototype.start = function () {\n    var $this = this;\n    this.server = dnsd.createServer(function (req, res) {\n      $this.resolver(req, res);\n    });\n    this.server.zone($this.config.zone, 'ns1.' + $this.config.zone, 'us@' + $this.config.zone, 'now', '2h', '30m', '2w', '10m').listen($this.config.port, $this.config.host);\n  };\n\n  function create(pkgConfig) {\n    return new Dns(pkgConfig);\n  }\n\n  return {\n    create: create\n  };\n}();","map":{"version":3,"names":["module","exports","dnsd","require","dns","Dns","config","$this","host","process","env","DNSINTERFACE","port","DNSPORT","zone","DNSZONE","ttl","DNSTTL","prefix","DNSPREFIX","primary","DNSPRIMARY","secondary","DNSSECONDARY","timeout","DNSTIMEOUT","store","meta","logger","log","prototype","nativeDNS","dnsAddress","question","hostname","req","res","next","timedout","nativeQuestion","Question","name","type","nativeReq","Request","server","address","on","connection","remoteAddress","remotePort","answer","Error","err","forEach","oneAnswer","class","data","push","send","resolver","length","key","get","value","object","JSON","parse","e","util","inspect","hasOwnProperty","vector","Array","end","start","createServer","listen","create","pkgConfig"],"sources":["C:/Users/Kamen/ML/AlgoTrader/node_modules/dns/lib/dns.js"],"sourcesContent":["module.exports = function () {\r\n    var dnsd   = require('hbo-dnsd'),\r\n        dns    = require('native-dns');\r\n\r\n    function Dns(config) {\r\n        var $this    = this;\r\n        this.config  = {};\r\n        this.config.host       = process.env.DNSINTERFACE             || config.dns.host;\r\n        this.config.port       = process.env.DNSPORT                  || config.dns.port;\r\n        this.config.zone       = process.env.DNSZONE                  || config.dns.zone;\r\n        this.config.ttl        = process.env.DNSTTL                   || config.dns.ttl;\r\n        this.config.prefix     = process.env.DNSPREFIX                || config.dns.prefix;\r\n        this.config.primary    = process.env.DNSPRIMARY               || config.dns.primary;\r\n        this.config.secondary  = process.env.DNSSECONDARY             || config.dns.secondary;\r\n        this.config.timeout    = process.env.DNSTIMEOUT               || config.dns.timeout;\r\n        this.store             = config.store;\r\n        this.meta              = config.meta;\r\n        this.logger            = config.logger;\r\n        this.logger.log('debug', \"dns-config=%j\", this.config, this.meta);\r\n        this.logger.log('debug', \"env=%j\", process.env, this.meta);\r\n        this.logger.log('debug', \"store=%j\", config.store, this.meta);\r\n    }\r\n\r\n    Dns.prototype.nativeDNS = function (dnsAddress, question, hostname, req, res, next) {\r\n        var timedout = false;\r\n        var $this = this,\r\n            nativeQuestion = dns.Question({\r\n                                name : question.name,\r\n                                type : question.type\r\n                             }),\r\n            nativeReq = dns.Request({\r\n                            question : nativeQuestion,\r\n                            server   : { \r\n                                address : dnsAddress, \r\n                                port    : 53, \r\n                                type    : 'udp'\r\n                            },\r\n                            timeout: $this.config.timeout\r\n                        });\r\n\r\n        nativeReq.on('timeout', function () {\r\n            if (dnsAddress === $this.config.secondary) {\r\n                $this.logger.log('error', '%s:%s/%s - %s - %s question:\"%s\" - %j -- timeout', req.connection.remoteAddress, req.connection.remotePort, req.connection.type, dnsAddress, hostname, question, res.answer, $this.meta);\r\n                return next(new Error('DNS:nativeDNS:timeout: ' + $this.config.secondary));\r\n            }\r\n            $this.logger.log('warn', '%s:%s/%s - %s - %s question:\"%s\" - %j -- timeout', req.connection.remoteAddress, req.connection.remotePort, req.connection.type, dnsAddress, hostname, question, res.answer, $this.meta);\r\n            timedout = true;\r\n            $this.nativeDNS($this.config.secondary, question, hostname, req, res, next);\r\n        });\r\n\r\n        nativeReq.on('message', function (err, answer) {\r\n            answer.answer.forEach(function (oneAnswer) {\r\n                answer = {\r\n                    name : hostname,\r\n                    type : question.type,\r\n                    class: question.class,\r\n                    data : oneAnswer.address,\r\n                    ttl  : oneAnswer.ttl\r\n                };\r\n                res.answer.push(answer);\r\n            });\r\n        });\r\n\r\n        nativeReq.on('end', function () {\r\n            if (!timedout) {\r\n                $this.logger.log('info', '%s:%s/%s - %s - %s question:\"%s\" - %j', req.connection.remoteAddress, req.connection.remotePort, req.connection.type, dnsAddress, hostname, question, res.answer, $this.meta);\r\n                next(null);\r\n            }\r\n        });\r\n\r\n        nativeReq.send();\r\n    };\r\n\r\n    Dns.prototype.resolver = function(req, res) {\r\n        var $this        = this,\r\n            question     = res.question[0], \r\n            hostname     = question.name, \r\n            length       = hostname.length, \r\n            answer       = {},\r\n            key          = this.config.prefix + hostname;\r\n\r\n        this.store.get(key, function (err, value) {\r\n            $this.logger.log('debug', '%s:%s/%s - local - %s question:\"%s\" - store key[%s] value[%s] err[%j]', req.connection.remoteAddress, req.connection.remotePort, req.connection.type, hostname, question, key, value, err, $this.meta);\r\n            var object;\r\n\r\n            if (!err && value) {\r\n                try {\r\n                    object = JSON.parse(value);\r\n                    $this.logger.log('debug', '%s:%s/%s - local - %s question:\"%s\" - store key[%s] value[%s] == object[%j]', req.connection.remoteAddress, req.connection.remotePort, req.connection.type, hostname, question, key, value, object, $this.meta);\r\n                } catch (e) {\r\n                    err = new Error(\"Exception [\" + util.inspect(e, true) + \"] while parsing store response [\" + value + \"]\");\r\n                    $this.logger.log('error', '%s:%s/%s - local - %s question:\"%s\" - store key[%s] value[%s]', req.connection.remoteAddress, req.connection.remotePort, req.connection.type, hostname, question, key, value, $this.meta);\r\n                }\r\n            }\r\n            if (!err && object && object.hasOwnProperty(question.type)) {\r\n                answer = {\r\n                    name: hostname,\r\n                    type: question.type,\r\n                    class: question.class,\r\n                    ttl: $this.config.ttl\r\n                };\r\n                if (object[question.type]) {\r\n                    var vector = object[question.type] instanceof Array ? object[question.type] : [object[question.type]];\r\n                    vector.forEach(function(data) {\r\n                        answer.data = ''+data;\r\n                        res.answer.push(answer);\r\n                        $this.logger.log('info', '%s:%s/%s - local - %s question:\"%s\" - %j', req.connection.remoteAddress, req.connection.remotePort, req.connection.type, hostname, question, answer, $this.meta);\r\n                    });\r\n                } else {\r\n                    res.answer.push(answer);\r\n                    $this.logger.log('info', '%s:%s/%s - local - %s question:\"%s\" - %j', req.connection.remoteAddress, req.connection.remotePort, req.connection.type, hostname, question, answer, $this.meta);\r\n                }\r\n                return res.end();\r\n            }\r\n            // Log the error and try with the external DNS\r\n            if (err) {\r\n                $this.logger.log('error', 'dns/local GET hostname \"%s\" - err=%j', hostname, err, $this.meta);\r\n            }\r\n            // Send the requestion to the DNSPRIMARY and DNSSECONDARY\r\n            $this.nativeDNS($this.config.primary, question, hostname, req, res, function (err) {\r\n                if (err) {\r\n                    $this.logger.log('error', '%s:%s/%s - local - %s question:\"%s\" - %j -- ERROR:%j', req.connection.remoteAddress, req.connection.remotePort, req.connection.type, hostname, question, res.answer, err, $this.meta);\r\n                }\r\n                res.end();\r\n            });\r\n        });\r\n    };\r\n\r\n    Dns.prototype.start = function() {\r\n        var $this = this;\r\n        this.server = dnsd.createServer(function (req, res) {\r\n            $this.resolver(req, res);\r\n        });\r\n\r\n        this.server.zone($this.config.zone, \r\n                         'ns1.'+$this.config.zone, \r\n                         'us@'+$this.config.zone, \r\n                         'now', '2h', '30m', '2w', '10m'\r\n                        ).listen($this.config.port, $this.config.host);\r\n    };\r\n\r\n    function create(pkgConfig) {\r\n        return new Dns(pkgConfig);\r\n    }\r\n\r\n    return {\r\n        create : create\r\n    };\r\n}();\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}