{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kamen\\\\ML\\\\AlgoTrader\\\\my-app\\\\src\\\\components\\\\LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport React, { useState } from \"react\";\nimport axios from 'axios';\nimport \"./style/login.css\";\nimport './style/global.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginForm() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const user = {\n      name,\n      password\n    }; // Send login credentials to server and redirect to dashboard if successful\n\n    axios.post('/login', {\n      username,\n      password\n    }).then(response => {\n      if (response.data.success) {\n        navigate('/dashboard');\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n    axios.post(\"http://localhost:3001/login\", user).then(response => {\n      console.log(response.data);\n      console.log(\"Logged in\"); // Store the access token in frontend state or in a cookie/local storage\n    }).catch(error => {\n      console.error(error);\n      console.log(\"Can't log in\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hero-image\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          value: name,\n          onChange: event => setName(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: event => setPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"login\",\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"back-to-landing-page\",\n        children: \"Back to landing page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"Q3D0qnZ9tttG8x/WlHuqXUGjTo0=\");\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["Link","React","useState","axios","LoginForm","name","setName","password","setPassword","handleSubmit","event","preventDefault","user","post","username","then","response","data","success","navigate","catch","error","console","log","target","value"],"sources":["C:/Users/Kamen/ML/AlgoTrader/my-app/src/components/LoginForm.js"],"sourcesContent":["import {Link} from 'react-router-dom'\r\nimport React, { useState } from \"react\";\r\nimport axios from 'axios';\r\nimport \"./style/login.css\";\r\nimport './style/global.css';\r\n\r\n\r\nfunction LoginForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\")\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    \r\n    const user = { name, password };\r\n\r\n    // Send login credentials to server and redirect to dashboard if successful\r\n    axios.post('/login', { username, password }).then((response) => {\r\n      if (response.data.success) {\r\n        navigate('/dashboard');\r\n      }\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n\r\n  axios.post(\"http://localhost:3001/login\", user)\r\n    .then((response) => {\r\n      console.log(response.data);\r\n      console.log(\"Logged in\")\r\n      // Store the access token in frontend state or in a cookie/local storage\r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n      console.log(\"Can't log in\")\r\n    });\r\n    };\r\n\r\n  return (\r\n    <div className=\"hero-image\">\r\n      <div className=\"form-container\">\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n          <label htmlFor=\"name\">Username</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={(event) => setName(event.target.value)}\r\n          />\r\n\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={(event) => setPassword(event.target.value)}\r\n          />\r\n          \r\n          <button type=\"login\">Log in</button>\r\n        </form>\r\n        <Link to=\"/\" className=\"back-to-landing-page\">Back to landing page</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n"],"mappings":";;;AAAA,SAAQA,IAAR,QAAmB,kBAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,OAAO,oBAAP;;;AAGA,SAASC,SAAT,GAAqB;EAAA;;EACnB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;;EAEA,MAAMO,YAAY,GAAIC,KAAD,IAAW;IAC9BA,KAAK,CAACC,cAAN;IAEA,MAAMC,IAAI,GAAG;MAAEP,IAAF;MAAQE;IAAR,CAAb,CAH8B,CAK9B;;IACAJ,KAAK,CAACU,IAAN,CAAW,QAAX,EAAqB;MAAEC,QAAF;MAAYP;IAAZ,CAArB,EAA6CQ,IAA7C,CAAmDC,QAAD,IAAc;MAC9D,IAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAlB,EAA2B;QACzBC,QAAQ,CAAC,YAAD,CAAR;MACD;IACF,CAJD,EAIGC,KAJH,CAIUC,KAAD,IAAW;MAClBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACD,CAND;IAQFlB,KAAK,CAACU,IAAN,CAAW,6BAAX,EAA0CD,IAA1C,EACGG,IADH,CACSC,QAAD,IAAc;MAClBM,OAAO,CAACC,GAAR,CAAYP,QAAQ,CAACC,IAArB;MACAK,OAAO,CAACC,GAAR,CAAY,WAAZ,EAFkB,CAGlB;IACD,CALH,EAMGH,KANH,CAMUC,KAAD,IAAW;MAChBC,OAAO,CAACD,KAAR,CAAcA,KAAd;MACAC,OAAO,CAACC,GAAR,CAAY,cAAZ;IACD,CATH;EAUG,CAxBH;;EA0BA,oBACE;IAAK,SAAS,EAAC,YAAf;IAAA,uBACE;MAAK,SAAS,EAAC,gBAAf;MAAA,wBAEE;QAAM,QAAQ,EAAEd,YAAhB;QAAA,wBACE;UAAO,OAAO,EAAC,MAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UACE,IAAI,EAAC,MADP;UAEE,EAAE,EAAC,MAFL;UAGE,IAAI,EAAC,MAHP;UAIE,KAAK,EAAEJ,IAJT;UAKE,QAAQ,EAAGK,KAAD,IAAWJ,OAAO,CAACI,KAAK,CAACc,MAAN,CAAaC,KAAd;QAL9B;UAAA;UAAA;UAAA;QAAA,QAFF,eAUE;UAAO,OAAO,EAAC,UAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAVF,eAWE;UACE,IAAI,EAAC,UADP;UAEE,EAAE,EAAC,UAFL;UAGE,IAAI,EAAC,UAHP;UAIE,KAAK,EAAElB,QAJT;UAKE,QAAQ,EAAGG,KAAD,IAAWF,WAAW,CAACE,KAAK,CAACc,MAAN,CAAaC,KAAd;QALlC;UAAA;UAAA;UAAA;QAAA,QAXF,eAmBE;UAAQ,IAAI,EAAC,OAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAnBF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAuBE,QAAC,IAAD;QAAM,EAAE,EAAC,GAAT;QAAa,SAAS,EAAC,sBAAvB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAvBF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA6BD;;GA3DQrB,S;;KAAAA,S;AA6DT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}